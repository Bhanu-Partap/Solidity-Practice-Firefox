{
	"id": "5f598ca9aac0ba6d80512247e11074d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"../interface/IIdentityRegistryStorage.sol\";\nimport \"../storage/IRSStorage.sol\";\n\ncontract IdentityRegistryStorage is\n    IIdentityRegistryStorage,\n    AccessControlUpgradeable,\n    OwnableUpgradeable,\n    IRSStorage\n{\n    bytes32 public constant AGENT_ROLE =\n        0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709;\n\n    bytes32 public constant OWNER_ROLE =\n        0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e;\n\n    function init() external initializer {\n        _grantRole(bytes32(0), _msgSender());\n\n        _grantRole(OWNER_ROLE, _msgSender());\n\n        _grantRole(AGENT_ROLE, _msgSender());\n        __Ownable_init();\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-addIdentityToStorage}.\n     */\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external override onlyRole(AGENT_ROLE) {\n        require(\n            _userAddress != address(0) && address(_identity) != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            address(_identities[_userAddress].identityContract) == address(0),\n            \"address stored already\"\n        );\n        _identities[_userAddress].identityContract = _identity;\n        _identities[_userAddress].investorCountry = _country;\n        emit IdentityStored(_userAddress, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-modifyStoredIdentity}.\n     */\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity)\n        external\n        override\n        onlyRole(AGENT_ROLE)\n    {\n        require(\n            _userAddress != address(0) && address(_identity) != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            address(_identities[_userAddress].identityContract) != address(0),\n            \"address not stored yet\"\n        );\n        IIdentity oldIdentity = _identities[_userAddress].identityContract;\n        _identities[_userAddress].identityContract = _identity;\n        emit IdentityModified(oldIdentity, _identity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-modifyStoredInvestorCountry}.\n     */\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country)\n        external\n        override\n        onlyRole(AGENT_ROLE)\n    {\n        require(_userAddress != address(0), \"invalid argument - zero address\");\n        require(\n            address(_identities[_userAddress].identityContract) != address(0),\n            \"address not stored yet\"\n        );\n        _identities[_userAddress].investorCountry = _country;\n        emit CountryModified(_userAddress, _country);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-removeIdentityFromStorage}.\n     */\n    function removeIdentityFromStorage(address _userAddress)\n        external\n        override\n        onlyRole(AGENT_ROLE)\n    {\n        require(_userAddress != address(0), \"invalid argument - zero address\");\n        require(\n            address(_identities[_userAddress].identityContract) != address(0),\n            \"address not stored yet\"\n        );\n        IIdentity oldIdentity = _identities[_userAddress].identityContract;\n        delete _identities[_userAddress];\n        emit IdentityUnstored(_userAddress, oldIdentity);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-bindIdentityRegistry}.\n     */\n    function bindIdentityRegistry(address _identityRegistry) external override {\n        require(\n            _identityRegistry != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            _identityRegistries.length < 300,\n            \"cannot bind more than 300 IR to 1 IRS\"\n        );\n        _grantRole(AGENT_ROLE, _identityRegistry);\n        _identityRegistries.push(_identityRegistry);\n        emit IdentityRegistryBound(_identityRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-unbindIdentityRegistry}.\n     */\n    function unbindIdentityRegistry(address _identityRegistry)\n        external\n        override\n    {\n        require(\n            _identityRegistry != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            _identityRegistries.length > 0,\n            \"identity registry is not stored\"\n        );\n        uint256 length = _identityRegistries.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_identityRegistries[i] == _identityRegistry) {\n                _identityRegistries[i] = _identityRegistries[length - 1];\n                _identityRegistries.pop();\n                break;\n            }\n        }\n        _revokeRole(AGENT_ROLE, _identityRegistry);\n        emit IdentityRegistryUnbound(_identityRegistry);\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-linkedIdentityRegistries}.\n     */\n    function linkedIdentityRegistries()\n        external\n        view\n        override\n        returns (address[] memory)\n    {\n        return _identityRegistries;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-storedIdentity}.\n     */\n    function storedIdentity(address _userAddress)\n        external\n        view\n        override\n        returns (IIdentity)\n    {\n        return _identities[_userAddress].identityContract;\n    }\n\n    /**\n     *  @dev See {IIdentityRegistryStorage-storedInvestorCountry}.\n     */\n    function storedInvestorCountry(address _userAddress)\n        external\n        view\n        override\n        returns (uint16)\n    {\n        return _identities[_userAddress].investorCountry;\n    }\n}\n"
			},
			"erc3643/erc3643/registry/storage/IRSStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ncontract IRSStorage {\n    // struct containing the identity contract and the country of the user\n    struct Identity {\n        IIdentity identityContract;\n        uint16 investorCountry;\n    }\n    // mapping between a user address and the corresponding identity\n    mapping(address => Identity) internal _identities;\n\n    //array of Identity Registries linked to this storage\n    address[] internal _identityRegistries;\n\n   \n    uint256[49] private __gap;\n}\n"
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IIdentity.sol\";\n\ninterface IIdentityRegistryStorage {\n    event IdentityStored(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityUnstored(\n        address indexed investorAddress,\n        IIdentity indexed identity\n    );\n\n    event IdentityModified(\n        IIdentity indexed oldIdentity,\n        IIdentity indexed newIdentity\n    );\n\n    event CountryModified(\n        address indexed investorAddress,\n        uint16 indexed country\n    );\n\n    event IdentityRegistryBound(address indexed identityRegistry);\n\n    event IdentityRegistryUnbound(address indexed identityRegistry);\n\n    /// functions\n\n    function addIdentityToStorage(\n        address _userAddress,\n        IIdentity _identity,\n        uint16 _country\n    ) external;\n\n    function removeIdentityFromStorage(address _userAddress) external;\n\n    function modifyStoredInvestorCountry(address _userAddress, uint16 _country)\n        external;\n\n    function modifyStoredIdentity(address _userAddress, IIdentity _identity)\n        external;\n\n    function bindIdentityRegistry(address _identityRegistry) external;\n\n    function unbindIdentityRegistry(address _identityRegistry) external;\n\n    function linkedIdentityRegistries()\n        external\n        view\n        returns (address[] memory);\n\n    function storedIdentity(address _userAddress)\n        external\n        view\n        returns (IIdentity);\n\n    function storedInvestorCountry(address _userAddress)\n        external\n        view\n        returns (uint16);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 811,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 814,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1344,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1617,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 303,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)298_storage)"
							},
							{
								"astId": 598,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)298_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)298_storage"
							},
							"t_struct(RoleData)298_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 295,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 297,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"IAccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 811,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 814,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1344,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 683,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 803,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 811,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 814,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/storage/IRSStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 811,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 814,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1344,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF 0xDF 0xED LOG1 DUP1 0xE6 PUSH16 0x4B8B75002C746AB9537485303A6E3B5C CREATE PUSH16 0x7974A4F4103464736F6C634300081100 CALLER ",
							"sourceMap": "242:2603:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xF 0xDF 0xED LOG1 DUP1 0xE6 PUSH16 0x4B8B75002C746AB9537485303A6E3B5C CREATE PUSH16 0x7974A4F4103464736F6C634300081100 CALLER ",
							"sourceMap": "242:2603:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d50fdfeda180e66f4b8b75002c746ab9537485303a6e3b5cf06f7974a4f4103464736f6c63430008110033",
									".code": [
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/storage/IRSStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 811,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 814,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1617,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xB8 MULMOD EXTCODESIZE SHL PUSH6 0x7AE38F6999BC DUP13 0x1F 0xA6 LOG2 RETURNDATACOPY DUP5 PUSH27 0xE499C2639BB5A6D367BF17E9CA64736F6C63430008110033000000 ",
							"sourceMap": "202:12593:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D 0xB8 MULMOD EXTCODESIZE SHL PUSH6 0x7AE38F6999BC DUP13 0x1F 0xA6 LOG2 RETURNDATACOPY DUP5 PUSH27 0xE499C2639BB5A6D367BF17E9CA64736F6C63430008110033000000 ",
							"sourceMap": "202:12593:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205db8093b1b657ae38f6999bc8c1fa6a23e847ae499c2639bb5a6d367bf17e9ca64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/storage/IRSStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"SignedMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH31 0x6E824ECCC311230483B8E2D2EDEFDE6A10BE3E1F833FEFBD3D85270E78DA64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "215:1058:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH31 0x6E824ECCC311230483B8E2D2EDEFDE6A10BE3E1F833FEFBD3D85270E78DA64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "215:1058:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c57e6e824eccc311230483b8e2d2edefde6a10be3e1f833fefbd3d85270e78da64736f6c63430008110033",
									".code": [
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/storage/IRSStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol": {
				"IdentityRegistryStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AGENT_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OWNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"details": "See {IIdentityRegistryStorage-addIdentityToStorage}."
							},
							"bindIdentityRegistry(address)": {
								"details": "See {IIdentityRegistryStorage-bindIdentityRegistry}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"linkedIdentityRegistries()": {
								"details": "See {IIdentityRegistryStorage-linkedIdentityRegistries}."
							},
							"modifyStoredIdentity(address,address)": {
								"details": "See {IIdentityRegistryStorage-modifyStoredIdentity}."
							},
							"modifyStoredInvestorCountry(address,uint16)": {
								"details": "See {IIdentityRegistryStorage-modifyStoredInvestorCountry}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeIdentityFromStorage(address)": {
								"details": "See {IIdentityRegistryStorage-removeIdentityFromStorage}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"storedIdentity(address)": {
								"details": "See {IIdentityRegistryStorage-storedIdentity}."
							},
							"storedInvestorCountry(address)": {
								"details": "See {IIdentityRegistryStorage-storedInvestorCountry}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unbindIdentityRegistry(address)": {
								"details": "See {IIdentityRegistryStorage-unbindIdentityRegistry}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":375:5879  contract IdentityRegistryStorage is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":375:5879  contract IdentityRegistryStorage is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x97a012f7\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xcf191bcd\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xcf191bcd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe58378bb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe805cf86\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x97a012f7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f3418d5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa53410dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbf9eb959\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x690a49f9\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x690a49f9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x727e13bc\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7988d3a5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x22459e18\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":516:627  bytes32 public constant AGENT_ROLE =... */\n    tag_4:\n      tag_34\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":643:668   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":631:633   */\n      0x20\n        /* \"#utility.yul\":616:634   */\n      add\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":516:627  bytes32 public constant AGENT_ROLE =... */\n      tag_32\n        /* \"#utility.yul\":497:674   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4834:4963  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_5:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4908:4915  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4940  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4956  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4834:4963  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      tag_43\n      tag_48\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3711:4197  function bindIdentityRegistry(address _identityRegistry) external override {... */\n    tag_8:\n      tag_43\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_43\n      tag_55\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5683:5877  function storedInvestorCountry(address _userAddress)... */\n    tag_10:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5829:5854  _identities[_userAddress] */\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5800:5806  uint16 */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5829:5854  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5829:5840  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5829:5854  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5829:5870  _identities[_userAddress].investorCountry */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xffff\n      and\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5683:5877  function storedInvestorCountry(address _userAddress)... */\n      jump\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":1746:1752   */\n      0xffff\n        /* \"#utility.yul\":1734:1753   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1716:1754   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"#utility.yul\":1689:1707   */\n      add\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5683:5877  function storedInvestorCountry(address _userAddress)... */\n      tag_32\n        /* \"#utility.yul\":1572:1760   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5403:5594  function storedIdentity(address _userAddress)... */\n    tag_11:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5545:5570  _identities[_userAddress] */\n      swap1\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5513:5522  IIdentity */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5545:5570  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5545:5556  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5545:5570  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5545:5587  _identities[_userAddress].identityContract */\n      sload\n      and\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5403:5594  function storedIdentity(address _userAddress)... */\n      jump\n    tag_61:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1946:1978   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1928:1979   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1916:1918   */\n      0x20\n        /* \"#utility.yul\":1901:1919   */\n      add\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5403:5594  function storedIdentity(address _userAddress)... */\n      tag_32\n        /* \"#utility.yul\":1765:1985   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x97))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump(tag_61)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_13:\n      tag_28\n      tag_71\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4287:5064  function unbindIdentityRegistry(address _identityRegistry)... */\n    tag_14:\n      tag_43\n      tag_75\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2509:2999  function modifyStoredInvestorCountry(address _userAddress, uint16 _country)... */\n    tag_15:\n      tag_43\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2450:2499  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2495:2499  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2450:2499  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1050:1690  function addIdentityToStorage(... */\n    tag_17:\n      tag_43\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5156:5321  function linkedIdentityRegistries()... */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3092:3623  function removeIdentityFromStorage(address _userAddress)... */\n    tag_19:\n      tag_43\n      tag_93\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5684:5831  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_20:\n      tag_43\n      tag_96\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":752:962  function init() external initializer {... */\n    tag_21:\n      tag_43\n      tag_99\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":634:745  bytes32 public constant OWNER_ROLE =... */\n    tag_22:\n      tag_34\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":679:745  0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e */\n      0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":634:745  bytes32 public constant OWNER_ROLE =... */\n      dup2\n      jump\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1778:2414  function modifyStoredIdentity(address _userAddress, IIdentity _identity)... */\n    tag_23:\n      tag_43\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_43\n      tag_108\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3114:3118  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3195  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3137:3235  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_112\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1168:1219  interfaceId == type(IERC165Upgradeable).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3199:3235  super.supportsInterface(interfaceId) */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3130:3235  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3029:3242  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4908:4915  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4940  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4956  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5397  _grantRole(role, account) */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5383:5387  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5389:5396  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5382  _grantRole */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5372:5397  _grantRole(role, account) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5259:5404  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6486  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6486  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4443:4445   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4425:4446   */\n      mstore\n        /* \"#utility.yul\":4482:4484   */\n      0x2f\n        /* \"#utility.yul\":4462:4480   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4455:4485   */\n      mstore\n        /* \"#utility.yul\":4521:4555   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":4501:4519   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4494:4556   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":4572:4590   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4565:4610   */\n      mstore\n        /* \"#utility.yul\":4627:4646   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6455:6538  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6575  _revokeRole(role, account) */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6574  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6575  _revokeRole(role, account) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6368:6582  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3711:4197  function bindIdentityRegistry(address _identityRegistry) external override {... */\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3817:3848  _identityRegistry != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3796:3905  require(... */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_133\n      jump\t// in\n    tag_131:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3936:3955  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3936:3962  _identityRegistries.length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3965:3968  300 */\n      0x012c\n      gt\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3915:4031  require(... */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5219:5221   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3915:4031  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5201:5222   */\n      mstore\n        /* \"#utility.yul\":5258:5260   */\n      0x25\n        /* \"#utility.yul\":5238:5256   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5231:5261   */\n      mstore\n        /* \"#utility.yul\":5297:5331   */\n      0x63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f20\n        /* \"#utility.yul\":5277:5295   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5270:5332   */\n      mstore\n      shl(0xd8, 0x3120495253)\n        /* \"#utility.yul\":5348:5366   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5341:5376   */\n      mstore\n        /* \"#utility.yul\":5393:5412   */\n      0x84\n      add\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3915:4031  require(... */\n      tag_126\n        /* \"#utility.yul\":5017:5418   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3915:4031  require(... */\n    tag_134:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4041:4082  _grantRole(AGENT_ROLE, _identityRegistry) */\n      tag_137\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4064:4081  _identityRegistry */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4041:4051  _grantRole */\n      tag_121\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4041:4082  _grantRole(AGENT_ROLE, _identityRegistry) */\n      jump\t// in\n    tag_137:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4092:4111  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4092:4135  _identityRegistries.push(_identityRegistry) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee1\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4150:4190  IdentityRegistryBound(_identityRegistry) */\n      mload(0x40)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4092:4135  _identityRegistries.push(_identityRegistry) */\n      swap1\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4150:4190  IdentityRegistryBound(_identityRegistry) */\n      0x500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb\n      swap2\n      log2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3711:4197  function bindIdentityRegistry(address _identityRegistry) external override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2155:2156  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2146  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3415:3419  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3450  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3444  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3450  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3438:3467  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3329:3474  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4287:5064  function unbindIdentityRegistry(address _identityRegistry)... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4415:4446  _identityRegistry != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4394:4503  require(... */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_133\n      jump\t// in\n    tag_150:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4534:4553  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4534:4560  _identityRegistries.length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4513:4621  require(... */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5625:5627   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4513:4621  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5607:5628   */\n      mstore\n        /* \"#utility.yul\":5664:5666   */\n      0x1f\n        /* \"#utility.yul\":5644:5662   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5637:5667   */\n      mstore\n        /* \"#utility.yul\":5703:5736   */\n      0x6964656e74697479207265676973747279206973206e6f742073746f72656400\n        /* \"#utility.yul\":5683:5701   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5676:5737   */\n      mstore\n        /* \"#utility.yul\":5754:5772   */\n      0x64\n      add\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4513:4621  require(... */\n      tag_126\n        /* \"#utility.yul\":5423:5778   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4513:4621  require(... */\n    tag_152:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4648:4667  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4648:4674  _identityRegistries.length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4631:4645  uint256 length */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4684:4949  for (uint256 i = 0; i < length; i++) {... */\n    tag_155:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4708:4714  length */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4704:4705  i */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4704:4714  i < length */\n      lt\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4684:4949  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4765:4782  _identityRegistry */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4739:4782  _identityRegistries[i] == _identityRegistry */\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4739:4758  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4759:4760  i */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4739:4761  _identityRegistries[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4739:4782  _identityRegistries[i] == _identityRegistry */\n      sub\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4735:4939  if (_identityRegistries[i] == _identityRegistry) {... */\n      tag_162\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4827:4846  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4847:4857  length - 1 */\n      tag_163\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4856:4857  1 */\n      0x01\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4847:4853  length */\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4847:4857  length - 1 */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4827:4858  _identityRegistries[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_166\n      tag_160\n      jump\t// in\n    tag_166:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4802:4821  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4802:4824  _identityRegistries[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4827:4858  _identityRegistries[length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4822:4823  i */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4802:4824  _identityRegistries[i] */\n      dup2\n      lt\n      tag_169\n      jumpi\n      tag_169\n      tag_160\n      jump\t// in\n    tag_169:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4802:4858  _identityRegistries[i] = _identityRegistries[length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4876:4895  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4876:4901  _identityRegistries.pop() */\n      dup1\n      sload\n      dup1\n      tag_172\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4919:4924  break */\n      jump(tag_156)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4735:4939  if (_identityRegistries[i] == _identityRegistry) {... */\n    tag_162:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4716:4719  i++ */\n      dup1\n      tag_175\n      dup2\n      tag_176\n      jump\t// in\n    tag_175:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4684:4949  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_155)\n    tag_156:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4958:5000  _revokeRole(AGENT_ROLE, _identityRegistry) */\n      tag_177\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4982:4999  _identityRegistry */\n      dup4\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4958:4969  _revokeRole */\n      tag_129\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4958:5000  _revokeRole(AGENT_ROLE, _identityRegistry) */\n      jump\t// in\n    tag_177:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5015:5057  IdentityRegistryUnbound(_identityRegistry) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4384:5064  {... */\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":4287:5064  function unbindIdentityRegistry(address _identityRegistry)... */\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2509:2999  function modifyStoredInvestorCountry(address _userAddress, uint16 _country)... */\n    tag_80:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_179\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":561:627  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2670:2696  _userAddress != address(0) */\n      dup4\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2662:2732  require(_userAddress != address(0), \"invalid argument - zero address\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_133\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2771:2796  _identities[_userAddress] */\n      dup4\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2826:2827  0 */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2771:2796  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2771:2782  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2771:2796  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2771:2813  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2742:2876  require(... */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_185\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2886:2911  _identities[_userAddress] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2886:2897  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2886:2911  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2886:2938  _identities[_userAddress].investorCountry = _country */\n      dup1\n      sload\n      not(shl(0xa0, 0xffff))\n      and\n      shl(0xa0, 0x01)\n      0xffff\n      dup9\n      and\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2953:2992  CountryModified(_userAddress, _country) */\n      swap1\n      mload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2886:2938  _identities[_userAddress].investorCountry = _country */\n      swap1\n      swap3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2886:2911  _identities[_userAddress] */\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2953:2992  CountryModified(_userAddress, _country) */\n      0x20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf\n      swap2\n      log3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2509:2999  function modifyStoredInvestorCountry(address _userAddress, uint16 _country)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1050:1690  function addIdentityToStorage(... */\n    tag_87:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_187\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":561:627  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1240:1266  _userAddress != address(0) */\n      dup5\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1240:1302  _userAddress != address(0) && address(_identity) != address(0) */\n      tag_189\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1270:1302  address(_identity) != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1240:1302  _userAddress != address(0) && address(_identity) != address(0) */\n    tag_189:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1219:1359  require(... */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_133\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1398:1423  _identities[_userAddress] */\n      dup5\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1453:1454  0 */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1398:1423  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1398:1409  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1398:1423  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1398:1440  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1390:1455  address(_identities[_userAddress].identityContract) == address(0) */\n      iszero\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1369:1503  require(... */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7005:7007   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1369:1503  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6987:7008   */\n      mstore\n        /* \"#utility.yul\":7044:7046   */\n      0x16\n        /* \"#utility.yul\":7024:7042   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7017:7047   */\n      mstore\n      shl(0x50, 0x616464726573732073746f72656420616c7265616479)\n        /* \"#utility.yul\":7063:7081   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7056:7108   */\n      mstore\n        /* \"#utility.yul\":7125:7143   */\n      0x64\n      add\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1369:1503  require(... */\n      tag_126\n        /* \"#utility.yul\":6803:7149   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1369:1503  require(... */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1513:1538  _identities[_userAddress] */\n      dup5\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1513:1524  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1513:1538  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1513:1567  _identities[_userAddress].identityContract = _identity */\n      dup1\n      sload\n      swap5\n      dup9\n      and\n      not(sub(shl(0xb0, 0x01), 0x01))\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1577:1629  _identities[_userAddress].investorCountry = _country */\n      swap1\n      swap6\n      and\n      dup6\n      or\n      shl(0xa0, 0x01)\n      0xffff\n      dup10\n      and\n      mul\n      or\n      swap1\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1644:1683  IdentityStored(_userAddress, _identity) */\n      mload\n      0x30dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1513:1538  _identities[_userAddress] */\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1644:1683  IdentityStored(_userAddress, _identity) */\n      log3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1050:1690  function addIdentityToStorage(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5156:5321  function linkedIdentityRegistries()... */\n    tag_89:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5256:5272  address[] memory */\n      0x60\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5295:5314  _identityRegistries */\n      0xca\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5288:5314  return _identityRegistries */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_197:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_197\n      jumpi\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":5156:5321  function linkedIdentityRegistries()... */\n      swap1\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3092:3623  function removeIdentityFromStorage(address _userAddress)... */\n    tag_94:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_199\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":561:627  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3234:3260  _userAddress != address(0) */\n      dup3\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3226:3296  require(_userAddress != address(0), \"invalid argument - zero address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_133\n      jump\t// in\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3335:3360  _identities[_userAddress] */\n      dup3\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3390:3391  0 */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3335:3360  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3335:3346  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3335:3360  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3335:3377  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3306:3440  require(... */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_185\n      jump\t// in\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3474:3499  _identities[_userAddress] */\n      dup1\n      dup4\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3450:3471  IIdentity oldIdentity */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3474:3499  _identities[_userAddress] */\n      dup2\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3474:3485  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3474:3499  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3474:3516  _identities[_userAddress].identityContract */\n      dup1\n      sload\n      not(sub(shl(0xb0, 0x01), 0x01))\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3526:3558  delete _identities[_userAddress] */\n      dup2\n      and\n      swap1\n      swap2\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3573:3616  IdentityUnstored(_userAddress, oldIdentity) */\n      swap1\n      mload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3474:3516  _identities[_userAddress].identityContract */\n      swap4\n      and\n      swap3\n      dup4\n      swap3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3474:3499  _identities[_userAddress] */\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3573:3616  IdentityUnstored(_userAddress, oldIdentity) */\n      0xca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b\n      swap2\n      log3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3216:3623  {... */\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":3092:3623  function removeIdentityFromStorage(address _userAddress)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5684:5831  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4908:4915  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4940  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4946  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4934:4956  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2939:2943  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5824  _revokeRole(role, account) */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5810:5814  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5816:5823  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5809  _revokeRole */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5798:5824  _revokeRole(role, account) */\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":752:962  function init() external initializer {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_215\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_215\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7356:7358   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7338:7359   */\n      mstore\n        /* \"#utility.yul\":7395:7397   */\n      0x2e\n        /* \"#utility.yul\":7375:7393   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7368:7398   */\n      mstore\n        /* \"#utility.yul\":7434:7468   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":7414:7432   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7407:7469   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":7485:7503   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7478:7522   */\n      mstore\n        /* \"#utility.yul\":7539:7558   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_126\n        /* \"#utility.yul\":7154:7564   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_219\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_219:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":799:835  _grantRole(bytes32(0), _msgSender()) */\n      tag_221\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":818:819  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":799:809  _grantRole */\n      tag_121\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":799:835  _grantRole(bytes32(0), _msgSender()) */\n      jump\t// in\n    tag_221:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":846:882  _grantRole(OWNER_ROLE, _msgSender()) */\n      tag_223\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":679:745  0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e */\n      0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":799:809  _grantRole */\n      tag_121\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":799:835  _grantRole(bytes32(0), _msgSender()) */\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":846:882  _grantRole(OWNER_ROLE, _msgSender()) */\n    tag_223:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":893:929  _grantRole(AGENT_ROLE, _msgSender()) */\n      tag_225\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":799:809  _grantRole */\n      tag_121\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":799:835  _grantRole(bytes32(0), _msgSender()) */\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":893:929  _grantRole(AGENT_ROLE, _msgSender()) */\n    tag_225:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":939:955  __Ownable_init() */\n      tag_227\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":939:953  __Ownable_init */\n      tag_228\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":939:955  __Ownable_init() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":7721:7757   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":7709:7711   */\n      0x20\n        /* \"#utility.yul\":7694:7712   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":752:962  function init() external initializer {... */\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1778:2414  function modifyStoredIdentity(address _userAddress, IIdentity _identity)... */\n    tag_106:\n      0x00\n      dup1\n      mload\n      0x20\n      data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      tag_233\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":561:627  0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2938  _checkRole */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2928:2944  _checkRole(role) */\n      jump\t// in\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1949:1975  _userAddress != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1949:2011  _userAddress != address(0) && address(_identity) != address(0) */\n      tag_235\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1979:2011  address(_identity) != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1949:2011  _userAddress != address(0) && address(_identity) != address(0) */\n    tag_235:\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1928:2068  require(... */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_133\n      jump\t// in\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2107:2132  _identities[_userAddress] */\n      dup4\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2162:2163  0 */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2107:2132  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2107:2118  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2107:2132  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2107:2149  _identities[_userAddress].identityContract */\n      sload\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2078:2212  require(... */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_185\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2246:2271  _identities[_userAddress] */\n      dup1\n      dup5\n      and\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2222:2243  IIdentity oldIdentity */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2246:2271  _identities[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2246:2257  _identities */\n      0xc9\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2246:2271  _identities[_userAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2246:2288  _identities[_userAddress].identityContract */\n      dup1\n      sload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2298:2352  _identities[_userAddress].identityContract = _identity */\n      dup7\n      dup6\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2367:2407  IdentityModified(oldIdentity, _identity) */\n      swap2\n      mload\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2246:2288  _identities[_userAddress].identityContract */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2298:2352  _identities[_userAddress].identityContract = _identity */\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2246:2288  _identities[_userAddress].identityContract */\n      dup4\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2367:2407  IdentityModified(oldIdentity, _identity) */\n      0x556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2222:2243  IIdentity oldIdentity */\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":2367:2407  IdentityModified(oldIdentity, _identity) */\n      log3\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1918:2414  {... */\n      pop\n        /* \"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":1778:2414  function modifyStoredIdentity(address _userAddress, IIdentity _identity)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7970:7972   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7952:7973   */\n      mstore\n        /* \"#utility.yul\":8009:8011   */\n      0x26\n        /* \"#utility.yul\":7989:8007   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7982:8012   */\n      mstore\n        /* \"#utility.yul\":8048:8082   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8028:8046   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8021:8083   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8099:8117   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8092:8128   */\n      mstore\n        /* \"#utility.yul\":8145:8164   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_126\n        /* \"#utility.yul\":7768:8170   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2496:2504  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2495  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3768:3871  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3864  _checkRole(role, _msgSender()) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3845:3849  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3844  _checkRole */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3834:3864  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7917:8150  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8022  hasRole(role, account) */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8008:8012  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8014:8021  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8007  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8000:8022  hasRole(role, account) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7995:8144  if (!hasRole(role, account)) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8050  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8044  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8050  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8067  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8074  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8070:8074  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8038:8074  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8132  _msgSender() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8120:8132  _msgSender() */\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8111:8118  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8105:8109  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8093:8133  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7917:8150  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8321:8555  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8426  hasRole(role, account) */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8412:8416  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8418:8425  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8411  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8404:8426  hasRole(role, account) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8400:8549  if (hasRole(role, account)) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8474:8479  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8448  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8471  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8479  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8442:8454  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8474:8479  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8498:8538  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8321:8555  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x97))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8377:8379   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8359:8380   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8396:8414   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8389:8419   */\n      mstore\n        /* \"#utility.yul\":8455:8489   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8435:8453   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8428:8490   */\n      mstore\n        /* \"#utility.yul\":8507:8525   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n        /* \"#utility.yul\":8175:8531   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      0x97\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2755  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2729:2853  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_272\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4152:4653  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4262  hasRole(role, account) */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4248:4252  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4254:4261  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4247  hasRole */\n      tag_72\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4240:4262  hasRole(role, account) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4235:4647  if (!hasRole(role, account)) {... */\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4462  StringsUpgradeable.toHexString(account) */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4454:4461  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4453  StringsUpgradeable.toHexString */\n      tag_280\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4423:4462  StringsUpgradeable.toHexString(account) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4582  StringsUpgradeable.toHexString(uint256(role), 32) */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4572:4576  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4579:4581  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4563  StringsUpgradeable.toHexString */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4533:4582  StringsUpgradeable.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4330:4604  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_283\n      swap3\n      swap2\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4278:4636  revert(... */\n      dup3\n      mstore\n      tag_126\n      swap2\n      0x04\n      add\n      tag_286\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_272\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2531:2544  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_112\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2575:2597  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":376:378  20 */\n      0x14\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1959:1972  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2003  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2020:2026  length */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2017  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_298\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2029:2030  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2006:2031  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_301\n      jumpi\n      tag_301\n      tag_302\n      jump\t// in\n    tag_301:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_303\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_303:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2031  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2047  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2048:2049  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2050  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_305\n      jumpi\n      tag_305\n      tag_160\n      jump\t// in\n    tag_305:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2072  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2073:2074  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2075  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_307\n      jumpi\n      tag_307\n      tag_160\n      jump\t// in\n    tag_307:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2105  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_311\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2112:2118  length */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2109  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_297\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_312\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2121:2122  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_299\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2122  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2128:2129  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2125  i */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2129  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_309\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2176  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2179:2182  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2182  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2183  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_314\n      tag_160\n      jump\t// in\n    tag_314:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2156  buffer */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2157:2158  i */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2159  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_316\n      jumpi\n      tag_316\n      tag_160\n      jump\t// in\n    tag_316:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2183  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2207:2208  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2197:2208  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2131:2134  --i */\n      tag_317\n      dup2\n      tag_318\n      jump\t// in\n    tag_317:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_308)\n    tag_309:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2246  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11199:11201   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11181:11202   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11218:11236   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11211:11241   */\n      mstore\n        /* \"#utility.yul\":11277:11311   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":11257:11275   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11250:11312   */\n      mstore\n        /* \"#utility.yul\":11329:11347   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_126\n        /* \"#utility.yul\":10997:11353   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2307:2313  buffer */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_30:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_328:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":679:859   */\n    tag_40:\n        /* \"#utility.yul\":738:744   */\n      0x00\n        /* \"#utility.yul\":791:793   */\n      0x20\n        /* \"#utility.yul\":779:788   */\n      dup3\n        /* \"#utility.yul\":770:777   */\n      dup5\n        /* \"#utility.yul\":766:789   */\n      sub\n        /* \"#utility.yul\":762:794   */\n      slt\n        /* \"#utility.yul\":759:811   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":807:808   */\n      0x00\n        /* \"#utility.yul\":804:805   */\n      dup1\n        /* \"#utility.yul\":797:809   */\n      revert\n        /* \"#utility.yul\":759:811   */\n    tag_333:\n      pop\n        /* \"#utility.yul\":830:853   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":679:859   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":864:995   */\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":939:970   */\n      dup2\n      and\n        /* \"#utility.yul\":929:971   */\n      dup2\n      eq\n        /* \"#utility.yul\":919:989   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":985:986   */\n      0x00\n        /* \"#utility.yul\":982:983   */\n      dup1\n        /* \"#utility.yul\":975:987   */\n      revert\n        /* \"#utility.yul\":1000:1315   */\n    tag_45:\n        /* \"#utility.yul\":1068:1074   */\n      0x00\n        /* \"#utility.yul\":1076:1082   */\n      dup1\n        /* \"#utility.yul\":1129:1131   */\n      0x40\n        /* \"#utility.yul\":1117:1126   */\n      dup4\n        /* \"#utility.yul\":1108:1115   */\n      dup6\n        /* \"#utility.yul\":1104:1127   */\n      sub\n        /* \"#utility.yul\":1100:1132   */\n      slt\n        /* \"#utility.yul\":1097:1149   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":1145:1146   */\n      0x00\n        /* \"#utility.yul\":1142:1143   */\n      dup1\n        /* \"#utility.yul\":1135:1147   */\n      revert\n        /* \"#utility.yul\":1097:1149   */\n    tag_337:\n        /* \"#utility.yul\":1181:1190   */\n      dup3\n        /* \"#utility.yul\":1168:1191   */\n      calldataload\n        /* \"#utility.yul\":1158:1191   */\n      swap2\n      pop\n        /* \"#utility.yul\":1241:1243   */\n      0x20\n        /* \"#utility.yul\":1230:1239   */\n      dup4\n        /* \"#utility.yul\":1226:1244   */\n      add\n        /* \"#utility.yul\":1213:1245   */\n      calldataload\n        /* \"#utility.yul\":1254:1285   */\n      tag_338\n        /* \"#utility.yul\":1279:1284   */\n      dup2\n        /* \"#utility.yul\":1254:1285   */\n      tag_322\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1304:1309   */\n      dup1\n        /* \"#utility.yul\":1294:1309   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1000:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1320:1567   */\n    tag_52:\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1432:1434   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1411:1418   */\n      dup5\n        /* \"#utility.yul\":1407:1430   */\n      sub\n        /* \"#utility.yul\":1403:1435   */\n      slt\n        /* \"#utility.yul\":1400:1452   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1445:1446   */\n      dup1\n        /* \"#utility.yul\":1438:1450   */\n      revert\n        /* \"#utility.yul\":1400:1452   */\n    tag_340:\n        /* \"#utility.yul\":1487:1496   */\n      dup2\n        /* \"#utility.yul\":1474:1497   */\n      calldataload\n        /* \"#utility.yul\":1506:1537   */\n      tag_319\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1506:1537   */\n      tag_322\n      jump\t// in\n        /* \"#utility.yul\":2198:2357   */\n    tag_323:\n        /* \"#utility.yul\":2265:2285   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2325:2331   */\n      0xffff\n        /* \"#utility.yul\":2314:2332   */\n      dup2\n      and\n        /* \"#utility.yul\":2304:2333   */\n      dup2\n      eq\n        /* \"#utility.yul\":2294:2351   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2347:2348   */\n      0x00\n        /* \"#utility.yul\":2344:2345   */\n      dup1\n        /* \"#utility.yul\":2337:2349   */\n      revert\n        /* \"#utility.yul\":2294:2351   */\n    tag_346:\n        /* \"#utility.yul\":2198:2357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2362:2681   */\n    tag_79:\n        /* \"#utility.yul\":2429:2435   */\n      0x00\n        /* \"#utility.yul\":2437:2443   */\n      dup1\n        /* \"#utility.yul\":2490:2492   */\n      0x40\n        /* \"#utility.yul\":2478:2487   */\n      dup4\n        /* \"#utility.yul\":2469:2476   */\n      dup6\n        /* \"#utility.yul\":2465:2488   */\n      sub\n        /* \"#utility.yul\":2461:2493   */\n      slt\n        /* \"#utility.yul\":2458:2510   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":2506:2507   */\n      0x00\n        /* \"#utility.yul\":2503:2504   */\n      dup1\n        /* \"#utility.yul\":2496:2508   */\n      revert\n        /* \"#utility.yul\":2458:2510   */\n    tag_348:\n        /* \"#utility.yul\":2545:2554   */\n      dup3\n        /* \"#utility.yul\":2532:2555   */\n      calldataload\n        /* \"#utility.yul\":2564:2595   */\n      tag_349\n        /* \"#utility.yul\":2589:2594   */\n      dup2\n        /* \"#utility.yul\":2564:2595   */\n      tag_322\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2614:2619   */\n      swap2\n      pop\n        /* \"#utility.yul\":2638:2675   */\n      tag_350\n        /* \"#utility.yul\":2671:2673   */\n      0x20\n        /* \"#utility.yul\":2656:2674   */\n      dup5\n      add\n        /* \"#utility.yul\":2638:2675   */\n      tag_323\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2628:2675   */\n      swap1\n      pop\n        /* \"#utility.yul\":2362:2681   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2686:3163   */\n    tag_86:\n        /* \"#utility.yul\":2779:2785   */\n      0x00\n        /* \"#utility.yul\":2787:2793   */\n      dup1\n        /* \"#utility.yul\":2795:2801   */\n      0x00\n        /* \"#utility.yul\":2848:2850   */\n      0x60\n        /* \"#utility.yul\":2836:2845   */\n      dup5\n        /* \"#utility.yul\":2827:2834   */\n      dup7\n        /* \"#utility.yul\":2823:2846   */\n      sub\n        /* \"#utility.yul\":2819:2851   */\n      slt\n        /* \"#utility.yul\":2816:2868   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2864:2865   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup1\n        /* \"#utility.yul\":2854:2866   */\n      revert\n        /* \"#utility.yul\":2816:2868   */\n    tag_352:\n        /* \"#utility.yul\":2903:2912   */\n      dup4\n        /* \"#utility.yul\":2890:2913   */\n      calldataload\n        /* \"#utility.yul\":2922:2953   */\n      tag_353\n        /* \"#utility.yul\":2947:2952   */\n      dup2\n        /* \"#utility.yul\":2922:2953   */\n      tag_322\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2972:2977   */\n      swap3\n      pop\n        /* \"#utility.yul\":3029:3031   */\n      0x20\n        /* \"#utility.yul\":3014:3032   */\n      dup5\n      add\n        /* \"#utility.yul\":3001:3033   */\n      calldataload\n        /* \"#utility.yul\":3042:3075   */\n      tag_354\n        /* \"#utility.yul\":3001:3033   */\n      dup2\n        /* \"#utility.yul\":3042:3075   */\n      tag_322\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3094:3101   */\n      swap2\n      pop\n        /* \"#utility.yul\":3120:3157   */\n      tag_355\n        /* \"#utility.yul\":3153:3155   */\n      0x40\n        /* \"#utility.yul\":3138:3156   */\n      dup6\n      add\n        /* \"#utility.yul\":3120:3157   */\n      tag_323\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3110:3157   */\n      swap1\n      pop\n        /* \"#utility.yul\":2686:3163   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3168:3826   */\n    tag_91:\n        /* \"#utility.yul\":3339:3341   */\n      0x20\n        /* \"#utility.yul\":3391:3412   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3461:3474   */\n      dup3\n      mload\n        /* \"#utility.yul\":3364:3382   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3483:3505   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3310:3314   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3339:3341   */\n      swap1\n        /* \"#utility.yul\":3562:3577   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3536:3538   */\n      0x40\n        /* \"#utility.yul\":3521:3539   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3310:3314   */\n      dup5\n        /* \"#utility.yul\":3605:3800   */\n    tag_357:\n        /* \"#utility.yul\":3619:3625   */\n      dup2\n        /* \"#utility.yul\":3616:3617   */\n      dup2\n        /* \"#utility.yul\":3613:3626   */\n      lt\n        /* \"#utility.yul\":3605:3800   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":3684:3697   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3680:3719   */\n      and\n        /* \"#utility.yul\":3668:3720   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3775:3790   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3740:3752   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3716:3717   */\n      0x01\n        /* \"#utility.yul\":3634:3643   */\n      add\n        /* \"#utility.yul\":3605:3800   */\n      jump(tag_357)\n    tag_359:\n      pop\n        /* \"#utility.yul\":3817:3820   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3168:3826   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3831:4236   */\n    tag_105:\n        /* \"#utility.yul\":3916:3922   */\n      0x00\n        /* \"#utility.yul\":3924:3930   */\n      dup1\n        /* \"#utility.yul\":3977:3979   */\n      0x40\n        /* \"#utility.yul\":3965:3974   */\n      dup4\n        /* \"#utility.yul\":3956:3963   */\n      dup6\n        /* \"#utility.yul\":3952:3975   */\n      sub\n        /* \"#utility.yul\":3948:3980   */\n      slt\n        /* \"#utility.yul\":3945:3997   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":3993:3994   */\n      0x00\n        /* \"#utility.yul\":3990:3991   */\n      dup1\n        /* \"#utility.yul\":3983:3995   */\n      revert\n        /* \"#utility.yul\":3945:3997   */\n    tag_361:\n        /* \"#utility.yul\":4032:4041   */\n      dup3\n        /* \"#utility.yul\":4019:4042   */\n      calldataload\n        /* \"#utility.yul\":4051:4082   */\n      tag_362\n        /* \"#utility.yul\":4076:4081   */\n      dup2\n        /* \"#utility.yul\":4051:4082   */\n      tag_322\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4101:4106   */\n      swap2\n      pop\n        /* \"#utility.yul\":4158:4160   */\n      0x20\n        /* \"#utility.yul\":4143:4161   */\n      dup4\n      add\n        /* \"#utility.yul\":4130:4162   */\n      calldataload\n        /* \"#utility.yul\":4171:4204   */\n      tag_338\n        /* \"#utility.yul\":4130:4162   */\n      dup2\n        /* \"#utility.yul\":4171:4204   */\n      tag_322\n      jump\t// in\n        /* \"#utility.yul\":4657:5012   */\n    tag_133:\n        /* \"#utility.yul\":4859:4861   */\n      0x20\n        /* \"#utility.yul\":4841:4862   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4898:4900   */\n      0x1f\n        /* \"#utility.yul\":4878:4896   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4871:4901   */\n      mstore\n        /* \"#utility.yul\":4937:4970   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":4932:4934   */\n      0x40\n        /* \"#utility.yul\":4917:4935   */\n      dup3\n      add\n        /* \"#utility.yul\":4910:4971   */\n      mstore\n        /* \"#utility.yul\":5003:5005   */\n      0x60\n        /* \"#utility.yul\":4988:5006   */\n      add\n      swap1\n        /* \"#utility.yul\":4657:5012   */\n      jump\t// out\n        /* \"#utility.yul\":5783:5910   */\n    tag_160:\n        /* \"#utility.yul\":5844:5854   */\n      0x4e487b71\n        /* \"#utility.yul\":5839:5842   */\n      0xe0\n        /* \"#utility.yul\":5835:5855   */\n      shl\n        /* \"#utility.yul\":5832:5833   */\n      0x00\n        /* \"#utility.yul\":5825:5856   */\n      mstore\n        /* \"#utility.yul\":5875:5879   */\n      0x32\n        /* \"#utility.yul\":5872:5873   */\n      0x04\n        /* \"#utility.yul\":5865:5880   */\n      mstore\n        /* \"#utility.yul\":5899:5903   */\n      0x24\n        /* \"#utility.yul\":5896:5897   */\n      0x00\n        /* \"#utility.yul\":5889:5904   */\n      revert\n        /* \"#utility.yul\":5915:6042   */\n    tag_324:\n        /* \"#utility.yul\":5976:5986   */\n      0x4e487b71\n        /* \"#utility.yul\":5971:5974   */\n      0xe0\n        /* \"#utility.yul\":5967:5987   */\n      shl\n        /* \"#utility.yul\":5964:5965   */\n      0x00\n        /* \"#utility.yul\":5957:5988   */\n      mstore\n        /* \"#utility.yul\":6007:6011   */\n      0x11\n        /* \"#utility.yul\":6004:6005   */\n      0x04\n        /* \"#utility.yul\":5997:6012   */\n      mstore\n        /* \"#utility.yul\":6031:6035   */\n      0x24\n        /* \"#utility.yul\":6028:6029   */\n      0x00\n        /* \"#utility.yul\":6021:6036   */\n      revert\n        /* \"#utility.yul\":6047:6175   */\n    tag_164:\n        /* \"#utility.yul\":6114:6123   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6135:6146   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6132:6169   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":6149:6167   */\n      tag_112\n      tag_324\n      jump\t// in\n        /* \"#utility.yul\":6180:6307   */\n    tag_173:\n        /* \"#utility.yul\":6241:6251   */\n      0x4e487b71\n        /* \"#utility.yul\":6236:6239   */\n      0xe0\n        /* \"#utility.yul\":6232:6252   */\n      shl\n        /* \"#utility.yul\":6229:6230   */\n      0x00\n        /* \"#utility.yul\":6222:6253   */\n      mstore\n        /* \"#utility.yul\":6272:6276   */\n      0x31\n        /* \"#utility.yul\":6269:6270   */\n      0x04\n        /* \"#utility.yul\":6262:6277   */\n      mstore\n        /* \"#utility.yul\":6296:6300   */\n      0x24\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6301   */\n      revert\n        /* \"#utility.yul\":6312:6447   */\n    tag_176:\n        /* \"#utility.yul\":6351:6354   */\n      0x00\n        /* \"#utility.yul\":6372:6389   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6369:6412   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":6392:6410   */\n      tag_376\n      tag_324\n      jump\t// in\n    tag_376:\n      pop\n        /* \"#utility.yul\":6439:6440   */\n      0x01\n        /* \"#utility.yul\":6428:6441   */\n      add\n      swap1\n        /* \"#utility.yul\":6312:6447   */\n      jump\t// out\n        /* \"#utility.yul\":6452:6798   */\n    tag_185:\n        /* \"#utility.yul\":6654:6656   */\n      0x20\n        /* \"#utility.yul\":6636:6657   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6693:6695   */\n      0x16\n        /* \"#utility.yul\":6673:6691   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6666:6696   */\n      mstore\n      shl(0x52, 0x1859191c995cdcc81b9bdd081cdd1bdc9959081e595d)\n        /* \"#utility.yul\":6727:6729   */\n      0x40\n        /* \"#utility.yul\":6712:6730   */\n      dup3\n      add\n        /* \"#utility.yul\":6705:6757   */\n      mstore\n        /* \"#utility.yul\":6789:6791   */\n      0x60\n        /* \"#utility.yul\":6774:6792   */\n      add\n      swap1\n        /* \"#utility.yul\":6452:6798   */\n      jump\t// out\n        /* \"#utility.yul\":8536:8943   */\n    tag_272:\n        /* \"#utility.yul\":8738:8740   */\n      0x20\n        /* \"#utility.yul\":8720:8741   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8777:8779   */\n      0x2b\n        /* \"#utility.yul\":8757:8775   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8750:8780   */\n      mstore\n        /* \"#utility.yul\":8816:8850   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":8811:8813   */\n      0x40\n        /* \"#utility.yul\":8796:8814   */\n      dup3\n      add\n        /* \"#utility.yul\":8789:8851   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":8882:8884   */\n      0x60\n        /* \"#utility.yul\":8867:8885   */\n      dup3\n      add\n        /* \"#utility.yul\":8860:8901   */\n      mstore\n        /* \"#utility.yul\":8933:8936   */\n      0x80\n        /* \"#utility.yul\":8918:8937   */\n      add\n      swap1\n        /* \"#utility.yul\":8536:8943   */\n      jump\t// out\n        /* \"#utility.yul\":8948:9198   */\n    tag_325:\n        /* \"#utility.yul\":9033:9034   */\n      0x00\n        /* \"#utility.yul\":9043:9156   */\n    tag_385:\n        /* \"#utility.yul\":9057:9063   */\n      dup4\n        /* \"#utility.yul\":9054:9055   */\n      dup2\n        /* \"#utility.yul\":9051:9064   */\n      lt\n        /* \"#utility.yul\":9043:9156   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":9133:9144   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9127:9145   */\n      mload\n        /* \"#utility.yul\":9114:9125   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9107:9146   */\n      mstore\n        /* \"#utility.yul\":9079:9081   */\n      0x20\n        /* \"#utility.yul\":9072:9082   */\n      add\n        /* \"#utility.yul\":9043:9156   */\n      jump(tag_385)\n    tag_387:\n      pop\n      pop\n        /* \"#utility.yul\":9190:9191   */\n      0x00\n        /* \"#utility.yul\":9172:9188   */\n      swap2\n      add\n        /* \"#utility.yul\":9165:9192   */\n      mstore\n        /* \"#utility.yul\":8948:9198   */\n      jump\t// out\n        /* \"#utility.yul\":9203:10015   */\n    tag_284:\n        /* \"#utility.yul\":9614:9639   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":9609:9612   */\n      dup2\n        /* \"#utility.yul\":9602:9640   */\n      mstore\n        /* \"#utility.yul\":9584:9587   */\n      0x00\n        /* \"#utility.yul\":9669:9675   */\n      dup4\n        /* \"#utility.yul\":9663:9676   */\n      mload\n        /* \"#utility.yul\":9685:9760   */\n      tag_389\n        /* \"#utility.yul\":9753:9759   */\n      dup2\n        /* \"#utility.yul\":9748:9750   */\n      0x17\n        /* \"#utility.yul\":9743:9746   */\n      dup6\n        /* \"#utility.yul\":9739:9751   */\n      add\n        /* \"#utility.yul\":9732:9736   */\n      0x20\n        /* \"#utility.yul\":9724:9730   */\n      dup9\n        /* \"#utility.yul\":9720:9737   */\n      add\n        /* \"#utility.yul\":9685:9760   */\n      tag_325\n      jump\t// in\n    tag_389:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":9819:9821   */\n      0x17\n        /* \"#utility.yul\":9779:9795   */\n      swap2\n      dup5\n      add\n        /* \"#utility.yul\":9811:9822   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":9804:9844   */\n      mstore\n        /* \"#utility.yul\":9869:9882   */\n      dup4\n      mload\n        /* \"#utility.yul\":9891:9967   */\n      tag_390\n        /* \"#utility.yul\":9869:9882   */\n      dup2\n        /* \"#utility.yul\":9953:9955   */\n      0x28\n        /* \"#utility.yul\":9945:9956   */\n      dup5\n      add\n        /* \"#utility.yul\":9938:9942   */\n      0x20\n        /* \"#utility.yul\":9926:9943   */\n      dup9\n      add\n        /* \"#utility.yul\":9891:9967   */\n      tag_325\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9987:10004   */\n      add\n        /* \"#utility.yul\":10006:10008   */\n      0x28\n        /* \"#utility.yul\":9983:10009   */\n      add\n      swap5\n        /* \"#utility.yul\":9203:10015   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10020:10416   */\n    tag_286:\n        /* \"#utility.yul\":10169:10171   */\n      0x20\n        /* \"#utility.yul\":10158:10167   */\n      dup2\n        /* \"#utility.yul\":10151:10172   */\n      mstore\n        /* \"#utility.yul\":10132:10136   */\n      0x00\n        /* \"#utility.yul\":10201:10207   */\n      dup3\n        /* \"#utility.yul\":10195:10208   */\n      mload\n        /* \"#utility.yul\":10244:10250   */\n      dup1\n        /* \"#utility.yul\":10239:10241   */\n      0x20\n        /* \"#utility.yul\":10228:10237   */\n      dup5\n        /* \"#utility.yul\":10224:10242   */\n      add\n        /* \"#utility.yul\":10217:10251   */\n      mstore\n        /* \"#utility.yul\":10260:10339   */\n      tag_392\n        /* \"#utility.yul\":10332:10338   */\n      dup2\n        /* \"#utility.yul\":10327:10329   */\n      0x40\n        /* \"#utility.yul\":10316:10325   */\n      dup6\n        /* \"#utility.yul\":10312:10330   */\n      add\n        /* \"#utility.yul\":10307:10309   */\n      0x20\n        /* \"#utility.yul\":10299:10305   */\n      dup8\n        /* \"#utility.yul\":10295:10310   */\n      add\n        /* \"#utility.yul\":10260:10339   */\n      tag_325\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10400:10402   */\n      0x1f\n        /* \"#utility.yul\":10379:10394   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":10375:10404   */\n      and\n        /* \"#utility.yul\":10360:10405   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":10407:10409   */\n      0x40\n        /* \"#utility.yul\":10356:10410   */\n      add\n      swap3\n        /* \"#utility.yul\":10020:10416   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10421:10589   */\n    tag_297:\n        /* \"#utility.yul\":10494:10503   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10525:10534   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10542:10557   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10536:10558   */\n      dup5\n      eq\n        /* \"#utility.yul\":10522:10559   */\n      or\n        /* \"#utility.yul\":10512:10583   */\n      tag_112\n      jumpi\n        /* \"#utility.yul\":10563:10581   */\n      tag_112\n      tag_324\n      jump\t// in\n        /* \"#utility.yul\":10594:10719   */\n    tag_299:\n        /* \"#utility.yul\":10659:10668   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":10680:10690   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":10677:10713   */\n      iszero\n      tag_112\n      jumpi\n        /* \"#utility.yul\":10693:10711   */\n      tag_112\n      tag_324\n      jump\t// in\n        /* \"#utility.yul\":10724:10851   */\n    tag_302:\n        /* \"#utility.yul\":10785:10795   */\n      0x4e487b71\n        /* \"#utility.yul\":10780:10783   */\n      0xe0\n        /* \"#utility.yul\":10776:10796   */\n      shl\n        /* \"#utility.yul\":10773:10774   */\n      0x00\n        /* \"#utility.yul\":10766:10797   */\n      mstore\n        /* \"#utility.yul\":10816:10820   */\n      0x41\n        /* \"#utility.yul\":10813:10814   */\n      0x04\n        /* \"#utility.yul\":10806:10821   */\n      mstore\n        /* \"#utility.yul\":10840:10844   */\n      0x24\n        /* \"#utility.yul\":10837:10838   */\n      0x00\n        /* \"#utility.yul\":10830:10845   */\n      revert\n        /* \"#utility.yul\":10856:10992   */\n    tag_318:\n        /* \"#utility.yul\":10895:10898   */\n      0x00\n        /* \"#utility.yul\":10923:10928   */\n      dup2\n        /* \"#utility.yul\":10913:10952   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":10932:10950   */\n      tag_402\n      tag_324\n      jump\t// in\n    tag_402:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":10968:10986   */\n      add\n      swap1\n        /* \"#utility.yul\":10856:10992   */\n      jump\t// out\n    stop\n    data_83599f2fd2d7ecec31a0c854e1dfa0cd718f43d0f25b15e620b3800dba1a8107 cab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709\n\n    auxdata: 0xa2646970667358221220455e2cde2e4217ab535adb8f94e662aecd4ae15afccf4bbb04d1afaa3b61168f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506115e5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806397a012f7116100b8578063cf191bcd1161007c578063cf191bcd146102fd578063d547741f14610310578063e1c7392a14610323578063e58378bb1461032b578063e805cf8614610352578063f2fde38b1461036557600080fd5b806397a012f7146102a75780639f3418d5146102ba578063a217fddf146102cd578063a53410dd146102d5578063bf9eb959146102e857600080fd5b8063690a49f91161010a578063690a49f9146101dd578063715018a6146101f0578063727e13bc146101f85780637988d3a51461023f5780638da5cb5b1461028357806391d148541461029457600080fd5b806301ffc9a71461014757806322459e181461016f578063248a9ca3146101925780632f2ff15d146101b557806336568abe146101ca575b600080fd5b61015a610155366004611199565b610378565b60405190151581526020015b60405180910390f35b61018460008051602061159083398151915281565b604051908152602001610166565b6101846101a03660046111c3565b60009081526065602052604090206001015490565b6101c86101c33660046111f1565b6103af565b005b6101c86101d83660046111f1565b6103d9565b6101c86101eb366004611221565b61045c565b6101c8610573565b61022c610206366004611221565b6001600160a01b0316600090815260c96020526040902054600160a01b900461ffff1690565b60405161ffff9091168152602001610166565b61026b61024d366004611221565b6001600160a01b03908116600090815260c960205260409020541690565b6040516001600160a01b039091168152602001610166565b6097546001600160a01b031661026b565b61015a6102a23660046111f1565b610587565b6101c86102b5366004611221565b6105b2565b6101c86102c8366004611255565b61077e565b610184600081565b6101c86102e336600461128a565b610857565b6102f0610971565b60405161016691906112d1565b6101c861030b366004611221565b6109d3565b6101c861031e3660046111f1565b610aa2565b6101c8610ac7565b6101847fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e81565b6101c861036036600461131e565b610c25565b6101c8610373366004611221565b610d13565b60006001600160e01b03198216637965db0b60e01b14806103a957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152606560205260409020600101546103ca81610d89565b6103d48383610d93565b505050565b6001600160a01b038116331461044e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104588282610e19565b5050565b6001600160a01b0381166104825760405162461bcd60e51b81526004016104459061134c565b60ca5461012c116104e35760405162461bcd60e51b815260206004820152602560248201527f63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f20604482015264312049525360d81b6064820152608401610445565b6104fb60008051602061159083398151915282610d93565b60ca805460018101825560009182527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee10180546001600160a01b0319166001600160a01b03841690811790915560405190917f500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb91a250565b61057b610e80565b6105856000610eda565b565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b0381166105d85760405162461bcd60e51b81526004016104459061134c565b60ca546106275760405162461bcd60e51b815260206004820152601f60248201527f6964656e74697479207265676973747279206973206e6f742073746f726564006044820152606401610445565b60ca5460005b8181101561072d57826001600160a01b031660ca828154811061065257610652611383565b6000918252602090912001546001600160a01b03160361071b5760ca6106796001846113af565b8154811061068957610689611383565b60009182526020909120015460ca80546001600160a01b0390921691839081106106b5576106b5611383565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060ca8054806106f4576106f46113c2565b600082815260209020810160001990810180546001600160a01b031916905501905561072d565b80610725816113d8565b91505061062d565b5061074660008051602061159083398151915283610e19565b6040516001600160a01b038316907f51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c990600090a25050565b60008051602061159083398151915261079681610d89565b6001600160a01b0383166107bc5760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03838116600090815260c96020526040902054166107f35760405162461bcd60e51b8152600401610445906113f1565b6001600160a01b038316600081815260c96020526040808220805461ffff60a01b1916600160a01b61ffff88169081029190911790915590519092917f20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf91a3505050565b60008051602061159083398151915261086f81610d89565b6001600160a01b0384161580159061088f57506001600160a01b03831615155b6108ab5760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03848116600090815260c96020526040902054161561090c5760405162461bcd60e51b8152602060048201526016602482015275616464726573732073746f72656420616c726561647960501b6044820152606401610445565b6001600160a01b03848116600081815260c9602052604080822080549488166001600160b01b03199095168517600160a01b61ffff891602179055517e30dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e7479190a350505050565b606060ca8054806020026020016040519081016040528092919081815260200182805480156109c957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109ab575b5050505050905090565b6000805160206115908339815191526109eb81610d89565b6001600160a01b038216610a115760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03828116600090815260c9602052604090205416610a485760405162461bcd60e51b8152600401610445906113f1565b6001600160a01b03808316600081815260c9602052604080822080546001600160b01b0319811690915590519316928392917fca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b91a3505050565b600082815260656020526040902060010154610abd81610d89565b6103d48383610e19565b600054610100900460ff1615808015610ae75750600054600160ff909116105b80610b015750303b158015610b01575060005460ff166001145b610b645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610445565b6000805460ff191660011790558015610b87576000805461ff0019166101001790555b610b92600033610d93565b610bbc7fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e33610d93565b610bd460008051602061159083398151915233610d93565b610bdc610f2c565b8015610c22576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600080516020611590833981519152610c3d81610d89565b6001600160a01b03831615801590610c5d57506001600160a01b03821615155b610c795760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03838116600090815260c9602052604090205416610cb05760405162461bcd60e51b8152600401610445906113f1565b6001600160a01b03808416600090815260c9602052604080822080548685166001600160a01b031982168117909255915191909316929183917f556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b8089190a350505050565b610d1b610e80565b6001600160a01b038116610d805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610445565b610c2281610eda565b610c228133610f5b565b610d9d8282610587565b6104585760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610dd53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610e238282610587565b156104585760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6097546001600160a01b031633146105855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f535760405162461bcd60e51b815260040161044590611421565b610585610fb4565b610f658282610587565b61045857610f7281610fe4565b610f7d836020610ff6565b604051602001610f8e929190611490565b60408051601f198184030181529082905262461bcd60e51b825261044591600401611505565b600054610100900460ff16610fdb5760405162461bcd60e51b815260040161044590611421565b61058533610eda565b60606103a96001600160a01b03831660145b60606000611005836002611538565b61101090600261154f565b67ffffffffffffffff81111561102857611028611562565b6040519080825280601f01601f191660200182016040528015611052576020820181803683370190505b509050600360fc1b8160008151811061106d5761106d611383565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061109c5761109c611383565b60200101906001600160f81b031916908160001a90535060006110c0846002611538565b6110cb90600161154f565b90505b6001811115611143576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110ff576110ff611383565b1a60f81b82828151811061111557611115611383565b60200101906001600160f81b031916908160001a90535060049490941c9361113c81611578565b90506110ce565b5083156111925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610445565b9392505050565b6000602082840312156111ab57600080fd5b81356001600160e01b03198116811461119257600080fd5b6000602082840312156111d557600080fd5b5035919050565b6001600160a01b0381168114610c2257600080fd5b6000806040838503121561120457600080fd5b823591506020830135611216816111dc565b809150509250929050565b60006020828403121561123357600080fd5b8135611192816111dc565b803561ffff8116811461125057600080fd5b919050565b6000806040838503121561126857600080fd5b8235611273816111dc565b91506112816020840161123e565b90509250929050565b60008060006060848603121561129f57600080fd5b83356112aa816111dc565b925060208401356112ba816111dc565b91506112c86040850161123e565b90509250925092565b6020808252825182820181905260009190848201906040850190845b818110156113125783516001600160a01b0316835292840192918401916001016112ed565b50909695505050505050565b6000806040838503121561133157600080fd5b823561133c816111dc565b91506020830135611216816111dc565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103a9576103a9611399565b634e487b7160e01b600052603160045260246000fd5b6000600182016113ea576113ea611399565b5060010190565b6020808252601690820152751859191c995cdcc81b9bdd081cdd1bdc9959081e595d60521b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b8381101561148757818101518382015260200161146f565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516114c881601785016020880161146c565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516114f981602884016020880161146c565b01602801949350505050565b602081526000825180602084015261152481604085016020870161146c565b601f01601f19169190910160400192915050565b80820281158282048414176103a9576103a9611399565b808201808211156103a9576103a9611399565b634e487b7160e01b600052604160045260246000fd5b60008161158757611587611399565b50600019019056fecab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709a2646970667358221220455e2cde2e4217ab535adb8f94e662aecd4ae15afccf4bbb04d1afaa3b61168f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97A012F7 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF191BCD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF191BCD EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xE58378BB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xE805CF86 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97A012F7 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x9F3418D5 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xA53410DD EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xBF9EB959 EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x690A49F9 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x690A49F9 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x727E13BC EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x7988D3A5 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x22459E18 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26B JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1255 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH2 0x184 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x184 PUSH32 0xB19546DFF01E856FB3F010C267A7B1C60363CF8A4664E21CC89C26224620214E DUP2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x131E JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3A9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3CA DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 PUSH2 0xD93 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x458 DUP3 DUP3 PUSH2 0xE19 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH2 0x12C GT PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742062696E64206D6F7265207468616E2033303020495220746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3120495253 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x42D72674974F694B5F5159593243114D38A5C39C89D6B62FEE061FF523240EE1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x500C250171AA20E861B680F93502547B9D436EDA7D4C537FC360DB6E0C6EEDFB SWAP2 LOG2 POP JUMP JUMPDEST PUSH2 0x57B PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x585 PUSH1 0x0 PUSH2 0xEDA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6964656E74697479207265676973747279206973206E6F742073746F72656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xCA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71B JUMPI PUSH1 0xCA PUSH2 0x679 PUSH1 0x1 DUP5 PUSH2 0x13AF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x689 JUMPI PUSH2 0x689 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x1383 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xCA DUP1 SLOAD DUP1 PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x72D JUMP JUMPDEST DUP1 PUSH2 0x725 DUP2 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x62D JUMP JUMPDEST POP PUSH2 0x746 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x51F353EB5801583FDF2706E43C045B62FDF6B1566820B349390616363ECF72C9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x796 DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP9 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x20965FCDC6EED7AE398065B40ECE4E732BA667992CA819FC54E80E9F2047C4CF SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x86F DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x88F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x616464726573732073746F72656420616C7265616479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP6 AND DUP6 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP10 AND MUL OR SWAP1 SSTORE MLOAD PUSH31 0x30DEA7E9C9AFAA2E3C9810F2FC9B5181F1BAD74CA5A8DB85F746A33585E747 SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AB JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9EB DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP4 AND SWAP3 DUP4 SWAP3 SWAP2 PUSH32 0xCA6A4C3370B859312246E7F086284076E557997E10D856B716C23AB67067790B SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xABD DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xAE7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xB01 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB01 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xB92 PUSH1 0x0 CALLER PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xBBC PUSH32 0xB19546DFF01E856FB3F010C267A7B1C60363CF8A4664E21CC89C26224620214E CALLER PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xBD4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xBDC PUSH2 0xF2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC3D DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC5D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP7 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH32 0x556CE885DFCEA52155C773F1ED2E58781C51945C13030AB8F793C61F51D1B808 SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xD1B PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0xC22 DUP2 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0xC22 DUP2 CALLER PUSH2 0xF5B JUMP JUMPDEST PUSH2 0xD9D DUP3 DUP3 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x458 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDD5 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xE23 DUP3 DUP3 PUSH2 0x587 JUMP JUMPDEST ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x585 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0xF65 DUP3 DUP3 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x458 JUMPI PUSH2 0xF72 DUP2 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0xF7D DUP4 PUSH1 0x20 PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8E SWAP3 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x445 SWAP2 PUSH1 0x4 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x585 CALLER PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1005 DUP4 PUSH1 0x2 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0x1010 SWAP1 PUSH1 0x2 PUSH2 0x154F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1028 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1052 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x109C JUMPI PUSH2 0x109C PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x10C0 DUP5 PUSH1 0x2 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0x10CB SWAP1 PUSH1 0x1 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1143 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x10FF JUMPI PUSH2 0x10FF PUSH2 0x1383 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1115 JUMPI PUSH2 0x1115 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x113C DUP2 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP PUSH2 0x10CE JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1216 DUP2 PUSH2 0x11DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1192 DUP2 PUSH2 0x11DC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1273 DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1281 PUSH1 0x20 DUP5 ADD PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12AA DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x12BA DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP2 POP PUSH2 0x12C8 PUSH1 0x40 DUP6 ADD PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1312 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x12ED JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x133C DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1216 DUP2 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1399 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1399 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1859191C995CDCC81B9BDD081CDD1BDC9959081E595D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1487 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x146F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x14C8 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x146C JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x14F9 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x146C JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1524 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x146C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1399 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1399 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1587 JUMPI PUSH2 0x1587 PUSH2 0x1399 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xCA 0xB5 LOG0 0xBF 0xE0 0xB7 SWAP14 0x2C 0x4B SHR 0x2E MUL MSIZE SWAP16 LOG0 DIFFICULTY 0xD1 ISZERO 0xB7 MLOAD 0x1F SWAP7 MSIZE ADDRESS PUSH29 0xB4276950967709A2646970667358221220455E2CDE2E4217AB535ADB8F SWAP5 0xE6 PUSH3 0xAECD4A 0xE1 GAS 0xFC 0xCF 0x4B 0xBB DIV 0xD1 0xAF 0xAA EXTCODESIZE PUSH2 0x168F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "375:5504:14:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AGENT_ROLE_2619": {
									"entryPoint": null,
									"id": 2619,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_306": {
									"entryPoint": null,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@OWNER_ROLE_2622": {
									"entryPoint": null,
									"id": 2622,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_699": {
									"entryPoint": 3884,
									"id": 699,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_710": {
									"entryPoint": 4020,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_741": {
									"entryPoint": 3712,
									"id": 741,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_371": {
									"entryPoint": 3465,
									"id": 371,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_410": {
									"entryPoint": 3931,
									"id": 410,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_562": {
									"entryPoint": 3475,
									"id": 562,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1330": {
									"entryPoint": null,
									"id": 1330,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_593": {
									"entryPoint": 3609,
									"id": 593,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_798": {
									"entryPoint": 3802,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addIdentityToStorage_2723": {
									"entryPoint": 2135,
									"id": 2723,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@bindIdentityRegistry_2940": {
									"entryPoint": 1116,
									"id": 2940,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_445": {
									"entryPoint": 943,
									"id": 445,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_358": {
									"entryPoint": 1415,
									"id": 358,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@init_2652": {
									"entryPoint": 2759,
									"id": 2652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_991": {
									"entryPoint": null,
									"id": 991,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@linkedIdentityRegistries_3026": {
									"entryPoint": 2417,
									"id": 3026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@modifyStoredIdentity_2793": {
									"entryPoint": 3109,
									"id": 2793,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@modifyStoredInvestorCountry_2844": {
									"entryPoint": 1918,
									"id": 2844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_727": {
									"entryPoint": null,
									"id": 727,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeIdentityFromStorage_2899": {
									"entryPoint": 2515,
									"id": 2899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_755": {
									"entryPoint": 1395,
									"id": 755,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_488": {
									"entryPoint": 985,
									"id": 488,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_465": {
									"entryPoint": 2722,
									"id": 465,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@storedIdentity_3042": {
									"entryPoint": null,
									"id": 3042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@storedInvestorCountry_3057": {
									"entryPoint": null,
									"id": 3057,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1612": {
									"entryPoint": null,
									"id": 1612,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_339": {
									"entryPoint": 888,
									"id": 339,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_1528": {
									"entryPoint": 4086,
									"id": 1528,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1548": {
									"entryPoint": 4068,
									"id": 1548,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_778": {
									"entryPoint": 3347,
									"id": 778,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unbindIdentityRegistry_3015": {
									"entryPoint": 1458,
									"id": 3015,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$263": {
									"entryPoint": 4894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_contract$_IIdentity_$263t_uint16": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint16": {
									"entryPoint": 4693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint16": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5264,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IIdentity_$263__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11355:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:17"
															},
															"nodeType": "YulIf",
															"src": "93:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:17"
															},
															"nodeType": "YulIf",
															"src": "199:71:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:17",
														"type": ""
													}
												],
												"src": "14:286:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:17",
														"type": ""
													}
												],
												"src": "305:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "598:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "608:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "620:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "631:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "608:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "661:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "643:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "643:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "567:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "578:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "589:4:17",
														"type": ""
													}
												],
												"src": "497:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "795:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "797:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "797:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "770:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "779:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:32:17"
															},
															"nodeType": "YulIf",
															"src": "759:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "820:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "843:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "830:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "830:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "715:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "726:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "738:6:17",
														"type": ""
													}
												],
												"src": "679:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "909:86:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "982:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "985:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "975:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "932:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "943:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "958:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "963:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "954:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "954:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "967:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "950:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "950:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "939:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "939:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "929:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "929:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:50:17"
															},
															"nodeType": "YulIf",
															"src": "919:70:17"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "898:5:17",
														"type": ""
													}
												],
												"src": "864:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1087:228:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1133:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1142:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1145:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1135:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1135:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1135:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1108:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1117:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1104:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1104:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1129:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1100:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:32:17"
															},
															"nodeType": "YulIf",
															"src": "1097:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1158:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1181:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1168:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1168:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1158:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1200:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1213:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1204:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1279:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1254:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1254:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1294:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1304:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1294:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1045:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1056:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1068:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1076:6:17",
														"type": ""
													}
												],
												"src": "1000:315:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1390:177:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1436:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1445:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1448:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1438:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1438:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1438:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1411:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1420:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1407:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1407:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1432:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1403:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:32:17"
															},
															"nodeType": "YulIf",
															"src": "1400:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1461:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1487:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1474:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1465:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1506:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1506:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1506:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1546:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1556:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1546:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1356:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1367:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1379:6:17",
														"type": ""
													}
												],
												"src": "1320:247:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1671:89:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1681:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1693:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1689:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1681:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1723:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1738:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1746:6:17",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1734:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1734:19:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1716:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1716:38:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1640:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1651:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1662:4:17",
														"type": ""
													}
												],
												"src": "1572:188:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1883:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1893:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1905:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1916:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1901:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1901:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1893:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1935:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1966:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1971:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1962:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1962:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1975:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1958:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1958:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1928:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IIdentity_$263__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1852:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1863:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1874:4:17",
														"type": ""
													}
												],
												"src": "1765:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2091:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2101:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2113:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2124:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2101:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2143:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2174:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2179:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2170:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2170:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2183:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2166:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2136:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2136:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2136:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2060:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2071:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2082:4:17",
														"type": ""
													}
												],
												"src": "1990:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2246:111:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2256:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2278:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2265:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2256:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2335:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2344:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2337:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2337:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2337:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2307:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2318:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2325:6:17",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2314:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2314:18:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2304:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:29:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2297:37:17"
															},
															"nodeType": "YulIf",
															"src": "2294:57:17"
														}
													]
												},
												"name": "abi_decode_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2225:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2236:5:17",
														"type": ""
													}
												],
												"src": "2198:159:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2448:233:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2494:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2503:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2506:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2496:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2496:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2496:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2469:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2478:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2465:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2465:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2490:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2461:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2461:32:17"
															},
															"nodeType": "YulIf",
															"src": "2458:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2519:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2545:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2532:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2532:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2523:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2589:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2564:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2564:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2604:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2614:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2604:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2660:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2671:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2656:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2656:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "2638:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:37:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2628:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2406:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2417:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2429:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2437:6:17",
														"type": ""
													}
												],
												"src": "2362:319:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2806:357:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2852:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2861:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2864:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2854:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2854:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2854:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2827:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2836:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2823:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2823:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:32:17"
															},
															"nodeType": "YulIf",
															"src": "2816:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2877:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2903:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2890:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2881:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2947:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2922:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2922:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2962:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2972:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2986:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3029:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3001:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2990:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3067:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3042:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3042:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3084:17:17",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3094:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3110:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3142:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3153:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3138:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3138:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "3120:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:37:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$263t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2756:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2767:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2779:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2787:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2795:6:17",
														"type": ""
													}
												],
												"src": "2686:477:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3319:507:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3329:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3339:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3333:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3350:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3368:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3379:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3364:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3354:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3398:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3409:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3391:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3391:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3421:17:17",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3432:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3425:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3447:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3467:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3461:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3461:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3451:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3490:6:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3498:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3483:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3483:22:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3514:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3525:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3521:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:18:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3548:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3574:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3562:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3552:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3586:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3595:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3590:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3654:146:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3675:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3690:6:17"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "3684:5:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3684:13:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3707:3:17",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3712:1:17",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3703:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3703:11:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3716:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3699:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3699:19:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3680:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3680:39:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3668:52:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3668:52:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3733:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3744:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3749:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3740:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3740:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3733:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3765:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3779:6:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3775:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3775:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3765:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3616:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3619:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3613:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3627:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3629:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3638:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3641:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3634:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3634:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3629:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3609:3:17",
																"statements": []
															},
															"src": "3605:195:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3809:11:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3817:3:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3809:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3288:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3299:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3310:4:17",
														"type": ""
													}
												],
												"src": "3168:658:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3935:301:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3981:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3990:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3993:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3983:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3956:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3965:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3952:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3977:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3948:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:32:17"
															},
															"nodeType": "YulIf",
															"src": "3945:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4006:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4032:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4019:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4010:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4076:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4051:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4051:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4091:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4101:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4115:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4158:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4143:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4130:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4119:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4196:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4171:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4171:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4213:17:17",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4223:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4213:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$263",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3893:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3904:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3916:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3924:6:17",
														"type": ""
													}
												],
												"src": "3831:405:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4415:237:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4432:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4443:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4425:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4425:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4425:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4466:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4477:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4462:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4462:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4482:2:17",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4455:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4455:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4455:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4505:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4516:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4501:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4501:18:17"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4521:34:17",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4494:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4494:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4576:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4587:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4572:18:17"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4592:17:17",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4565:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4565:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4565:45:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4619:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4631:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4642:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4619:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4392:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4406:4:17",
														"type": ""
													}
												],
												"src": "4241:411:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:181:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4841:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4882:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4893:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4878:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4878:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4898:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4871:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4871:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4871:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4932:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4917:18:17"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4937:33:17",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:61:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4910:61:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4980:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4992:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4988:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4988:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4980:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4808:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4822:4:17",
														"type": ""
													}
												],
												"src": "4657:355:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5191:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5219:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5201:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5201:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5242:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5253:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5238:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5238:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5258:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5231:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5231:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:17"
																	},
																	{
																		"hexValue": "63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:34:17",
																		"type": "",
																		"value": "cannot bind more than 300 IR to "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5352:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5363:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5348:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:18:17"
																	},
																	{
																		"hexValue": "3120495253",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5368:7:17",
																		"type": "",
																		"value": "1 IRS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5341:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5341:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5385:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5397:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5408:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5393:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5393:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5385:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5168:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5182:4:17",
														"type": ""
													}
												],
												"src": "5017:401:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5597:181:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5614:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5625:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5607:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5607:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5607:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5648:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5659:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5644:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5664:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5637:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5637:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5687:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5698:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5683:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5683:18:17"
																	},
																	{
																		"hexValue": "6964656e74697479207265676973747279206973206e6f742073746f726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5703:33:17",
																		"type": "",
																		"value": "identity registry is not stored"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5676:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5676:61:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5676:61:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5746:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5758:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5769:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5754:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5754:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5746:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5574:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5588:4:17",
														"type": ""
													}
												],
												"src": "5423:355:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5815:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5832:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5839:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5844:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5835:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5835:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5825:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5825:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5872:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5875:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5865:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5865:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5865:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5899:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5889:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5783:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5947:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5964:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5971:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5976:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5957:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5957:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6004:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6007:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5997:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5997:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5997:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6028:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6031:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5915:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6096:79:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6106:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6118:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6121:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6114:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6114:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6106:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6147:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6149:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6149:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6149:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "6138:4:17"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6144:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6135:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:11:17"
															},
															"nodeType": "YulIf",
															"src": "6132:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6078:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6081:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6087:4:17",
														"type": ""
													}
												],
												"src": "6047:128:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6212:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6229:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6236:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6241:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6232:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6232:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6222:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6222:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6269:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6272:4:17",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6262:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6262:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6296:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6286:15:17"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "6180:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6359:88:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6390:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6392:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6392:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6392:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6375:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6382:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6382:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6372:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6372:17:17"
															},
															"nodeType": "YulIf",
															"src": "6369:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6421:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6432:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6439:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6428:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6428:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6421:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6341:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6351:3:17",
														"type": ""
													}
												],
												"src": "6312:135:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6626:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6643:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6654:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6636:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6636:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6636:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6688:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6673:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6693:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6666:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6716:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6727:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:18:17"
																	},
																	{
																		"hexValue": "61646472657373206e6f742073746f72656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6732:24:17",
																		"type": "",
																		"value": "address not stored yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6705:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6766:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6778:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6774:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6766:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6603:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6617:4:17",
														"type": ""
													}
												],
												"src": "6452:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6977:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6994:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6987:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7028:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7039:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7024:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7024:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7044:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7017:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7017:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7067:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7078:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7063:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7063:18:17"
																	},
																	{
																		"hexValue": "616464726573732073746f72656420616c7265616479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7083:24:17",
																		"type": "",
																		"value": "address stored already"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7056:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7056:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7117:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7129:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7140:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7125:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7117:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6954:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6968:4:17",
														"type": ""
													}
												],
												"src": "6803:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7328:236:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7345:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7356:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7379:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7375:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7368:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7429:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7414:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7414:18:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7434:34:17",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7407:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7407:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7407:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7489:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7500:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7485:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7485:18:17"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7505:16:17",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7478:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7531:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7543:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7554:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7539:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7539:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7531:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7305:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7319:4:17",
														"type": ""
													}
												],
												"src": "7154:410:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7676:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7686:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7698:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7709:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7694:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7694:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7686:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7728:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7743:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7751:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7739:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7739:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7721:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7721:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7721:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7645:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7656:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7667:4:17",
														"type": ""
													}
												],
												"src": "7569:194:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7942:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7959:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7970:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7952:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7952:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7952:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7993:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8004:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7989:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8009:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7982:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7982:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8032:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8043:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8028:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8028:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8048:34:17",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8021:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8103:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8114:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8099:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8099:18:17"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8119:8:17",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8092:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8092:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8092:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8137:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8149:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8160:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8145:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8137:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7919:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7933:4:17",
														"type": ""
													}
												],
												"src": "7768:402:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8349:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8366:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8377:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8359:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8359:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8411:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8396:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8396:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8416:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8389:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8389:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8389:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8439:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8450:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8435:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8435:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8455:34:17",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8428:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8428:62:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8499:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8511:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8522:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8507:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8507:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8499:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8326:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8340:4:17",
														"type": ""
													}
												],
												"src": "8175:356:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8710:233:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8727:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8738:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8720:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8720:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8720:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8761:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8772:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8757:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8757:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8777:2:17",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8750:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8750:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8800:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8811:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8796:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8796:18:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8816:34:17",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8789:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8789:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8789:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8871:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8882:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8867:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8867:18:17"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8887:13:17",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8860:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8860:41:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8910:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8922:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8933:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8918:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8918:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8910:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8687:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8701:4:17",
														"type": ""
													}
												],
												"src": "8536:407:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9014:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9024:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9033:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9028:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9093:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9118:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9123:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9114:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9114:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9137:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9142:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9133:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9133:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9127:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9127:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9107:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9107:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9107:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9054:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9057:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9051:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9051:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9065:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9067:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9076:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9079:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9072:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9072:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9067:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9047:3:17",
																"statements": []
															},
															"src": "9043:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9176:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9181:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9172:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9172:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9190:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9165:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9165:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9165:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8992:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8997:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9002:6:17",
														"type": ""
													}
												],
												"src": "8948:250:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9592:423:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9609:3:17"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9614:25:17",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9602:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9602:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9602:38:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9649:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9669:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9663:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9663:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9653:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9724:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9732:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9720:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9743:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9748:2:17",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9739:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9739:12:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9753:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9685:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9685:75:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9685:75:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9769:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9783:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9788:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9779:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9779:16:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9773:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9815:2:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9819:2:17",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9811:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:11:17"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9824:19:17",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9804:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9804:40:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9804:40:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9853:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9875:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9869:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:13:17"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "9857:8:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9930:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9938:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9926:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9926:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9949:2:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9953:2:17",
																				"type": "",
																				"value": "40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9945:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9945:11:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "9958:8:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "9891:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9891:76:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9891:76:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9976:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9991:2:17"
																			},
																			{
																				"name": "length_1",
																				"nodeType": "YulIdentifier",
																				"src": "9995:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9987:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9987:17:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10006:2:17",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9983:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9983:26:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9976:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9560:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9565:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9573:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9584:3:17",
														"type": ""
													}
												],
												"src": "9203:812:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10141:275:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10158:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10169:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10151:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10151:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10151:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10181:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10201:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10195:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10195:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10185:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10228:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10239:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10224:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10224:18:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10244:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10217:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10217:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10217:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10299:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10307:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10295:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10295:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10316:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10327:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10312:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10312:18:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10332:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10260:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10260:79:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10260:79:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10348:62:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10364:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "10383:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10391:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10379:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10379:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10400:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "10396:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10396:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "10375:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10375:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10360:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10360:45:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10407:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10356:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10356:54:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10348:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10110:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10121:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10132:4:17",
														"type": ""
													}
												],
												"src": "10020:396:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10473:116:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10483:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10498:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10501:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10494:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10494:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10483:7:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10561:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10563:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10563:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10563:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10532:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10525:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10525:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10539:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10546:7:17"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10555:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10542:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10542:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10536:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10536:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10522:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10522:37:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10515:45:17"
															},
															"nodeType": "YulIf",
															"src": "10512:71:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10452:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10455:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10461:7:17",
														"type": ""
													}
												],
												"src": "10421:168:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10642:77:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10652:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10663:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10666:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10659:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10691:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10693:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10693:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10693:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10683:1:17"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10686:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10680:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10680:10:17"
															},
															"nodeType": "YulIf",
															"src": "10677:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10625:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10628:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10634:3:17",
														"type": ""
													}
												],
												"src": "10594:125:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10756:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10773:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10780:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10785:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10776:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10776:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10766:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10766:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10766:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10813:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10816:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10806:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10806:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10806:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10837:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10840:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10830:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10830:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10830:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10724:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10903:89:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10930:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10932:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10932:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10932:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10923:5:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10916:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:13:17"
															},
															"nodeType": "YulIf",
															"src": "10913:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10961:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10972:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10983:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10979:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10968:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10968:18:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10961:3:17"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10885:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10895:3:17",
														"type": ""
													}
												],
												"src": "10856:136:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11171:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11188:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11199:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11181:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11181:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11181:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11222:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11233:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11218:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11218:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11238:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11211:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11211:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11261:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11272:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11257:18:17"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11277:34:17",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11250:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11250:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11250:62:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11321:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11333:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11344:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11329:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11329:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11321:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11148:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11162:4:17",
														"type": ""
													}
												],
												"src": "10997:356:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_contract$_IIdentity_$263__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$263t_uint16(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_uint16(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$263(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"cannot bind more than 300 IR to \")\n        mstore(add(headStart, 96), \"1 IRS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"identity registry is not stored\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"address not stored yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"address stored already\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c806397a012f7116100b8578063cf191bcd1161007c578063cf191bcd146102fd578063d547741f14610310578063e1c7392a14610323578063e58378bb1461032b578063e805cf8614610352578063f2fde38b1461036557600080fd5b806397a012f7146102a75780639f3418d5146102ba578063a217fddf146102cd578063a53410dd146102d5578063bf9eb959146102e857600080fd5b8063690a49f91161010a578063690a49f9146101dd578063715018a6146101f0578063727e13bc146101f85780637988d3a51461023f5780638da5cb5b1461028357806391d148541461029457600080fd5b806301ffc9a71461014757806322459e181461016f578063248a9ca3146101925780632f2ff15d146101b557806336568abe146101ca575b600080fd5b61015a610155366004611199565b610378565b60405190151581526020015b60405180910390f35b61018460008051602061159083398151915281565b604051908152602001610166565b6101846101a03660046111c3565b60009081526065602052604090206001015490565b6101c86101c33660046111f1565b6103af565b005b6101c86101d83660046111f1565b6103d9565b6101c86101eb366004611221565b61045c565b6101c8610573565b61022c610206366004611221565b6001600160a01b0316600090815260c96020526040902054600160a01b900461ffff1690565b60405161ffff9091168152602001610166565b61026b61024d366004611221565b6001600160a01b03908116600090815260c960205260409020541690565b6040516001600160a01b039091168152602001610166565b6097546001600160a01b031661026b565b61015a6102a23660046111f1565b610587565b6101c86102b5366004611221565b6105b2565b6101c86102c8366004611255565b61077e565b610184600081565b6101c86102e336600461128a565b610857565b6102f0610971565b60405161016691906112d1565b6101c861030b366004611221565b6109d3565b6101c861031e3660046111f1565b610aa2565b6101c8610ac7565b6101847fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e81565b6101c861036036600461131e565b610c25565b6101c8610373366004611221565b610d13565b60006001600160e01b03198216637965db0b60e01b14806103a957506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152606560205260409020600101546103ca81610d89565b6103d48383610d93565b505050565b6001600160a01b038116331461044e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104588282610e19565b5050565b6001600160a01b0381166104825760405162461bcd60e51b81526004016104459061134c565b60ca5461012c116104e35760405162461bcd60e51b815260206004820152602560248201527f63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f20604482015264312049525360d81b6064820152608401610445565b6104fb60008051602061159083398151915282610d93565b60ca805460018101825560009182527f42d72674974f694b5f5159593243114d38a5c39c89d6b62fee061ff523240ee10180546001600160a01b0319166001600160a01b03841690811790915560405190917f500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb91a250565b61057b610e80565b6105856000610eda565b565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b0381166105d85760405162461bcd60e51b81526004016104459061134c565b60ca546106275760405162461bcd60e51b815260206004820152601f60248201527f6964656e74697479207265676973747279206973206e6f742073746f726564006044820152606401610445565b60ca5460005b8181101561072d57826001600160a01b031660ca828154811061065257610652611383565b6000918252602090912001546001600160a01b03160361071b5760ca6106796001846113af565b8154811061068957610689611383565b60009182526020909120015460ca80546001600160a01b0390921691839081106106b5576106b5611383565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060ca8054806106f4576106f46113c2565b600082815260209020810160001990810180546001600160a01b031916905501905561072d565b80610725816113d8565b91505061062d565b5061074660008051602061159083398151915283610e19565b6040516001600160a01b038316907f51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c990600090a25050565b60008051602061159083398151915261079681610d89565b6001600160a01b0383166107bc5760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03838116600090815260c96020526040902054166107f35760405162461bcd60e51b8152600401610445906113f1565b6001600160a01b038316600081815260c96020526040808220805461ffff60a01b1916600160a01b61ffff88169081029190911790915590519092917f20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf91a3505050565b60008051602061159083398151915261086f81610d89565b6001600160a01b0384161580159061088f57506001600160a01b03831615155b6108ab5760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03848116600090815260c96020526040902054161561090c5760405162461bcd60e51b8152602060048201526016602482015275616464726573732073746f72656420616c726561647960501b6044820152606401610445565b6001600160a01b03848116600081815260c9602052604080822080549488166001600160b01b03199095168517600160a01b61ffff891602179055517e30dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e7479190a350505050565b606060ca8054806020026020016040519081016040528092919081815260200182805480156109c957602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109ab575b5050505050905090565b6000805160206115908339815191526109eb81610d89565b6001600160a01b038216610a115760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03828116600090815260c9602052604090205416610a485760405162461bcd60e51b8152600401610445906113f1565b6001600160a01b03808316600081815260c9602052604080822080546001600160b01b0319811690915590519316928392917fca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b91a3505050565b600082815260656020526040902060010154610abd81610d89565b6103d48383610e19565b600054610100900460ff1615808015610ae75750600054600160ff909116105b80610b015750303b158015610b01575060005460ff166001145b610b645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610445565b6000805460ff191660011790558015610b87576000805461ff0019166101001790555b610b92600033610d93565b610bbc7fb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e33610d93565b610bd460008051602061159083398151915233610d93565b610bdc610f2c565b8015610c22576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b600080516020611590833981519152610c3d81610d89565b6001600160a01b03831615801590610c5d57506001600160a01b03821615155b610c795760405162461bcd60e51b81526004016104459061134c565b6001600160a01b03838116600090815260c9602052604090205416610cb05760405162461bcd60e51b8152600401610445906113f1565b6001600160a01b03808416600090815260c9602052604080822080548685166001600160a01b031982168117909255915191909316929183917f556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b8089190a350505050565b610d1b610e80565b6001600160a01b038116610d805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610445565b610c2281610eda565b610c228133610f5b565b610d9d8282610587565b6104585760008281526065602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610dd53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610e238282610587565b156104585760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6097546001600160a01b031633146105855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610445565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f535760405162461bcd60e51b815260040161044590611421565b610585610fb4565b610f658282610587565b61045857610f7281610fe4565b610f7d836020610ff6565b604051602001610f8e929190611490565b60408051601f198184030181529082905262461bcd60e51b825261044591600401611505565b600054610100900460ff16610fdb5760405162461bcd60e51b815260040161044590611421565b61058533610eda565b60606103a96001600160a01b03831660145b60606000611005836002611538565b61101090600261154f565b67ffffffffffffffff81111561102857611028611562565b6040519080825280601f01601f191660200182016040528015611052576020820181803683370190505b509050600360fc1b8160008151811061106d5761106d611383565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061109c5761109c611383565b60200101906001600160f81b031916908160001a90535060006110c0846002611538565b6110cb90600161154f565b90505b6001811115611143576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106110ff576110ff611383565b1a60f81b82828151811061111557611115611383565b60200101906001600160f81b031916908160001a90535060049490941c9361113c81611578565b90506110ce565b5083156111925760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610445565b9392505050565b6000602082840312156111ab57600080fd5b81356001600160e01b03198116811461119257600080fd5b6000602082840312156111d557600080fd5b5035919050565b6001600160a01b0381168114610c2257600080fd5b6000806040838503121561120457600080fd5b823591506020830135611216816111dc565b809150509250929050565b60006020828403121561123357600080fd5b8135611192816111dc565b803561ffff8116811461125057600080fd5b919050565b6000806040838503121561126857600080fd5b8235611273816111dc565b91506112816020840161123e565b90509250929050565b60008060006060848603121561129f57600080fd5b83356112aa816111dc565b925060208401356112ba816111dc565b91506112c86040850161123e565b90509250925092565b6020808252825182820181905260009190848201906040850190845b818110156113125783516001600160a01b0316835292840192918401916001016112ed565b50909695505050505050565b6000806040838503121561133157600080fd5b823561133c816111dc565b91506020830135611216816111dc565b6020808252601f908201527f696e76616c696420617267756d656e74202d207a65726f206164647265737300604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156103a9576103a9611399565b634e487b7160e01b600052603160045260246000fd5b6000600182016113ea576113ea611399565b5060010190565b6020808252601690820152751859191c995cdcc81b9bdd081cdd1bdc9959081e595d60521b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b8381101561148757818101518382015260200161146f565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516114c881601785016020880161146c565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516114f981602884016020880161146c565b01602801949350505050565b602081526000825180602084015261152481604085016020870161146c565b601f01601f19169190910160400192915050565b80820281158282048414176103a9576103a9611399565b808201808211156103a9576103a9611399565b634e487b7160e01b600052604160045260246000fd5b60008161158757611587611399565b50600019019056fecab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709a2646970667358221220455e2cde2e4217ab535adb8f94e662aecd4ae15afccf4bbb04d1afaa3b61168f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x97A012F7 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCF191BCD GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCF191BCD EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xE58378BB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xE805CF86 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97A012F7 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x9F3418D5 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xA53410DD EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xBF9EB959 EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x690A49F9 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x690A49F9 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x727E13BC EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x7988D3A5 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x22459E18 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x45C JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x573 JUMP JUMPDEST PUSH2 0x22C PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x26B JUMP JUMPDEST PUSH2 0x15A PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x5B2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1255 JUMP JUMPDEST PUSH2 0x77E JUMP JUMPDEST PUSH2 0x184 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x128A JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x971 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x12D1 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x11F1 JUMP JUMPDEST PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x184 PUSH32 0xB19546DFF01E856FB3F010C267A7B1C60363CF8A4664E21CC89C26224620214E DUP2 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x131E JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1221 JUMP JUMPDEST PUSH2 0xD13 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3A9 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x3CA DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 PUSH2 0xD93 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x458 DUP3 DUP3 PUSH2 0xE19 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x482 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH2 0x12C GT PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742062696E64206D6F7265207468616E2033303020495220746F20 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3120495253 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x42D72674974F694B5F5159593243114D38A5C39C89D6B62FEE061FF523240EE1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x500C250171AA20E861B680F93502547B9D436EDA7D4C537FC360DB6E0C6EEDFB SWAP2 LOG2 POP JUMP JUMPDEST PUSH2 0x57B PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x585 PUSH1 0x0 PUSH2 0xEDA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH2 0x627 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6964656E74697479207265676973747279206973206E6F742073746F72656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72D JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xCA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x652 JUMPI PUSH2 0x652 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x71B JUMPI PUSH1 0xCA PUSH2 0x679 PUSH1 0x1 DUP5 PUSH2 0x13AF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x689 JUMPI PUSH2 0x689 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xCA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x6B5 JUMPI PUSH2 0x6B5 PUSH2 0x1383 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0xCA DUP1 SLOAD DUP1 PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x72D JUMP JUMPDEST DUP1 PUSH2 0x725 DUP2 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x62D JUMP JUMPDEST POP PUSH2 0x746 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x51F353EB5801583FDF2706E43C045B62FDF6B1566820B349390616363ECF72C9 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x796 DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH2 0xFFFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP9 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0x20965FCDC6EED7AE398065B40ECE4E732BA667992CA819FC54E80E9F2047C4CF SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x86F DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x88F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO JUMPDEST PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x616464726573732073746F72656420616C7265616479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP9 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP6 AND DUP6 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH2 0xFFFF DUP10 AND MUL OR SWAP1 SSTORE MLOAD PUSH31 0x30DEA7E9C9AFAA2E3C9810F2FC9B5181F1BAD74CA5A8DB85F746A33585E747 SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xCA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AB JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9EB DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP4 AND SWAP3 DUP4 SWAP3 SWAP2 PUSH32 0xCA6A4C3370B859312246E7F086284076E557997E10D856B716C23AB67067790B SWAP2 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xABD DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x3D4 DUP4 DUP4 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xAE7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xB01 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB01 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xB64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xB92 PUSH1 0x0 CALLER PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xBBC PUSH32 0xB19546DFF01E856FB3F010C267A7B1C60363CF8A4664E21CC89C26224620214E CALLER PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xBD4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xBDC PUSH2 0xF2C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1590 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xC3D DUP2 PUSH2 0xD89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC5D JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0xCB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x13F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD DUP7 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 SWAP2 DUP4 SWAP2 PUSH32 0x556CE885DFCEA52155C773F1ED2E58781C51945C13030AB8F793C61F51D1B808 SWAP2 SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0xD1B PUSH2 0xE80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x445 JUMP JUMPDEST PUSH2 0xC22 DUP2 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0xC22 DUP2 CALLER PUSH2 0xF5B JUMP JUMPDEST PUSH2 0xD9D DUP3 DUP3 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x458 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDD5 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0xE23 DUP3 DUP3 PUSH2 0x587 JUMP JUMPDEST ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST PUSH1 0x97 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x585 PUSH2 0xFB4 JUMP JUMPDEST PUSH2 0xF65 DUP3 DUP3 PUSH2 0x587 JUMP JUMPDEST PUSH2 0x458 JUMPI PUSH2 0xF72 DUP2 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0xF7D DUP4 PUSH1 0x20 PUSH2 0xFF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8E SWAP3 SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x445 SWAP2 PUSH1 0x4 ADD PUSH2 0x1505 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x445 SWAP1 PUSH2 0x1421 JUMP JUMPDEST PUSH2 0x585 CALLER PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3A9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1005 DUP4 PUSH1 0x2 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0x1010 SWAP1 PUSH1 0x2 PUSH2 0x154F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1028 JUMPI PUSH2 0x1028 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1052 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x106D JUMPI PUSH2 0x106D PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x109C JUMPI PUSH2 0x109C PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x10C0 DUP5 PUSH1 0x2 PUSH2 0x1538 JUMP JUMPDEST PUSH2 0x10CB SWAP1 PUSH1 0x1 PUSH2 0x154F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1143 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x10FF JUMPI PUSH2 0x10FF PUSH2 0x1383 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1115 JUMPI PUSH2 0x1115 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x113C DUP2 PUSH2 0x1578 JUMP JUMPDEST SWAP1 POP PUSH2 0x10CE JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x445 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1216 DUP2 PUSH2 0x11DC JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1192 DUP2 PUSH2 0x11DC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1273 DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP2 POP PUSH2 0x1281 PUSH1 0x20 DUP5 ADD PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x129F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12AA DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x12BA DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP2 POP PUSH2 0x12C8 PUSH1 0x40 DUP6 ADD PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1312 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x12ED JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x133C DUP2 PUSH2 0x11DC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1216 DUP2 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1399 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13EA JUMPI PUSH2 0x13EA PUSH2 0x1399 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x1859191C995CDCC81B9BDD081CDD1BDC9959081E595D PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1487 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x146F JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x14C8 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x146C JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x14F9 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x146C JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1524 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x146C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1399 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x1399 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1587 JUMPI PUSH2 0x1587 PUSH2 0x1399 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID 0xCA 0xB5 LOG0 0xBF 0xE0 0xB7 SWAP14 0x2C 0x4B SHR 0x2E MUL MSIZE SWAP16 LOG0 DIFFICULTY 0xD1 ISZERO 0xB7 MLOAD 0x1F SWAP7 MSIZE ADDRESS PUSH29 0xB4276950967709A2646970667358221220455E2CDE2E4217AB535ADB8F SWAP5 0xE6 PUSH3 0xAECD4A 0xE1 GAS 0xFC 0xCF 0x4B 0xBB DIV 0xD1 0xAF 0xAA EXTCODESIZE PUSH2 0x168F PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "375:5504:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3029:213:3;;;;;;:::i;:::-;;:::i;:::-;;;470:14:17;;463:22;445:41;;433:2;418:18;3029:213:3;;;;;;;;516:111:14;;-1:-1:-1;;;;;;;;;;;516:111:14;;;;;643:25:17;;;631:2;616:18;516:111:14;497:177:17;4834:129:3;;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;5259:145;;;;;;:::i;:::-;;:::i;:::-;;6368:214;;;;;;:::i;:::-;;:::i;3711:486:14:-;;;;;;:::i;:::-;;:::i;2064:101:5:-;;;:::i;5683:194:14:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5829:25:14;5800:6;5829:25;;;:11;:25;;;;;:41;-1:-1:-1;;;5829:41:14;;;;;5683:194;;;;1746:6:17;1734:19;;;1716:38;;1704:2;1689:18;5683:194:14;1572:188:17;5403:191:14;;;;;;:::i;:::-;-1:-1:-1;;;;;5545:25:14;;;5513:9;5545:25;;;:11;:25;;;;;:42;;;5403:191;;;;-1:-1:-1;;;;;1946:32:17;;;1928:51;;1916:2;1901:18;5403:191:14;1765:220:17;1441:85:5;1513:6;;-1:-1:-1;;;;;1513:6:5;1441:85;;3329:145:3;;;;;;:::i;:::-;;:::i;4287:777:14:-;;;;;;:::i;:::-;;:::i;2509:490::-;;;;;;:::i;:::-;;:::i;2450:49:3:-;;2495:4;2450:49;;1050:640:14;;;;;;:::i;:::-;;:::i;5156:165::-;;;:::i;:::-;;;;;;;:::i;3092:531::-;;;;;;:::i;:::-;;:::i;5684:147:3:-;;;;;;:::i;:::-;;:::i;752:210:14:-;;;:::i;634:111::-;;679:66;634:111;;1778:636;;;;;;:::i;:::-;;:::i;2314:198:5:-;;;;;;:::i;:::-;;:::i;3029:213:3:-;3114:4;-1:-1:-1;;;;;;3137:58:3;;-1:-1:-1;;;3137:58:3;;:98;;-1:-1:-1;;;;;;;;;;1168:51:10;;;3199:36:3;3130:105;3029:213;-1:-1:-1;;3029:213:3:o;5259:145::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;6368:214::-;-1:-1:-1;;;;;6463:23:3;;929:10:8;6463:23:3;6455:83;;;;-1:-1:-1;;;6455:83:3;;4443:2:17;6455:83:3;;;4425:21:17;4482:2;4462:18;;;4455:30;4521:34;4501:18;;;4494:62;-1:-1:-1;;;4572:18:17;;;4565:45;4627:19;;6455:83:3;;;;;;;;;6549:26;6561:4;6567:7;6549:11;:26::i;:::-;6368:214;;:::o;3711:486:14:-;-1:-1:-1;;;;;3817:31:14;;3796:109;;;;-1:-1:-1;;;3796:109:14;;;;;;;:::i;:::-;3936:19;:26;3965:3;-1:-1:-1;3915:116:14;;;;-1:-1:-1;;;3915:116:14;;5219:2:17;3915:116:14;;;5201:21:17;5258:2;5238:18;;;5231:30;5297:34;5277:18;;;5270:62;-1:-1:-1;;;5348:18:17;;;5341:35;5393:19;;3915:116:14;5017:401:17;3915:116:14;4041:41;-1:-1:-1;;;;;;;;;;;4064:17:14;4041:10;:41::i;:::-;4092:19;:43;;;;;;;-1:-1:-1;4092:43:14;;;;;;;-1:-1:-1;;;;;;4092:43:14;-1:-1:-1;;;;;4092:43:14;;;;;;;;4150:40;;4092:43;;4150:40;;;3711:486;:::o;2064:101:5:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;3329:145:3:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:3;;;;;;;;;;;;;;;3329:145::o;4287:777:14:-;-1:-1:-1;;;;;4415:31:14;;4394:109;;;;-1:-1:-1;;;4394:109:14;;;;;;;:::i;:::-;4534:19;:26;4513:108;;;;-1:-1:-1;;;4513:108:14;;5625:2:17;4513:108:14;;;5607:21:17;5664:2;5644:18;;;5637:30;5703:33;5683:18;;;5676:61;5754:18;;4513:108:14;5423:355:17;4513:108:14;4648:19;:26;4631:14;4684:265;4708:6;4704:1;:10;4684:265;;;4765:17;-1:-1:-1;;;;;4739:43:14;:19;4759:1;4739:22;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4739:22:14;:43;4735:204;;4827:19;4847:10;4856:1;4847:6;:10;:::i;:::-;4827:31;;;;;;;;:::i;:::-;;;;;;;;;;;4802:19;:22;;-1:-1:-1;;;;;4827:31:14;;;;4822:1;;4802:22;;;;;;:::i;:::-;;;;;;;;;:56;;;;;-1:-1:-1;;;;;4802:56:14;;;;;-1:-1:-1;;;;;4802:56:14;;;;;;4876:19;:25;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;4876:25:14;;;;;-1:-1:-1;;;;;;4876:25:14;;;;;;4919:5;;4735:204;4716:3;;;;:::i;:::-;;;;4684:265;;;-1:-1:-1;4958:42:14;-1:-1:-1;;;;;;;;;;;4982:17:14;4958:11;:42::i;:::-;5015;;-1:-1:-1;;;;;5015:42:14;;;;;;;;4384:680;4287:777;:::o;2509:490::-;-1:-1:-1;;;;;;;;;;;2928:16:3;561:66:14;2928:10:3;:16::i;:::-;-1:-1:-1;;;;;2670:26:14;::::1;2662:70;;;;-1:-1:-1::0;;;2662:70:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2771:25:14;;::::1;2826:1;2771:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;2742:134;;;;-1:-1:-1::0;;;2742:134:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2886:25:14;::::1;;::::0;;;:11:::1;:25;::::0;;;;;:52;;-1:-1:-1;;;;2886:52:14::1;-1:-1:-1::0;;;2886:52:14::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2953:39;;2886:52;;:25;2953:39:::1;::::0;::::1;2509:490:::0;;;:::o;1050:640::-;-1:-1:-1;;;;;;;;;;;2928:16:3;561:66:14;2928:10:3;:16::i;:::-;-1:-1:-1;;;;;1240:26:14;::::1;::::0;;::::1;::::0;:62:::1;;-1:-1:-1::0;;;;;;1270:32:14;::::1;::::0;::::1;1240:62;1219:140;;;;-1:-1:-1::0;;;1219:140:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1398:25:14;;::::1;1453:1;1398:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;1390:65:::0;1369:134:::1;;;::::0;-1:-1:-1;;;1369:134:14;;7005:2:17;1369:134:14::1;::::0;::::1;6987:21:17::0;7044:2;7024:18;;;7017:30;-1:-1:-1;;;7063:18:17;;;7056:52;7125:18;;1369:134:14::1;6803:346:17::0;1369:134:14::1;-1:-1:-1::0;;;;;1513:25:14;;::::1;;::::0;;;:11:::1;:25;::::0;;;;;:54;;;;::::1;-1:-1:-1::0;;;;;;1577:52:14;;;;;-1:-1:-1;;;1577:52:14::1;::::0;::::1;;;::::0;;1644:39;::::1;::::0;1513:25;1644:39:::1;1050:640:::0;;;;:::o;5156:165::-;5256:16;5295:19;5288:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5288:26:14;;;;;;;;;;;;;;;;;;;;;;;5156:165;:::o;3092:531::-;-1:-1:-1;;;;;;;;;;;2928:16:3;561:66:14;2928:10:3;:16::i;:::-;-1:-1:-1;;;;;3234:26:14;::::1;3226:70;;;;-1:-1:-1::0;;;3226:70:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3335:25:14;;::::1;3390:1;3335:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;3306:134;;;;-1:-1:-1::0;;;3306:134:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3474:25:14;;::::1;3450:21;3474:25:::0;;;:11:::1;:25;::::0;;;;;:42;;-1:-1:-1;;;;;;3526:32:14;;;;;3573:43;;3474:42;::::1;::::0;;;:25;3573:43:::1;::::0;::::1;3216:407;3092:531:::0;;:::o;5684:147:3:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;752:210:14:-:0;3279:19:6;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:6;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:6;1713:19:7;:23;;;3387:66:6;;-1:-1:-1;3436:12:6;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:6;;7356:2:17;3325:201:6;;;7338:21:17;7395:2;7375:18;;;7368:30;7434:34;7414:18;;;7407:62;-1:-1:-1;;;7485:18:17;;;7478:44;7539:19;;3325:201:6;7154:410:17;3325:201:6;3536:12;:16;;-1:-1:-1;;3536:16:6;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:6;;;;;3562:65;799:36:14::1;818:1;929:10:8::0;799::14::1;:36::i;:::-;846;679:66;929:10:8::0;799::14::1;:36::i;846:::-;893;-1:-1:-1::0;;;;;;;;;;;929:10:8;799::14::1;:36::i;893:::-;939:16;:14;:16::i;:::-;3651:14:6::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:6;;;3721:14;;-1:-1:-1;7721:36:17;;3721:14:6;;7709:2:17;7694:18;3721:14:6;;;;;;;3647:99;3269:483;752:210:14:o;1778:636::-;-1:-1:-1;;;;;;;;;;;2928:16:3;561:66:14;2928:10:3;:16::i;:::-;-1:-1:-1;;;;;1949:26:14;::::1;::::0;;::::1;::::0;:62:::1;;-1:-1:-1::0;;;;;;1979:32:14;::::1;::::0;::::1;1949:62;1928:140;;;;-1:-1:-1::0;;;1928:140:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2107:25:14;;::::1;2162:1;2107:25:::0;;;:11:::1;:25;::::0;;;;:42;::::1;2078:134;;;;-1:-1:-1::0;;;2078:134:14::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2246:25:14;;::::1;2222:21;2246:25:::0;;;:11:::1;:25;::::0;;;;;:42;;2298:54;;::::1;-1:-1:-1::0;;;;;;2298:54:14;::::1;::::0;::::1;::::0;;;2367:40;;2246:42;;;::::1;::::0;2298:54;2246:42;;2367:40:::1;::::0;2222:21;2367:40:::1;1918:496;1778:636:::0;;;:::o;2314:198:5:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:5;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:5;;7970:2:17;2394:73:5::1;::::0;::::1;7952:21:17::0;8009:2;7989:18;;;7982:30;8048:34;8028:18;;;8021:62;-1:-1:-1;;;8099:18:17;;;8092:36;8145:19;;2394:73:5::1;7768:402:17::0;2394:73:5::1;2477:28;2496:8;2477:18;:28::i;3768:103:3:-:0;3834:30;3845:4;929:10:8;3834::3;:30::i;7917:233::-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:3;;;;;;;;;:36;;-1:-1:-1;;8038:36:3;8070:4;8038:36;;;8120:12;929:10:8;;850:96;8120:12:3;-1:-1:-1;;;;;8093:40:3;8111:7;-1:-1:-1;;;;;8093:40:3;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8321:234::-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:3;;;;;;;;;;:37;;-1:-1:-1;;8442:37:3;;;8498:40;929:10:8;;8442:12:3;;8498:40;;8474:5;8498:40;8321:234;;:::o;1599:130:5:-;1513:6;;-1:-1:-1;;;;;1513:6:5;929:10:8;1662:23:5;1654:68;;;;-1:-1:-1;;;1654:68:5;;8377:2:17;1654:68:5;;;8359:21:17;;;8396:18;;;8389:30;8455:34;8435:18;;;8428:62;8507:18;;1654:68:5;8175:356:17;2666:187:5;2758:6;;;-1:-1:-1;;;;;2774:17:5;;;-1:-1:-1;;;;;;2774:17:5;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:6;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:6;;;;;;;:::i;:::-;1065:26:5::1;:24;:26::i;4152:501:3:-:0;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:3;;;;;;;;;;-1:-1:-1;;;4278:358:3;;;;;;;:::i;1104:111:5:-;5374:13:6;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:6;;;;;;;:::i;:::-;1176:32:5::1;929:10:8::0;1176:18:5::1;:32::i;2473:149:9:-:0;2531:13;2563:52;-1:-1:-1;;;;;2575:22:9;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:9;;1984:47;;-1:-1:-1;;;2041:6:9;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:9;;;;;;;;;-1:-1:-1;;;2066:6:9;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:9;;;;;;;;-1:-1:-1;2096:9:9;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:9;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:9;;;;;;;;-1:-1:-1;2207:1:9;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:9;;2228:55;;;;-1:-1:-1;;;2228:55:9;;11199:2:17;2228:55:9;;;11181:21:17;;;11218:18;;;11211:30;11277:34;11257:18;;;11250:62;11329:18;;2228:55:9;10997:356:17;2228:55:9;2307:6;1884:437;-1:-1:-1;;;1884:437:9:o;14:286:17:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:17;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:17;;679:180;-1:-1:-1;679:180:17:o;864:131::-;-1:-1:-1;;;;;939:31:17;;929:42;;919:70;;985:1;982;975:12;1000:315;1068:6;1076;1129:2;1117:9;1108:7;1104:23;1100:32;1097:52;;;1145:1;1142;1135:12;1097:52;1181:9;1168:23;1158:33;;1241:2;1230:9;1226:18;1213:32;1254:31;1279:5;1254:31;:::i;:::-;1304:5;1294:15;;;1000:315;;;;;:::o;1320:247::-;1379:6;1432:2;1420:9;1411:7;1407:23;1403:32;1400:52;;;1448:1;1445;1438:12;1400:52;1487:9;1474:23;1506:31;1531:5;1506:31;:::i;2198:159::-;2265:20;;2325:6;2314:18;;2304:29;;2294:57;;2347:1;2344;2337:12;2294:57;2198:159;;;:::o;2362:319::-;2429:6;2437;2490:2;2478:9;2469:7;2465:23;2461:32;2458:52;;;2506:1;2503;2496:12;2458:52;2545:9;2532:23;2564:31;2589:5;2564:31;:::i;:::-;2614:5;-1:-1:-1;2638:37:17;2671:2;2656:18;;2638:37;:::i;:::-;2628:47;;2362:319;;;;;:::o;2686:477::-;2779:6;2787;2795;2848:2;2836:9;2827:7;2823:23;2819:32;2816:52;;;2864:1;2861;2854:12;2816:52;2903:9;2890:23;2922:31;2947:5;2922:31;:::i;:::-;2972:5;-1:-1:-1;3029:2:17;3014:18;;3001:32;3042:33;3001:32;3042:33;:::i;:::-;3094:7;-1:-1:-1;3120:37:17;3153:2;3138:18;;3120:37;:::i;:::-;3110:47;;2686:477;;;;;:::o;3168:658::-;3339:2;3391:21;;;3461:13;;3364:18;;;3483:22;;;3310:4;;3339:2;3562:15;;;;3536:2;3521:18;;;3310:4;3605:195;3619:6;3616:1;3613:13;3605:195;;;3684:13;;-1:-1:-1;;;;;3680:39:17;3668:52;;3775:15;;;;3740:12;;;;3716:1;3634:9;3605:195;;;-1:-1:-1;3817:3:17;;3168:658;-1:-1:-1;;;;;;3168:658:17:o;3831:405::-;3916:6;3924;3977:2;3965:9;3956:7;3952:23;3948:32;3945:52;;;3993:1;3990;3983:12;3945:52;4032:9;4019:23;4051:31;4076:5;4051:31;:::i;:::-;4101:5;-1:-1:-1;4158:2:17;4143:18;;4130:32;4171:33;4130:32;4171:33;:::i;4657:355::-;4859:2;4841:21;;;4898:2;4878:18;;;4871:30;4937:33;4932:2;4917:18;;4910:61;5003:2;4988:18;;4657:355::o;5783:127::-;5844:10;5839:3;5835:20;5832:1;5825:31;5875:4;5872:1;5865:15;5899:4;5896:1;5889:15;5915:127;5976:10;5971:3;5967:20;5964:1;5957:31;6007:4;6004:1;5997:15;6031:4;6028:1;6021:15;6047:128;6114:9;;;6135:11;;;6132:37;;;6149:18;;:::i;6180:127::-;6241:10;6236:3;6232:20;6229:1;6222:31;6272:4;6269:1;6262:15;6296:4;6293:1;6286:15;6312:135;6351:3;6372:17;;;6369:43;;6392:18;;:::i;:::-;-1:-1:-1;6439:1:17;6428:13;;6312:135::o;6452:346::-;6654:2;6636:21;;;6693:2;6673:18;;;6666:30;-1:-1:-1;;;6727:2:17;6712:18;;6705:52;6789:2;6774:18;;6452:346::o;8536:407::-;8738:2;8720:21;;;8777:2;8757:18;;;8750:30;8816:34;8811:2;8796:18;;8789:62;-1:-1:-1;;;8882:2:17;8867:18;;8860:41;8933:3;8918:19;;8536:407::o;8948:250::-;9033:1;9043:113;9057:6;9054:1;9051:13;9043:113;;;9133:11;;;9127:18;9114:11;;;9107:39;9079:2;9072:10;9043:113;;;-1:-1:-1;;9190:1:17;9172:16;;9165:27;8948:250::o;9203:812::-;9614:25;9609:3;9602:38;9584:3;9669:6;9663:13;9685:75;9753:6;9748:2;9743:3;9739:12;9732:4;9724:6;9720:17;9685:75;:::i;:::-;-1:-1:-1;;;9819:2:17;9779:16;;;9811:11;;;9804:40;9869:13;;9891:76;9869:13;9953:2;9945:11;;9938:4;9926:17;;9891:76;:::i;:::-;9987:17;10006:2;9983:26;;9203:812;-1:-1:-1;;;;9203:812:17:o;10020:396::-;10169:2;10158:9;10151:21;10132:4;10201:6;10195:13;10244:6;10239:2;10228:9;10224:18;10217:34;10260:79;10332:6;10327:2;10316:9;10312:18;10307:2;10299:6;10295:15;10260:79;:::i;:::-;10400:2;10379:15;-1:-1:-1;;10375:29:17;10360:45;;;;10407:2;10356:54;;10020:396;-1:-1:-1;;10020:396:17:o;10421:168::-;10494:9;;;10525;;10542:15;;;10536:22;;10522:37;10512:71;;10563:18;;:::i;10594:125::-;10659:9;;;10680:10;;;10677:36;;;10693:18;;:::i;10724:127::-;10785:10;10780:3;10776:20;10773:1;10766:31;10816:4;10813:1;10806:15;10840:4;10837:1;10830:15;10856:136;10895:3;10923:5;10913:39;;10932:18;;:::i;:::-;-1:-1:-1;;;10968:18:17;;10856:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1121000",
								"executionCost": "1167",
								"totalCost": "1122167"
							},
							"external": {
								"AGENT_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "262",
								"OWNER_ROLE()": "283",
								"addIdentityToStorage(address,address,uint16)": "infinite",
								"bindIdentityRegistry(address)": "80843",
								"getRoleAdmin(bytes32)": "2512",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2786",
								"init()": "infinite",
								"linkedIdentityRegistries()": "infinite",
								"modifyStoredIdentity(address,address)": "infinite",
								"modifyStoredInvestorCountry(address,uint16)": "infinite",
								"owner()": "2442",
								"removeIdentityFromStorage(address)": "infinite",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "29112",
								"revokeRole(bytes32,address)": "infinite",
								"storedIdentity(address)": "2650",
								"storedInvestorCountry(address)": "2630",
								"supportsInterface(bytes4)": "450",
								"transferOwnership(address)": "infinite",
								"unbindIdentityRegistry(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 5879,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220455e2cde2e4217ab535adb8f94e662aecd4ae15afccf4bbb04d1afaa3b61168f64736f6c63430008110033",
									".code": [
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "97A012F7"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "CF191BCD"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "CF191BCD"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "D547741F"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "E1C7392A"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "E58378BB"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "E805CF86"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "97A012F7"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "9F3418D5"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "A217FDDF"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "A53410DD"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "BF9EB959"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "690A49F9"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "690A49F9"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "727E13BC"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "7988D3A5"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "91D14854"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "22459E18"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "248A9CA3"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "2F2FF15D"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "36568ABE"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 5879,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 516,
											"end": 627,
											"name": "tag",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 516,
											"end": 627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 516,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 516,
											"end": 627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 516,
											"end": 627,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 516,
											"end": 627,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 516,
											"end": 627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 516,
											"end": 627,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 627,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 643,
											"end": 668,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 643,
											"end": 668,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 643,
											"end": 668,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 634,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 516,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 497,
											"end": 674,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4834,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4834,
											"end": 4963,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 3711,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3711,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "tag",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 5683,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5800,
											"end": 5806,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5840,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5854,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "PUSH",
											"source": 14,
											"value": "FFFF"
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 1734,
											"end": 1753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1734,
											"end": 1753,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1734,
											"end": 1753,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1716,
											"end": 1754,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1716,
											"end": 1754,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5683,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1572,
											"end": 1760,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "tag",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 5403,
											"end": 5594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5556,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5570,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5587,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5587,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5587,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 1978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1946,
											"end": 1978,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1946,
											"end": 1978,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1928,
											"end": 1979,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1928,
											"end": 1979,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1916,
											"end": 1918,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5403,
											"end": 5594,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 1765,
											"end": 1985,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 4287,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 4287,
											"end": 5064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 2509,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2509,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2499,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "86"
										},
										{
											"begin": 1050,
											"end": 1690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 1050,
											"end": 1690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 5156,
											"end": 5321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 5156,
											"end": 5321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 3092,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "tag",
											"source": 14,
											"value": "93"
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 3092,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 5684,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5684,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 962,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 752,
											"end": 962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 752,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 752,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 752,
											"end": 962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 634,
											"end": 745,
											"name": "tag",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 634,
											"end": 745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 679,
											"end": 745,
											"name": "PUSH",
											"source": 14,
											"value": "B19546DFF01E856FB3F010C267A7B1C60363CF8A4664E21CC89C26224620214E"
										},
										{
											"begin": 634,
											"end": 745,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 634,
											"end": 745,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 1778,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1778,
											"end": 2414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3137,
											"end": 3235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3235,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3199,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3130,
											"end": 3235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3029,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5383,
											"end": 5387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5389,
											"end": 5396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 5372,
											"end": 5397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5372,
											"end": 5397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4443,
											"end": 4445,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4425,
											"end": 4446,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4482,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "2F"
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4462,
											"end": 4480,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4455,
											"end": 4485,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4521,
											"end": 4555,
											"name": "PUSH",
											"source": 17,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4501,
											"end": 4519,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4494,
											"end": 4556,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4572,
											"end": 4590,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 4572,
											"end": 4590,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4572,
											"end": 4590,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4565,
											"end": 4610,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4627,
											"end": 4646,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 4627,
											"end": 4646,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 6455,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6574,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6549,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6549,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6368,
											"end": 6582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3817,
											"end": 3848,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3817,
											"end": 3848,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 3796,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 3796,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3936,
											"end": 3955,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 3936,
											"end": 3962,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3965,
											"end": 3968,
											"name": "PUSH",
											"source": 14,
											"value": "12C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5219,
											"end": 5221,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5201,
											"end": 5222,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5258,
											"end": 5260,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 5238,
											"end": 5256,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5238,
											"end": 5256,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5238,
											"end": 5256,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5231,
											"end": 5261,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5297,
											"end": 5331,
											"name": "PUSH",
											"source": 17,
											"value": "63616E6E6F742062696E64206D6F7265207468616E2033303020495220746F20"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5270,
											"end": 5332,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3120495253"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5341,
											"end": 5376,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5393,
											"end": 5412,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5393,
											"end": 5412,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5017,
											"end": 5418,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 3915,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4064,
											"end": 4081,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 4041,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4082,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 4041,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4111,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "PUSH",
											"source": 14,
											"value": "42D72674974F694B5F5159593243114D38A5C39C89D6B62FEE061FF523240EE1"
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4190,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4150,
											"end": 4190,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4092,
											"end": 4135,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4190,
											"name": "PUSH",
											"source": 14,
											"value": "500C250171AA20E861B680F93502547B9D436EDA7D4C537FC360DB6E0C6EEDFB"
										},
										{
											"begin": 4150,
											"end": 4190,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4150,
											"end": 4190,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 4197,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2155,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2128,
											"end": 2158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3329,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3450,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4415,
											"end": 4446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4415,
											"end": 4446,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 4394,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 4394,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4534,
											"end": 4553,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 4534,
											"end": 4560,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5607,
											"end": 5628,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5664,
											"end": 5666,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5644,
											"end": 5662,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5637,
											"end": 5667,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5703,
											"end": 5736,
											"name": "PUSH",
											"source": 17,
											"value": "6964656E74697479207265676973747279206973206E6F742073746F72656400"
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5676,
											"end": 5737,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5423,
											"end": 5778,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4513,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4648,
											"end": 4667,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 4648,
											"end": 4674,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4631,
											"end": 4645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4708,
											"end": 4714,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4704,
											"end": 4705,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4704,
											"end": 4714,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4765,
											"end": 4782,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4782,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 4759,
											"end": 4760,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4739,
											"end": 4761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4782,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 4735,
											"end": 4939,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4846,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 4856,
											"end": 4857,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 4847,
											"end": 4853,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 4847,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4827,
											"end": 4858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4821,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4827,
											"end": 4858,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4822,
											"end": 4823,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4822,
											"end": 4823,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 4802,
											"end": 4824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "tag",
											"source": 14,
											"value": "169"
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4802,
											"end": 4858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4895,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "173"
										},
										{
											"begin": 4876,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4876,
											"end": 4901,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4939,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 4735,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 4716,
											"end": 4719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "tag",
											"source": 14,
											"value": "175"
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 4684,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4958,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 4999,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4958,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 4958,
											"end": 5000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4958,
											"end": 5000,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 4958,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "PUSH",
											"source": 14,
											"value": "51F353EB5801583FDF2706E43C045B62FDF6B1566820B349390616363ECF72C9"
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5057,
											"name": "LOG2",
											"source": 14
										},
										{
											"begin": 4384,
											"end": 5064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 5064,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4287,
											"end": 5064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "tag",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 561,
											"end": 627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2696,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2670,
											"end": 2696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 2662,
											"end": 2732,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 2662,
											"end": 2732,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2826,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 2771,
											"end": 2796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2796,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2813,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2771,
											"end": 2813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 2742,
											"end": 2876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 2742,
											"end": 2876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 2886,
											"end": 2911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 2938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2886,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFF"
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2953,
											"end": 2992,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2953,
											"end": 2992,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2938,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2911,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2953,
											"end": 2992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20965FCDC6EED7AE398065B40ECE4E732BA667992CA819FC54E80E9F2047C4CF"
										},
										{
											"begin": 2953,
											"end": 2992,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2953,
											"end": 2992,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 561,
											"end": 627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1266,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1240,
											"end": 1266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1240,
											"end": 1266,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1240,
											"end": 1266,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1240,
											"end": 1266,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1240,
											"end": 1266,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1240,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1302,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1302,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1302,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1302,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1240,
											"end": 1302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 1219,
											"end": 1359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1219,
											"end": 1359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1453,
											"end": 1454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 1398,
											"end": 1423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1423,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1440,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1390,
											"end": 1455,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1503,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1369,
											"end": 1503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1503,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1369,
											"end": 1503,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 7008,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7044,
											"end": 7046,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7024,
											"end": 7042,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7017,
											"end": 7047,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616464726573732073746F72656420616C7265616479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7081,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7063,
											"end": 7081,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7063,
											"end": 7081,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7056,
											"end": 7108,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 6803,
											"end": 7149,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1369,
											"end": 1503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 1513,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1567,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1567,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1567,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1567,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "OR",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1577,
											"end": 1629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFF"
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1577,
											"end": 1629,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1644,
											"end": 1683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "30DEA7E9C9AFAA2E3C9810F2FC9B5181F1BAD74CA5A8DB85F746A33585E747"
										},
										{
											"begin": 1644,
											"end": 1683,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1513,
											"end": 1538,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1644,
											"end": 1683,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1050,
											"end": 1690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5295,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "CA"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5288,
											"end": 5314,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5156,
											"end": 5321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 561,
											"end": 627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3234,
											"end": 3260,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3234,
											"end": 3260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 3226,
											"end": 3296,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 3226,
											"end": 3296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3360,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3390,
											"end": 3391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 3335,
											"end": 3360,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3360,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3377,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3335,
											"end": 3377,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 3306,
											"end": 3440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 3306,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 3474,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3516,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3516,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3616,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3616,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3516,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3516,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3516,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3516,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3474,
											"end": 3499,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "CA6A4C3370B859312246E7F086284076E557997E10D856B716C23AB67067790B"
										},
										{
											"begin": 3573,
											"end": 3616,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3573,
											"end": 3616,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 3216,
											"end": 3623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3092,
											"end": 3623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5684,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2939,
											"end": 2943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5798,
											"end": 5824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5810,
											"end": 5814,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5798,
											"end": 5809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 5798,
											"end": 5824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 752,
											"end": 962,
											"name": "tag",
											"source": 14,
											"value": "99"
										},
										{
											"begin": 752,
											"end": 962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7395,
											"end": 7397,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7368,
											"end": 7398,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7434,
											"end": 7468,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 7414,
											"end": 7432,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7414,
											"end": 7432,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7414,
											"end": 7432,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7407,
											"end": 7469,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7478,
											"end": 7522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7539,
											"end": 7558,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7539,
											"end": 7558,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7154,
											"end": 7564,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 799,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 818,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 799,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 799,
											"end": 835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 799,
											"end": 835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 799,
											"end": 835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 846,
											"end": 882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 679,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "B19546DFF01E856FB3F010C267A7B1C60363CF8A4664E21CC89C26224620214E"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 799,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 799,
											"end": 835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 846,
											"end": 882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 846,
											"end": 882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 893,
											"end": 929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 799,
											"end": 809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 799,
											"end": 835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 893,
											"end": 929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 893,
											"end": 929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 939,
											"end": 955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 939,
											"end": 953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 939,
											"end": 955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 939,
											"end": 955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 939,
											"end": 955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 7721,
											"end": 7757,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7721,
											"end": 7757,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7709,
											"end": 7711,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 561,
											"end": 627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2928,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2928,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 2928,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1975,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1975,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 1949,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1979,
											"end": 2011,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 2011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 2011,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 2011,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 2011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 1949,
											"end": 2011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 1928,
											"end": 2068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 1928,
											"end": 2068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2132,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2162,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 2107,
											"end": 2132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2132,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2149,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2107,
											"end": 2149,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 2078,
											"end": 2212,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 2078,
											"end": 2212,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2271,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "C9"
										},
										{
											"begin": 2246,
											"end": 2271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2271,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2298,
											"end": 2352,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2288,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "556CE885DFCEA52155C773F1ED2E58781C51945C13030AB8F793C61F51D1B808"
										},
										{
											"begin": 2367,
											"end": 2407,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2222,
											"end": 2243,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2367,
											"end": 2407,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 14
										},
										{
											"begin": 1918,
											"end": 2414,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1778,
											"end": 2414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 7972,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7952,
											"end": 7973,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7989,
											"end": 8007,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7982,
											"end": 8012,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8048,
											"end": 8082,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8028,
											"end": 8046,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8021,
											"end": 8083,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8092,
											"end": 8128,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8145,
											"end": 8164,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8145,
											"end": 8164,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7768,
											"end": 8170,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2496,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2477,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3768,
											"end": 3871,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3768,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3834,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3834,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 3834,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8008,
											"end": 8012,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8021,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8000,
											"end": 8022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 8000,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7995,
											"end": 8144,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8044,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8050,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8070,
											"end": 8074,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8038,
											"end": 8074,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 8120,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8111,
											"end": 8118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8105,
											"end": 8109,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 3,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8093,
											"end": 8133,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7917,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8418,
											"end": 8425,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 8404,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 8400,
											"end": 8549,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8474,
											"end": 8479,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8448,
											"name": "PUSH",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8471,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8479,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 929,
											"end": 939,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8442,
											"end": 8454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "PUSH",
											"source": 3,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8474,
											"end": 8479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8498,
											"end": 8538,
											"name": "LOG4",
											"source": 3
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8321,
											"end": 8555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8321,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8379,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8359,
											"end": 8380,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8380,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8380,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8389,
											"end": 8419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8455,
											"end": 8489,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8435,
											"end": 8453,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8435,
											"end": 8453,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8435,
											"end": 8453,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8428,
											"end": 8490,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8525,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8507,
											"end": 8525,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8175,
											"end": 8531,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2729,
											"end": 2853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 4152,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4248,
											"end": 4252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4240,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4235,
											"end": 4647,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 4454,
											"end": 4461,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 4423,
											"end": 4462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 4423,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 4572,
											"end": 4576,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 4533,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 4533,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 4330,
											"end": 4604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4330,
											"end": 4604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4278,
											"end": 4636,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 4278,
											"end": 4636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2016,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2016,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2006,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2041,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2066,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2108,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2108,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2162,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "F8"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2150,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 2131,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11199,
											"end": 11201,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11202,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11181,
											"end": 11202,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11181,
											"end": 11202,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11236,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11211,
											"end": 11241,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11277,
											"end": 11311,
											"name": "PUSH",
											"source": 17,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 11257,
											"end": 11275,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11257,
											"end": 11275,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11257,
											"end": 11275,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11250,
											"end": 11312,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 10997,
											"end": 11353,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 679,
											"end": 859,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 859,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 738,
											"end": 744,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 793,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 770,
											"end": 777,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 762,
											"end": 794,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 759,
											"end": 811,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 759,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 805,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 797,
											"end": 809,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 759,
											"end": 811,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 759,
											"end": 811,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 830,
											"end": 853,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 679,
											"end": 859,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 679,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 864,
											"end": 995,
											"name": "tag",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 864,
											"end": 995,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 939,
											"end": 970,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 939,
											"end": 970,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 929,
											"end": 971,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 929,
											"end": 971,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 919,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 919,
											"end": 989,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 985,
											"end": 986,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 983,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 975,
											"end": 987,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1129,
											"end": 1131,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1126,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1104,
											"end": 1127,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1100,
											"end": 1132,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1145,
											"end": 1146,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1135,
											"end": 1147,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 1097,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1181,
											"end": 1190,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1168,
											"end": 1191,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1158,
											"end": 1191,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1158,
											"end": 1191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1241,
											"end": 1243,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1213,
											"end": 1245,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 1254,
											"end": 1285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1294,
											"end": 1309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1320,
											"end": 1567,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 1320,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1434,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1430,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1400,
											"end": 1452,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1400,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 1400,
											"end": 1452,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1438,
											"end": 1450,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1400,
											"end": 1452,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 1400,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1496,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1474,
											"end": 1497,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1506,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1506,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 1506,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2357,
											"name": "tag",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 2198,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2331,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2314,
											"end": 2332,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2304,
											"end": 2333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2304,
											"end": 2333,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2294,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 2294,
											"end": 2351,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2345,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2337,
											"end": 2349,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2294,
											"end": 2351,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 2294,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2357,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2357,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2357,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2362,
											"end": 2681,
											"name": "tag",
											"source": 17,
											"value": "79"
										},
										{
											"begin": 2362,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2490,
											"end": 2492,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2478,
											"end": 2487,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2465,
											"end": 2488,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2461,
											"end": 2493,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2507,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2504,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2508,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 2458,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 2589,
											"end": 2594,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 2564,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "tag",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 2564,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2638,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 2671,
											"end": 2673,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2638,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 2638,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2638,
											"end": 2675,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 2638,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2675,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2628,
											"end": 2675,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2362,
											"end": 2681,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2362,
											"end": 2681,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2362,
											"end": 2681,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2362,
											"end": 2681,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2362,
											"end": 2681,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2362,
											"end": 2681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 3163,
											"name": "tag",
											"source": 17,
											"value": "86"
										},
										{
											"begin": 2686,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2801,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2850,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2823,
											"end": 2846,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2819,
											"end": 2851,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2816,
											"end": 2868,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2816,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 2816,
											"end": 2868,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2864,
											"end": 2865,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2866,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2816,
											"end": 2868,
											"name": "tag",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 2816,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2903,
											"end": 2912,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2890,
											"end": 2913,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2922,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2922,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 2922,
											"end": 2953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2922,
											"end": 2953,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 2922,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3029,
											"end": 3031,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3014,
											"end": 3032,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3042,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3042,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 3042,
											"end": 3075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3042,
											"end": 3075,
											"name": "tag",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 3042,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 3153,
											"end": 3155,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3138,
											"end": 3156,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 3120,
											"end": 3157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "tag",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 3120,
											"end": 3157,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3110,
											"end": 3157,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3110,
											"end": 3157,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 3163,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 3163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 3163,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 3163,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 3163,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2686,
											"end": 3163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3168,
											"end": 3826,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 3168,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3339,
											"end": 3341,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3412,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3391,
											"end": 3412,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3391,
											"end": 3412,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3461,
											"end": 3474,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3461,
											"end": 3474,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3483,
											"end": 3505,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3483,
											"end": 3505,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3483,
											"end": 3505,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3339,
											"end": 3341,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3562,
											"end": 3577,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3521,
											"end": 3539,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "tag",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3616,
											"end": 3617,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3626,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 3697,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 3697,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 3719,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3668,
											"end": 3720,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3668,
											"end": 3720,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3775,
											"end": 3790,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3775,
											"end": 3790,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3775,
											"end": 3790,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3775,
											"end": 3790,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3740,
											"end": 3752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3740,
											"end": 3752,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3740,
											"end": 3752,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3740,
											"end": 3752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "tag",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 3605,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3817,
											"end": 3820,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 3168,
											"end": 3826,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3168,
											"end": 3826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 4236,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 3831,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 3922,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3977,
											"end": 3979,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3956,
											"end": 3963,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3952,
											"end": 3975,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3948,
											"end": 3980,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 3997,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 3945,
											"end": 3997,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3991,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 3997,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 3945,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4019,
											"end": 4042,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 4076,
											"end": 4081,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 4051,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "tag",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 4051,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "322"
										},
										{
											"begin": 4171,
											"end": 4204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4657,
											"end": 5012,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 4657,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4859,
											"end": 4861,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4841,
											"end": 4862,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4841,
											"end": 4862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4841,
											"end": 4862,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4871,
											"end": 4901,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4937,
											"end": 4970,
											"name": "PUSH",
											"source": 17,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 4932,
											"end": 4934,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4935,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4917,
											"end": 4935,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4910,
											"end": 4971,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4988,
											"end": 5006,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4657,
											"end": 5012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5783,
											"end": 5910,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 5783,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5844,
											"end": 5854,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5839,
											"end": 5842,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5835,
											"end": 5855,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5832,
											"end": 5833,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5825,
											"end": 5856,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5875,
											"end": 5879,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5865,
											"end": 5880,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5899,
											"end": 5903,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5896,
											"end": 5897,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5889,
											"end": 5904,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5915,
											"end": 6042,
											"name": "tag",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 5915,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5976,
											"end": 5986,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5971,
											"end": 5974,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5967,
											"end": 5987,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5964,
											"end": 5965,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5957,
											"end": 5988,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6007,
											"end": 6011,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 6004,
											"end": 6005,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5997,
											"end": 6012,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6031,
											"end": 6035,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6047,
											"end": 6175,
											"name": "tag",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 6047,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6123,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6135,
											"end": 6146,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 6132,
											"end": 6169,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 6149,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 6149,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6180,
											"end": 6307,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 6180,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6241,
											"end": 6251,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 6236,
											"end": 6239,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 6232,
											"end": 6252,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 6229,
											"end": 6230,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6253,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6272,
											"end": 6276,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 6269,
											"end": 6270,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6262,
											"end": 6277,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6296,
											"end": 6300,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6301,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6312,
											"end": 6447,
											"name": "tag",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 6312,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6351,
											"end": 6354,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6389,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6372,
											"end": 6389,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6389,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6369,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 6369,
											"end": 6412,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 6392,
											"end": 6410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "tag",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 6392,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6439,
											"end": 6440,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6428,
											"end": 6441,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6428,
											"end": 6441,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6312,
											"end": 6447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6452,
											"end": 6798,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 6452,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6654,
											"end": 6656,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6636,
											"end": 6657,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6636,
											"end": 6657,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6636,
											"end": 6657,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6693,
											"end": 6695,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6666,
											"end": 6696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1859191C995CDCC81B9BDD081CDD1BDC9959081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6727,
											"end": 6729,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6712,
											"end": 6730,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6705,
											"end": 6757,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6789,
											"end": 6791,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6774,
											"end": 6792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 6792,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6452,
											"end": 6798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8536,
											"end": 8943,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 8536,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8741,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8720,
											"end": 8741,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8720,
											"end": 8741,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8777,
											"end": 8779,
											"name": "PUSH",
											"source": 17,
											"value": "2B"
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8757,
											"end": 8775,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8750,
											"end": 8780,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8816,
											"end": 8850,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8796,
											"end": 8814,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8796,
											"end": 8814,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8789,
											"end": 8851,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8882,
											"end": 8884,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8867,
											"end": 8885,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8867,
											"end": 8885,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8860,
											"end": 8901,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8933,
											"end": 8936,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 8918,
											"end": 8937,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8918,
											"end": 8937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8536,
											"end": 8943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8948,
											"end": 9198,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 8948,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9033,
											"end": 9034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "tag",
											"source": 17,
											"value": "385"
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9057,
											"end": 9063,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9054,
											"end": 9055,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9051,
											"end": 9064,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9133,
											"end": 9144,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9133,
											"end": 9144,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9133,
											"end": 9144,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9114,
											"end": 9125,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9114,
											"end": 9125,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9114,
											"end": 9125,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9107,
											"end": 9146,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9079,
											"end": 9081,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9072,
											"end": 9082,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "385"
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "tag",
											"source": 17,
											"value": "387"
										},
										{
											"begin": 9043,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9188,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9172,
											"end": 9188,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9165,
											"end": 9192,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8948,
											"end": 9198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9203,
											"end": 10015,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 9203,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9614,
											"end": 9639,
											"name": "PUSH",
											"source": 17,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 9609,
											"end": 9612,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9602,
											"end": 9640,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9584,
											"end": 9587,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9669,
											"end": 9675,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9663,
											"end": 9676,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9685,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 9753,
											"end": 9759,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 9743,
											"end": 9746,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9739,
											"end": 9751,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9732,
											"end": 9736,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9720,
											"end": 9737,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9685,
											"end": 9760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 9685,
											"end": 9760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9685,
											"end": 9760,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 9685,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9821,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 9779,
											"end": 9795,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9779,
											"end": 9795,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9779,
											"end": 9795,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9811,
											"end": 9822,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9811,
											"end": 9822,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9811,
											"end": 9822,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9804,
											"end": 9844,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9869,
											"end": 9882,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9869,
											"end": 9882,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 9891,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 9869,
											"end": 9882,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9953,
											"end": 9955,
											"name": "PUSH",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 9945,
											"end": 9956,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 9956,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9938,
											"end": 9942,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9926,
											"end": 9943,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9926,
											"end": 9943,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9891,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 9891,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9891,
											"end": 9967,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 9891,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9987,
											"end": 10004,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10006,
											"end": 10008,
											"name": "PUSH",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 9983,
											"end": 10009,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9983,
											"end": 10009,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9203,
											"end": 10015,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9203,
											"end": 10015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10020,
											"end": 10416,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 10020,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10169,
											"end": 10171,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10158,
											"end": 10167,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10151,
											"end": 10172,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10132,
											"end": 10136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10201,
											"end": 10207,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10195,
											"end": 10208,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10244,
											"end": 10250,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10239,
											"end": 10241,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10237,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10224,
											"end": 10242,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10217,
											"end": 10251,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10260,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 10332,
											"end": 10338,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10327,
											"end": 10329,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10316,
											"end": 10325,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10312,
											"end": 10330,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10307,
											"end": 10309,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10299,
											"end": 10305,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 10295,
											"end": 10310,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10260,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 10260,
											"end": 10339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10260,
											"end": 10339,
											"name": "tag",
											"source": 17,
											"value": "392"
										},
										{
											"begin": 10260,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10400,
											"end": 10402,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10379,
											"end": 10394,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10375,
											"end": 10404,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10360,
											"end": 10405,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10360,
											"end": 10405,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10360,
											"end": 10405,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10360,
											"end": 10405,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10407,
											"end": 10409,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10356,
											"end": 10410,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10356,
											"end": 10410,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10020,
											"end": 10416,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10020,
											"end": 10416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10421,
											"end": 10589,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 10421,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10494,
											"end": 10503,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10494,
											"end": 10503,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10494,
											"end": 10503,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10525,
											"end": 10534,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10525,
											"end": 10534,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10542,
											"end": 10557,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10542,
											"end": 10557,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10542,
											"end": 10557,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 10536,
											"end": 10558,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10536,
											"end": 10558,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 10522,
											"end": 10559,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 10512,
											"end": 10583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 10512,
											"end": 10583,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10563,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 10563,
											"end": 10581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 10563,
											"end": 10581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10594,
											"end": 10719,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 10594,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10668,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10680,
											"end": 10690,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10680,
											"end": 10690,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10680,
											"end": 10690,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10677,
											"end": 10713,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10677,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 10677,
											"end": 10713,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 10693,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 10693,
											"end": 10711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10724,
											"end": 10851,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 10724,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10785,
											"end": 10795,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 10780,
											"end": 10783,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 10776,
											"end": 10796,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10766,
											"end": 10797,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10816,
											"end": 10820,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 10813,
											"end": 10814,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10806,
											"end": 10821,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10840,
											"end": 10844,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10837,
											"end": 10838,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10830,
											"end": 10845,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10856,
											"end": 10992,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 10856,
											"end": 10992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10923,
											"end": 10928,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10913,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 10913,
											"end": 10952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "324"
										},
										{
											"begin": 10932,
											"end": 10950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "tag",
											"source": 17,
											"value": "402"
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10968,
											"end": 10986,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10856,
											"end": 10992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									],
									".data": {
										"83599F2FD2D7ECEC31A0C854E1DFA0CD718F43D0F25B15E620B3800DBA1A8107": "cab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709"
									}
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/storage/IRSStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AGENT_ROLE()": "22459e18",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"OWNER_ROLE()": "e58378bb",
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"init()": "e1c7392a",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"owner()": "8da5cb5b",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AGENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"details\":\"See {IIdentityRegistryStorage-addIdentityToStorage}.\"},\"bindIdentityRegistry(address)\":{\"details\":\"See {IIdentityRegistryStorage-bindIdentityRegistry}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"linkedIdentityRegistries()\":{\"details\":\"See {IIdentityRegistryStorage-linkedIdentityRegistries}.\"},\"modifyStoredIdentity(address,address)\":{\"details\":\"See {IIdentityRegistryStorage-modifyStoredIdentity}.\"},\"modifyStoredInvestorCountry(address,uint16)\":{\"details\":\"See {IIdentityRegistryStorage-modifyStoredInvestorCountry}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeIdentityFromStorage(address)\":{\"details\":\"See {IIdentityRegistryStorage-removeIdentityFromStorage}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"storedIdentity(address)\":{\"details\":\"See {IIdentityRegistryStorage-storedIdentity}.\"},\"storedInvestorCountry(address)\":{\"details\":\"See {IIdentityRegistryStorage-storedInvestorCountry}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unbindIdentityRegistry(address)\":{\"details\":\"See {IIdentityRegistryStorage-unbindIdentityRegistry}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":\"IdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol\":{\"keccak256\":\"0x0ddc068af4b93c951928cf0bee6e17fb3b8f36f0fd4776dfc8ba78f3fd667e72\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9f83d0139212269f9c711e186932939ef0d0b212316dc5590010b6466d40e58c\",\"dweb:/ipfs/QmfJTmzmKiFqVPLu2bWkKUhRfkoVC1fhTorB5bko8iDubU\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]},\"erc3643/erc3643/registry/storage/IRSStorage.sol\":{\"keccak256\":\"0x66ba088e9d9a58eaa5070318d3933a3498416d1a9953104fd7921c9d37993d1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7c21bad4125857d48c172042a4fb8667c8b81014b1589bafbb785eef943d1354\",\"dweb:/ipfs/QmXGMZ7f4UX6PjqKSJAdr8n1y4DgUUvEEH1JwcEutbUxmg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 811,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 814,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1344,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1617,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 303,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)298_storage)"
							},
							{
								"astId": 598,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 683,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_owner",
								"offset": 0,
								"slot": "151",
								"type": "t_address"
							},
							{
								"astId": 803,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "152",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 3174,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_identities",
								"offset": 0,
								"slot": "201",
								"type": "t_mapping(t_address,t_struct(Identity)3169_storage)"
							},
							{
								"astId": 3177,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "_identityRegistries",
								"offset": 0,
								"slot": "202",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 3181,
								"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "203",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IIdentity)263": {
								"encoding": "inplace",
								"label": "contract IIdentity",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Identity)3169_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IRSStorage.Identity)",
								"numberOfBytes": "32",
								"value": "t_struct(Identity)3169_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)298_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)298_storage"
							},
							"t_struct(Identity)3169_storage": {
								"encoding": "inplace",
								"label": "struct IRSStorage.Identity",
								"members": [
									{
										"astId": 3166,
										"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
										"label": "identityContract",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IIdentity)263"
									},
									{
										"astId": 3168,
										"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
										"label": "investorCountry",
										"offset": 20,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)298_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 295,
										"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 297,
										"contract": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol:IdentityRegistryStorage",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"IIdentityRegistryStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "country",
									"type": "uint16"
								}
							],
							"name": "CountryModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "oldIdentity",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "newIdentity",
									"type": "address"
								}
							],
							"name": "IdentityModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "identityRegistry",
									"type": "address"
								}
							],
							"name": "IdentityRegistryUnbound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityStored",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "contract IIdentity",
									"name": "identity",
									"type": "address"
								}
							],
							"name": "IdentityUnstored",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "addIdentityToStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "bindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "linkedIdentityRegistries",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "modifyStoredIdentity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_country",
									"type": "uint16"
								}
							],
							"name": "modifyStoredInvestorCountry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "removeIdentityFromStorage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedIdentity",
							"outputs": [
								{
									"internalType": "contract IIdentity",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "storedInvestorCountry",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_identityRegistry",
									"type": "address"
								}
							],
							"name": "unbindIdentityRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addIdentityToStorage(address,address,uint16)": "a53410dd",
							"bindIdentityRegistry(address)": "690a49f9",
							"linkedIdentityRegistries()": "bf9eb959",
							"modifyStoredIdentity(address,address)": "e805cf86",
							"modifyStoredInvestorCountry(address,uint16)": "9f3418d5",
							"removeIdentityFromStorage(address)": "cf191bcd",
							"storedIdentity(address)": "7988d3a5",
							"storedInvestorCountry(address)": "727e13bc",
							"unbindIdentityRegistry(address)": "97a012f7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"country\",\"type\":\"uint16\"}],\"name\":\"CountryModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"oldIdentity\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"newIdentity\",\"type\":\"address\"}],\"name\":\"IdentityModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identityRegistry\",\"type\":\"address\"}],\"name\":\"IdentityRegistryUnbound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IIdentity\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"IdentityUnstored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"addIdentityToStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"bindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkedIdentityRegistries\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"modifyStoredIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_country\",\"type\":\"uint16\"}],\"name\":\"modifyStoredInvestorCountry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"removeIdentityFromStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedIdentity\",\"outputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"storedInvestorCountry\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"}],\"name\":\"unbindIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addIdentityToStorage(address,address,uint16)\":{\"notice\":\"functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":\"IIdentityRegistryStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x1bceb5cfc0da1a742c663fe4425001ccbdb2112e7718173cfb3243088e5999bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1f71e93952528462a65db44e568ac64a74ee01b44031f0c9e4ace353396827c\",\"dweb:/ipfs/QmcF5uQzZpFZ7qC53afv4osebpAYAHupUyrQD6nmv17E9U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addIdentityToStorage(address,address,uint16)": {
								"notice": "functions"
							}
						},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/storage/IRSStorage.sol": {
				"IRSStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/registry/storage/IRSStorage.sol\":128:585  contract IRSStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/registry/storage/IRSStorage.sol\":128:585  contract IRSStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122087d65abfa5be4cfca6013b1c7f180d08d2cc566287689ea806c987a47861325f64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122087d65abfa5be4cfca6013b1c7f180d08d2cc566287689ea806c987a47861325f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD6 GAS 0xBF 0xA5 0xBE 0x4C 0xFC 0xA6 ADD EXTCODESIZE SHR PUSH32 0x180D08D2CC566287689EA806C987A47861325F64736F6C634300081100330000 ",
							"sourceMap": "128:457:16:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122087d65abfa5be4cfca6013b1c7f180d08d2cc566287689ea806c987a47861325f64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xD6 GAS 0xBF 0xA5 0xBE 0x4C 0xFC 0xA6 ADD EXTCODESIZE SHR PUSH32 0x180D08D2CC566287689EA806C987A47861325F64736F6C634300081100330000 ",
							"sourceMap": "128:457:16:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 128,
									"end": 585,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 585,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122087d65abfa5be4cfca6013b1c7f180d08d2cc566287689ea806c987a47861325f64736f6c63430008110033",
									".code": [
										{
											"begin": 128,
											"end": 585,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 585,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 585,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 128,
											"end": 585,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 585,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 128,
											"end": 585,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
								"erc3643/erc3643/registry/storage/IRSStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/storage/IRSStorage.sol\":\"IRSStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/erc3643/registry/storage/IRSStorage.sol\":{\"keccak256\":\"0x66ba088e9d9a58eaa5070318d3933a3498416d1a9953104fd7921c9d37993d1c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7c21bad4125857d48c172042a4fb8667c8b81014b1589bafbb785eef943d1354\",\"dweb:/ipfs/QmXGMZ7f4UX6PjqKSJAdr8n1y4DgUUvEEH1JwcEutbUxmg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3174,
								"contract": "erc3643/erc3643/registry/storage/IRSStorage.sol:IRSStorage",
								"label": "_identities",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Identity)3169_storage)"
							},
							{
								"astId": 3177,
								"contract": "erc3643/erc3643/registry/storage/IRSStorage.sol:IRSStorage",
								"label": "_identityRegistries",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 3181,
								"contract": "erc3643/erc3643/registry/storage/IRSStorage.sol:IRSStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IIdentity)263": {
								"encoding": "inplace",
								"label": "contract IIdentity",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Identity)3169_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct IRSStorage.Identity)",
								"numberOfBytes": "32",
								"value": "t_struct(Identity)3169_storage"
							},
							"t_struct(Identity)3169_storage": {
								"encoding": "inplace",
								"label": "struct IRSStorage.Identity",
								"members": [
									{
										"astId": 3166,
										"contract": "erc3643/erc3643/registry/storage/IRSStorage.sol:IRSStorage",
										"label": "identityContract",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IIdentity)263"
									},
									{
										"astId": 3168,
										"contract": "erc3643/erc3643/registry/storage/IRSStorage.sol:IRSStorage",
										"label": "investorCountry",
										"offset": 20,
										"slot": "0",
										"type": "t_uint16"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						]
					},
					"id": 147,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:0",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 146,
							"linearizedBaseContracts": [
								146
							],
							"name": "IERC734",
							"nameLocation": "156:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:0",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 9,
									"name": "Approved",
									"nameLocation": "338:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "347:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "376:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:0"
									},
									"src": "332:59:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:0",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 20,
									"name": "Executed",
									"nameLocation": "622:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "631:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "660:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "680:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "703:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 17,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:0"
									},
									"src": "616:99:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:0",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 31,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "922:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "951:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "971:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "994:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 28,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:0"
									},
									"src": "897:109:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:0",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 42,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1190:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1219:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1239:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1262:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 39,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:0"
									},
									"src": "1168:106:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:0",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 51,
									"name": "KeyAdded",
									"nameLocation": "1444:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1453:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 44,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1474:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1499:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:0"
									},
									"src": "1438:86:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:0",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 60,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1712:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 53,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1733:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1758:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:0"
									},
									"src": "1695:88:0"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:0",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2129:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2143:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2161:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2197:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:0"
									},
									"scope": 146,
									"src": "2113:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:0",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2440:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2453:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2486:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:0"
									},
									"scope": 146,
									"src": "2423:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:0",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2820:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2834:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "2870:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 89,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:0"
									},
									"scope": 146,
									"src": "2801:83:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:0",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3393:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3406:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3422:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 98,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3470:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:0"
									},
									"scope": 146,
									"src": "3376:115:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:0",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 106,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3633:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 109,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 110,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3677:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 114,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:0"
									},
									"scope": 146,
									"src": "3580:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:0",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3800:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3836:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 123,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:0"
									},
									"scope": 146,
									"src": "3776:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:0",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3986:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "4027:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 131,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 132,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:0"
									},
									"scope": 146,
									"src": "3960:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:0",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4211:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4225:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "4266:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:0"
									},
									"scope": 146,
									"src": "4188:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 147,
							"src": "146:4135:0",
							"usedErrors": []
						}
					],
					"src": "36:4246:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							254
						]
					},
					"id": 255,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 148,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 149,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:1",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 254,
							"linearizedBaseContracts": [
								254
							],
							"name": "IERC735",
							"nameLocation": "158:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:1",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 166,
									"name": "ClaimAdded",
									"nameLocation": "323:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "343:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 151,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "376:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "407:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "431:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "463:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 159,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "488:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "508:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:1"
									},
									"src": "317:203:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:1",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 183,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "705:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "738:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "769:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "793:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "825:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "850:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "870:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 180,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:1"
									},
									"src": "677:205:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:1",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 200,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1087:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 185,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1120:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1151:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1175:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1232:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1252:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:1"
									},
									"src": "1059:205:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:1",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 218,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1740:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1764:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1789:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1813:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1848:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1878:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 212,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:1"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1922:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:1"
									},
									"scope": 254,
									"src": "1713:233:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:1",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2171:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:1"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "2207:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:1"
									},
									"scope": 254,
									"src": "2150:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:1",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2404:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2457:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2480:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2504:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2528:22:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2560:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "2587:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:1"
									},
									"scope": 254,
									"src": "2386:220:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:1",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2708:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "2746:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 249,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 250,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:1"
									},
									"scope": 254,
									"src": "2680:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 255,
							"src": "148:2627:1",
							"usedErrors": []
						}
					],
					"src": "36:2740:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							263
						]
					},
					"id": 264,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 147,
							"src": "61:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 255,
							"src": "85:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "IERC734",
										"nameLocations": [
											"178:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 146,
										"src": "178:7:2"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:2"
								},
								{
									"baseName": {
										"id": 261,
										"name": "IERC735",
										"nameLocations": [
											"187:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 254,
										"src": "187:7:2"
									},
									"id": 262,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:2"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 263,
							"linearizedBaseContracts": [
								263,
								254,
								146
							],
							"name": "IIdentity",
							"nameLocation": "165:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 264,
							"src": "155:42:2",
							"usedErrors": []
						}
					],
					"src": "36:162:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							599
						],
						"AddressUpgradeable": [
							1303
						],
						"ContextUpgradeable": [
							1345
						],
						"ERC165Upgradeable": [
							1618
						],
						"IAccessControlUpgradeable": [
							672
						],
						"IERC165Upgradeable": [
							1630
						],
						"Initializable": [
							973
						],
						"MathUpgradeable": [
							2496
						],
						"SignedMathUpgradeable": [
							2601
						],
						"StringsUpgradeable": [
							1574
						]
					},
					"id": 600,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
							"file": "./IAccessControlUpgradeable.sol",
							"id": 266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 673,
							"src": "133:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 1346,
							"src": "175:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../utils/StringsUpgradeable.sol",
							"id": 268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 1575,
							"src": "217:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 1619,
							"src": "259:54:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 600,
							"sourceUnit": 974,
							"src": "314:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 272,
										"name": "Initializable",
										"nameLocations": [
											"2065:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 973,
										"src": "2065:13:3"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "2065:13:3"
								},
								{
									"baseName": {
										"id": 274,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2080:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1345,
										"src": "2080:18:3"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "2080:18:3"
								},
								{
									"baseName": {
										"id": 276,
										"name": "IAccessControlUpgradeable",
										"nameLocations": [
											"2100:25:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 672,
										"src": "2100:25:3"
									},
									"id": 277,
									"nodeType": "InheritanceSpecifier",
									"src": "2100:25:3"
								},
								{
									"baseName": {
										"id": 278,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2127:17:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1618,
										"src": "2127:17:3"
									},
									"id": 279,
									"nodeType": "InheritanceSpecifier",
									"src": "2127:17:3"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "358:1660:3",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 599,
							"linearizedBaseContracts": [
								599,
								1618,
								1630,
								672,
								1345,
								973
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2037:24:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2209:7:3",
										"statements": []
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 282,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 281,
												"name": "onlyInitializing",
												"nameLocations": [
													"2192:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "2192:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2192:16:3"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "2160:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:2:3"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2209:0:3"
									},
									"scope": 599,
									"src": "2151:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2290:7:3",
										"statements": []
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 287,
												"name": "onlyInitializing",
												"nameLocations": [
													"2273:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "2273:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2273:16:3"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "2231:30:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2261:2:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:0:3"
									},
									"scope": 599,
									"src": "2222:75:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 298,
									"members": [
										{
											"constant": false,
											"id": 295,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2353:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 298,
											"src": "2328:32:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 294,
												"keyType": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2328:24:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueType": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2347:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 297,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2378:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 298,
											"src": "2370:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 296,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2370:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2309:8:3",
									"nodeType": "StructDefinition",
									"scope": 599,
									"src": "2302:92:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 303,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2437:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 599,
									"src": "2400:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$298_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 302,
										"keyType": {
											"id": 299,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2408:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2400:28:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$298_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueType": {
											"id": 301,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 300,
												"name": "RoleData",
												"nameLocations": [
													"2419:8:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 298,
												"src": "2419:8:3"
											},
											"referencedDeclaration": 298,
											"src": "2419:8:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$298_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 306,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2474:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 599,
									"src": "2450:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 304,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2450:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 305,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2495:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "2918:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 312,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "2939:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 311,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															371,
															410
														],
														"referencedDeclaration": 371,
														"src": "2928:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2928:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "2928:16:3"
											},
											{
												"id": 315,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:3"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "2506:375:3",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 317,
									"name": "onlyRole",
									"nameLocation": "2895:8:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2912:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "2904:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:14:3"
									},
									"src": "2886:76:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1612
									],
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "3120:122:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 326,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3137:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 328,
																		"name": "IAccessControlUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "3157:25:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$672_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$672_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	],
																	"id": 327,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3152:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3152:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$672",
																	"typeString": "type(contract IAccessControlUpgradeable)"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3184:11:3",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3152:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3137:58:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 334,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 320,
																"src": "3223:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 332,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3199:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$599_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3205:17:3",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1612,
															"src": "3199:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3199:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3137:98:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 325,
												"id": 337,
												"nodeType": "Return",
												"src": "3130:105:3"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "2968:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3038:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 322,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3096:8:3"
									},
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3063:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "3056:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 319,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:20:3"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "3114:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 323,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3114:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3113:6:3"
									},
									"scope": 599,
									"src": "3029:213:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										639
									],
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "3421:53:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 350,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "3438:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$298_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 352,
															"indexExpression": {
																"id": 351,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "3445:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3438:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$298_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 353,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3451:7:3",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "3438:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 355,
													"indexExpression": {
														"id": 354,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "3459:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3438:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 349,
												"id": 356,
												"nodeType": "Return",
												"src": "3431:36:3"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "3248:76:3",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3338:7:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 346,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3397:8:3"
									},
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3354:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3346:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3346:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3368:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3360:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3345:31:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3415:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3415:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:6:3"
									},
									"scope": 599,
									"src": "3329:145:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "3824:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3845:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 366,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "3851:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3851:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 364,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															371,
															410
														],
														"referencedDeclaration": 410,
														"src": "3834:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3834:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "3834:30:3"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "3480:283:3",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3777:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3796:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "3788:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3787:14:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3824:0:3"
									},
									"scope": 599,
									"src": "3768:103:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4225:428:3",
										"statements": [
											{
												"condition": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4239:23:3",
													"subExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "4248:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 381,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4254:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 379,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "4240:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4240:22:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "IfStatement",
												"src": "4235:412:3",
												"trueBody": {
													"id": 407,
													"nodeType": "Block",
													"src": "4264:383:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4372:25:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 392,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 376,
																								"src": "4454:7:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 390,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1574,
																								"src": "4423:18:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1574_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 391,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4442:11:3",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1548,
																							"src": "4423:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 393,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4423:39:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 394,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4488:19:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 399,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 374,
																										"src": "4572:4:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 398,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4564:7:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 397,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4564:7:3",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 400,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4564:13:3",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 401,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4579:2:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 395,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1574,
																								"src": "4533:18:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1574_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 396,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4552:11:3",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1528,
																							"src": "4533:30:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 402,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4533:49:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 387,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4330:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 388,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4334:12:3",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4330:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4330:274:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4302:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 385,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4302:6:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4302:320:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 384,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4278:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4278:358:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 406,
															"nodeType": "ExpressionStatement",
															"src": "4278:358:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "3877:270:3",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4161:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4180:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4172:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4194:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4186:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4186:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:31:3"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:0:3"
									},
									"scope": 599,
									"src": "4152:501:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										647
									],
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "4917:46:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 419,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "4934:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$298_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4941:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4934:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$298_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4947:9:3",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 297,
													"src": "4934:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 418,
												"id": 423,
												"nodeType": "Return",
												"src": "4927:29:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4659:170:3",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4843:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 415,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4890:8:3"
									},
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4864:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "4856:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 412,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:14:3"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "4908:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4908:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4907:9:3"
									},
									"scope": 599,
									"src": "4834:129:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "5362:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "5383:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 441,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5389:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 439,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5372:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5372:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "5372:25:3"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "4969:285:3",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 435,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "5355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 434,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "5342:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 437,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 433,
												"name": "onlyRole",
												"nameLocations": [
													"5333:8:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 317,
												"src": "5333:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5333:28:3"
										}
									],
									"name": "grantRole",
									"nameLocation": "5268:9:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 432,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5324:8:3"
									},
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5286:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "5278:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 427,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5278:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5300:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "5292:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:31:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5362:0:3"
									},
									"scope": 599,
									"src": "5259:145:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "5788:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "5810:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 461,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "5816:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 459,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "5798:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5798:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "5798:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "5410:269:3",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 455,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "5781:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 454,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "5768:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5768:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 457,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 453,
												"name": "onlyRole",
												"nameLocations": [
													"5759:8:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 317,
												"src": "5759:8:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5759:28:3"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5693:10:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 452,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5750:8:3"
									},
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5712:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5704:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5704:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5726:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5718:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5718:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:31:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5788:0:3"
									},
									"scope": 599,
									"src": "5684:147:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										671
									],
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "6445:137:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 475,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "6463:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 476,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "6474:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6474:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6463:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6488:49:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 474,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6455:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6455:83:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "6455:83:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 483,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "6561:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 484,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "6567:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 482,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "6549:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "6549:26:3"
											}
										]
									},
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "5837:526:3",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6377:12:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 472,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6436:8:3"
									},
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6398:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6390:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 467,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6390:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6412:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "6404:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6389:31:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6445:0:3"
									},
									"scope": 599,
									"src": "6368:214:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "7335:42:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "7356:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 498,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "7362:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 496,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "7345:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7345:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "7345:25:3"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "6588:674:3",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7276:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7295:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "7287:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 490,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7287:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7309:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "7301:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7286:31:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7335:0:3"
									},
									"scope": 599,
									"src": "7267:110:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "7575:174:3",
										"statements": [
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7593:17:3",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "7585:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 510,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7585:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"id": 513,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "7626:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 512,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "7613:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7585:46:3"
											},
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 516,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "7641:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$298_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 518,
															"indexExpression": {
																"id": 517,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "7648:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7641:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$298_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7654:9:3",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 297,
														"src": "7641:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 520,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 507,
														"src": "7666:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7641:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "7641:34:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 524,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "7707:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 525,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "7713:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 526,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "7732:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 523,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "7690:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7690:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "EmitStatement",
												"src": "7685:57:3"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "7383:114:3",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7511:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7533:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "7525:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7547:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "7539:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 506,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7524:33:3"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7575:0:3"
									},
									"scope": 599,
									"src": "7502:247:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "7985:165:3",
										"statements": [
											{
												"condition": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7999:23:3",
													"subExpression": {
														"arguments": [
															{
																"id": 539,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "8008:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 540,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "8014:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 538,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "8000:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8000:22:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "7995:149:3",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "8024:120:3",
													"statements": [
														{
															"expression": {
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 543,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 303,
																				"src": "8038:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$298_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 545,
																			"indexExpression": {
																				"id": 544,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 533,
																				"src": "8045:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8038:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$298_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8051:7:3",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 295,
																		"src": "8038:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 548,
																	"indexExpression": {
																		"id": 547,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "8059:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8038:29:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8070:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8038:36:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "8038:36:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 553,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "8105:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 554,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "8111:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 555,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "8120:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8120:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 552,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "8093:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8093:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 558,
															"nodeType": "EmitStatement",
															"src": "8088:45:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "7755:157:3",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7926:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7945:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "7937:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7937:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7959:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "7951:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7951:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7936:31:3"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7985:0:3"
									},
									"scope": 599,
									"src": "7917:233:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "8390:165:3",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 571,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "8412:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 572,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "8418:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 570,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "8404:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8404:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 591,
												"nodeType": "IfStatement",
												"src": "8400:149:3",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "8428:121:3",
													"statements": [
														{
															"expression": {
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 574,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 303,
																				"src": "8442:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$298_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 576,
																			"indexExpression": {
																				"id": 575,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 565,
																				"src": "8449:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8442:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$298_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 577,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8455:7:3",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 295,
																		"src": "8442:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 579,
																	"indexExpression": {
																		"id": 578,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "8463:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8442:29:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8474:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8442:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 582,
															"nodeType": "ExpressionStatement",
															"src": "8442:37:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 584,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "8510:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 585,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "8516:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 586,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1330,
																			"src": "8525:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8525:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 583,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "8498:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8498:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "8493:45:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "8156:160:3",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8330:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "8342:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 564,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8364:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "8356:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8356:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8341:31:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8390:0:3"
									},
									"scope": 599,
									"src": "8321:234:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "8561:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 598,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "8840:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 599,
									"src": "8820:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 595,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8820:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 597,
										"length": {
											"hexValue": "3439",
											"id": 596,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8828:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "8820:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 600,
							"src": "2019:6829:3",
							"usedErrors": []
						}
					],
					"src": "108:8741:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
					"exportedSymbols": {
						"IAccessControlUpgradeable": [
							672
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 602,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:4",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 672,
							"linearizedBaseContracts": [
								672
							],
							"name": "IAccessControlUpgradeable",
							"nameLocation": "219:25:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "251:292:4",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 611,
									"name": "RoleAdminChanged",
									"nameLocation": "554:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "587:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "571:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 604,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "609:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "593:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 606,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "644:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "628:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 608,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:87:4"
									},
									"src": "548:110:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "664:212:4",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 620,
									"name": "RoleGranted",
									"nameLocation": "887:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "915:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "899:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 613,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "921:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "946:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:71:4"
									},
									"src": "881:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "976:275:4",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 629,
									"name": "RoleRevoked",
									"nameLocation": "1262:11:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1290:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1274:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 622,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1296:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1337:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1321:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:71:4"
									},
									"src": "1256:89:4"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1351:76:4",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1441:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1457:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1449:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1471:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1463:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:31:4"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1503:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:4"
									},
									"scope": 672,
									"src": "1432:77:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "1515:184:4",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1713:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1734:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1726:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 641,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:14:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1763:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 644,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:9:4"
									},
									"scope": 672,
									"src": "1704:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "1778:239:4",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2031:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2049:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2041:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2063:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "2055:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:31:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:4"
									},
									"scope": 672,
									"src": "2022:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "2087:223:4",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2324:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2335:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 657,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:31:4"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:4"
									},
									"scope": 672,
									"src": "2315:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "2381:480:4",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2875:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2888:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 665,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2910:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2902:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:31:4"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:4"
									},
									"scope": 672,
									"src": "2866:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 673,
							"src": "209:2721:4",
							"usedErrors": []
						}
					],
					"src": "94:2837:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1303
						],
						"ContextUpgradeable": [
							1345
						],
						"Initializable": [
							973
						],
						"OwnableUpgradeable": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 805,
							"sourceUnit": 1346,
							"src": "127:41:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 805,
							"sourceUnit": 974,
							"src": "169:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 678,
										"name": "Initializable",
										"nameLocations": [
											"748:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 973,
										"src": "748:13:5"
									},
									"id": 679,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:5"
								},
								{
									"baseName": {
										"id": 680,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1345,
										"src": "763:18:5"
									},
									"id": 681,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:5"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 677,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:5",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804,
								1345,
								973
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 683,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 804,
									"src": "788:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 682,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 689,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "844:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "875:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:5"
									},
									"src": "817:84:5"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "1055:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "1065:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:5"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:5",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 692,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "1038:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:5"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:5"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:5"
									},
									"scope": 804,
									"src": "1003:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "1166:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 705,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "1195:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 704,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1176:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:5"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 701,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "1149:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:5"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:5"
									},
									"scope": 804,
									"src": "1104:111:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "1324:41:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 713,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1334:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:5"
											},
											{
												"id": 716,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:5"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:5",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 718,
									"name": "onlyOwner",
									"nameLocation": "1312:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:5"
									},
									"src": "1303:62:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "1496:30:5",
										"statements": [
											{
												"expression": {
													"id": 724,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 683,
													"src": "1513:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 723,
												"id": 725,
												"nodeType": "Return",
												"src": "1506:13:5"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:5",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:5"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "1487:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:5"
									},
									"scope": 804,
									"src": "1441:85:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "1644:85:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 732,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "1662:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 734,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "1673:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:5"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:5",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:5"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:5"
									},
									"scope": 804,
									"src": "1599:130:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "2118:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 748,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 747,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2128:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:5"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:5",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 745,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 744,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 718,
												"src": "2108:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:5"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:5"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:5"
									},
									"scope": 804,
									"src": "2064:101:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2384:128:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 764,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "2402:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "2496:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 773,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "2477:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:5"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 761,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 760,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 718,
												"src": "2374:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:5"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2341:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:5"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:5"
									},
									"scope": 804,
									"src": "2314:198:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "2729:124:5",
										"statements": [
											{
												"assignments": [
													785
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "2739:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 784,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"id": 786,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 683,
													"src": "2758:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:5"
											},
											{
												"expression": {
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 788,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "2774:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 789,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "2783:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 793,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2827:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "2837:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 792,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "2806:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "EmitStatement",
												"src": "2801:45:5"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:5",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "2694:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:5"
									},
									"scope": 804,
									"src": "2666:187:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 803,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 804,
									"src": "3118:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 800,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 802,
										"length": {
											"hexValue": "3439",
											"id": 801,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "708:2438:5",
							"usedErrors": []
						}
					],
					"src": "102:3045:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1303
						],
						"Initializable": [
							973
						]
					},
					"id": 974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 807,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 974,
							"sourceUnit": 1304,
							"src": "138:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 808,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:6",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 973,
							"linearizedBaseContracts": [
								973
							],
							"name": "Initializable",
							"nameLocation": "2412:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:6",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 811,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "2546:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 810,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:6",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 814,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 973,
									"src": "2675:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 813,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:6",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 819,
									"name": "Initialized",
									"nameLocation": "2809:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2821:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 816,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:6"
									},
									"src": "2803:33:6"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "3269:483:6",
										"statements": [
											{
												"assignments": [
													823
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "3279:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 822,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:6",
													"subExpression": {
														"id": 824,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "3302:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 828,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "3347:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 829,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "3365:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 833,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:6",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 838,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$973",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$973",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 837,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 836,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 839,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 834,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1303,
																						"src": "3388:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1303_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 835,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:6",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "3388:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 842,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 811,
																				"src": "3436:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 846,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:6"
											},
											{
												"expression": {
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "3536:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:6"
											},
											{
												"condition": {
													"id": 855,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 823,
													"src": "3566:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "3562:65:6",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "3582:45:6",
													"statements": [
														{
															"expression": {
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 856,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "3596:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:6"
														}
													]
												}
											},
											{
												"id": 862,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:6"
											},
											{
												"condition": {
													"id": 863,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 823,
													"src": "3651:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "3647:99:6",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "3667:79:6",
													"statements": [
														{
															"expression": {
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 864,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "3681:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 867,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 868,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "3721:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "EmitStatement",
															"src": "3716:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:6",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 875,
									"name": "initializer",
									"nameLocation": "3255:11:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:6"
									},
									"src": "3246:506:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "4863:255:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:6",
																"subExpression": {
																	"id": 881,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "4882:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 883,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "4899:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 884,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "4914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 880,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:6"
											},
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "4982:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 891,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "4997:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:6"
											},
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5014:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:6"
											},
											{
												"id": 898,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:6"
											},
											{
												"expression": {
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 899,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5055:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 904,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "5103:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 903,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "5091:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "EmitStatement",
												"src": "5086:25:6"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:6",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 908,
									"name": "reinitializer",
									"nameLocation": "4834:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "4848:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 877,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:6"
									},
									"src": "4825:293:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "5356:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "5374:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:6"
											},
											{
												"id": 916,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:6"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:6",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 918,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:6"
									},
									"src": "5328:125:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "5988:231:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:6",
															"subExpression": {
																"id": 923,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "6007:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 928,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "6078:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 930,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 929,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "6074:139:6",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "6111:102:6",
													"statements": [
														{
															"expression": {
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 935,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6125:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 937,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 936,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:6",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 946,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 945,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 944,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:6",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 943,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "6174:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 950,
															"nodeType": "EmitStatement",
															"src": "6169:33:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:6",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:6"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:6"
									},
									"scope": 973,
									"src": "5939:280:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "6393:36:6",
										"statements": [
											{
												"expression": {
													"id": 960,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 811,
													"src": "6410:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 959,
												"id": 961,
												"nodeType": "Return",
												"src": "6403:19:6"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:6",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:6"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "6386:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 957,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:6"
									},
									"scope": 973,
									"src": "6329:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "6601:37:6",
										"statements": [
											{
												"expression": {
													"id": 969,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 814,
													"src": "6618:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 968,
												"id": 970,
												"nodeType": "Return",
												"src": "6611:20:6"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:6",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:6"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "6595:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:6"
									},
									"scope": 973,
									"src": "6545:93:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 974,
							"src": "2394:4246:6",
							"usedErrors": []
						}
					],
					"src": "113:6528:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1303
						]
					},
					"id": 1304,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 976,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1303,
							"linearizedBaseContracts": [
								1303
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "1489:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 984,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "1713:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 983,
												"id": 989,
												"nodeType": "Return",
												"src": "1706:30:7"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1443:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:7"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1483:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:7"
									},
									"scope": 1303,
									"src": "1423:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "2729:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1002,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1303",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1303",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1000,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1005,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "2772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:7"
											},
											{
												"assignments": [
													1011,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1024,
														"src": "2824:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1010,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1018,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1012,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "2842:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1014,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "2864:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1020,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "2893:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1019,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:7"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "2677:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "2704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:7"
									},
									"scope": 1303,
									"src": "2658:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "3801:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "3840:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "3848:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1035,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1083,
															1127
														],
														"referencedDeclaration": 1127,
														"src": "3818:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1034,
												"id": 1041,
												"nodeType": "Return",
												"src": "3811:79:7"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3734:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3750:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1029,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:7"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "3787:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:7"
									},
									"scope": 1303,
									"src": "3712:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "4266:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "4305:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "4313:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1059,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "4322:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1055,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1083,
															1127
														],
														"referencedDeclaration": 1127,
														"src": "4283:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1061,
												"nodeType": "Return",
												"src": "4276:59:7"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "4150:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "4174:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1047,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "4201:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1049,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:7"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "4252:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:7"
									},
									"scope": 1303,
									"src": "4119:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "4817:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "4856:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1077,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "4864:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1078,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "4870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1075,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1083,
															1127
														],
														"referencedDeclaration": 1127,
														"src": "4834:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1074,
												"id": 1081,
												"nodeType": "Return",
												"src": "4827:94:7"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4735:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4751:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4770:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:7"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4803:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:7"
									},
									"scope": 1303,
									"src": "4704:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "5355:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1100,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1303",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1303",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1098,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1103,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "5398:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:7"
											},
											{
												"assignments": [
													1109,
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1109,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1126,
														"src": "5457:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1108,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1126,
														"src": "5471:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1110,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"arguments": [
														{
															"id": 1116,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "5524:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1112,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "5498:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1114,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "5517:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "5573:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1121,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "5581:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1122,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "5590:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1123,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "5602:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1119,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "5546:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1125,
												"nodeType": "Return",
												"src": "5539:76:7"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5216:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5240:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5290:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1091,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:7"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "5341:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:7"
									},
									"scope": 1303,
									"src": "5176:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "5899:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1138,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "5935:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "5943:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1137,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1144,
															1173
														],
														"referencedDeclaration": 1173,
														"src": "5916:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1136,
												"id": 1142,
												"nodeType": "Return",
												"src": "5909:80:7"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "5827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "5843:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:7"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "5885:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:7"
									},
									"scope": 1303,
									"src": "5799:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "6338:168:7",
										"statements": [
											{
												"assignments": [
													1157,
													1159
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "6349:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1156,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1159,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "6363:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1158,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"arguments": [
														{
															"id": 1162,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "6408:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1160,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "6390:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "6457:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "6465:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1168,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "6474:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "6486:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1165,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "6430:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1171,
												"nodeType": "Return",
												"src": "6423:76:7"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "6217:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "6241:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "6268:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:7"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "6324:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:7"
									},
									"scope": 1303,
									"src": "6180:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "6782:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "6820:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1185,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "6828:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1183,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1190,
															1219
														],
														"referencedDeclaration": 1219,
														"src": "6799:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1182,
												"id": 1188,
												"nodeType": "Return",
												"src": "6792:84:7"
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "6715:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "6731:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:7"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "6768:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:7"
									},
									"scope": 1303,
									"src": "6685:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "7224:170:7",
										"statements": [
											{
												"assignments": [
													1203,
													1205
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "7235:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1202,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1218,
														"src": "7249:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1204,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1210,
												"initialValue": {
													"arguments": [
														{
															"id": 1208,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "7296:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1206,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "7276:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1212,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "7345:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "7353:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1214,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "7362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1215,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "7374:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1211,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "7318:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1201,
												"id": 1217,
												"nodeType": "Return",
												"src": "7311:76:7"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "7108:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "7132:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1194,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "7159:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1196,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:7"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "7210:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:7"
									},
									"scope": 1303,
									"src": "7069:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "7876:434:7",
										"statements": [
											{
												"condition": {
													"id": 1233,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1224,
													"src": "7890:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "8246:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1251,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1226,
																		"src": "8268:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1228,
																		"src": "8280:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1250,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "8260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:7"
														}
													]
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "7886:418:7",
												"trueBody": {
													"id": 1249,
													"nodeType": "Block",
													"src": "7899:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1234,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1226,
																		"src": "7917:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1246,
															"nodeType": "IfStatement",
															"src": "7913:286:7",
															"trueBody": {
																"id": 1245,
																"nodeType": "Block",
																"src": "7941:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1240,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1222,
																							"src": "8143:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1239,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 991,
																						"src": "8132:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1238,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1244,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1247,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "8219:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1232,
															"id": 1248,
															"nodeType": "Return",
															"src": "8212:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "7727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "7751:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "7773:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "7806:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:7"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "7862:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:7"
									},
									"scope": 1303,
									"src": "7682:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "8691:135:7",
										"statements": [
											{
												"condition": {
													"id": 1270,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1261,
													"src": "8705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "8762:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "8784:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1265,
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1274,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "8776:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1278,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:7"
														}
													]
												},
												"id": 1280,
												"nodeType": "IfStatement",
												"src": "8701:119:7",
												"trueBody": {
													"id": 1273,
													"nodeType": "Block",
													"src": "8714:42:7",
													"statements": [
														{
															"expression": {
																"id": 1271,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "8735:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1269,
															"id": 1272,
															"nodeType": "Return",
															"src": "8728:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "8566:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "8588:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "8621:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1264,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:7"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "8677:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:7"
									},
									"scope": 1303,
									"src": "8531:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "8915:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1289,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "8991:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1299,
													"nodeType": "Block",
													"src": "9321:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1296,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1286,
																		"src": "9342:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1295,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1298,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:7"
														}
													]
												},
												"id": 1300,
												"nodeType": "IfStatement",
												"src": "8987:379:7",
												"trueBody": {
													"id": 1294,
													"nodeType": "Block",
													"src": "9014:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 1284,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1284,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:7",
																	"valueSize": 1
																}
															],
															"id": 1293,
															"nodeType": "InlineAssembly",
															"src": "9163:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "8849:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "8874:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:7"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:7"
									},
									"scope": 1303,
									"src": "8832:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1304,
							"src": "194:9180:7",
							"usedErrors": []
						}
					],
					"src": "101:9274:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1303
						],
						"ContextUpgradeable": [
							1345
						],
						"Initializable": [
							973
						]
					},
					"id": 1346,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1346,
							"sourceUnit": 974,
							"src": "110:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1308,
										"name": "Initializable",
										"nameLocations": [
											"691:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 973,
										"src": "691:13:8"
									},
									"id": 1309,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:8"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1307,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1345,
							"linearizedBaseContracts": [
								1345,
								973
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "763:7:8",
										"statements": []
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1312,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1311,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "746:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:8"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:8"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:8"
									},
									"scope": 1345,
									"src": "711:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "838:7:8",
										"statements": []
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1317,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "821:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:8"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:8"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:8"
									},
									"scope": 1345,
									"src": "776:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "912:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1326,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1328,
												"nodeType": "Return",
												"src": "922:17:8"
											}
										]
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:8"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:8"
									},
									"scope": 1345,
									"src": "850:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "1019:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1335,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1337,
												"nodeType": "Return",
												"src": "1029:15:8"
											}
										]
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:8"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "1003:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:8"
									},
									"scope": 1345,
									"src": "952:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1344,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1345,
									"src": "1316:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1341,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1343,
										"length": {
											"hexValue": "3530",
											"id": 1342,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1346,
							"src": "651:693:8",
							"usedErrors": []
						}
					],
					"src": "86:1259:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2496
						],
						"SignedMathUpgradeable": [
							2601
						],
						"StringsUpgradeable": [
							1574
						]
					},
					"id": 1575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1347,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 1348,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 2497,
							"src": "126:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
							"file": "./math/SignedMathUpgradeable.sol",
							"id": 1349,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1575,
							"sourceUnit": 2602,
							"src": "163:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1350,
								"nodeType": "StructuredDocumentation",
								"src": "207:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1574,
							"linearizedBaseContracts": [
								1574
							],
							"name": "StringsUpgradeable",
							"nameLocation": "250:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1353,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "300:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1574,
									"src": "275:54:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1351,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1352,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1356,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "358:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1574,
									"src": "335:43:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1354,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1355,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1403,
										"nodeType": "Block",
										"src": "551:636:9",
										"statements": [
											{
												"id": 1402,
												"nodeType": "UncheckedBlock",
												"src": "561:620:9",
												"statements": [
													{
														"assignments": [
															1365
														],
														"declarations": [
															{
																"constant": false,
																"id": 1365,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "593:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1402,
																"src": "585:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1364,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "585:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1372,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1368,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1359,
																		"src": "624:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1366,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2496,
																		"src": "602:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2496_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "618:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2333,
																	"src": "602:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "602:28:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "585:49:9"
													},
													{
														"assignments": [
															1374
														],
														"declarations": [
															{
																"constant": false,
																"id": 1374,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "662:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1402,
																"src": "648:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1373,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1379,
														"initialValue": {
															"arguments": [
																{
																	"id": 1377,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "682:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "671:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1375,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:41:9"
													},
													{
														"assignments": [
															1381
														],
														"declarations": [
															{
																"constant": false,
																"id": 1381,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "711:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1402,
																"src": "703:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "703:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1382,
														"nodeType": "VariableDeclarationStatement",
														"src": "703:11:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "784:67:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "802:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "825:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "821:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "809:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1374,
																"isOffset": false,
																"isSlot": false,
																"src": "813:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1365,
																"isOffset": false,
																"isSlot": false,
																"src": "829:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1381,
																"isOffset": false,
																"isSlot": false,
																"src": "802:3:9",
																"valueSize": 1
															}
														],
														"id": 1383,
														"nodeType": "InlineAssembly",
														"src": "775:76:9"
													},
													{
														"body": {
															"id": 1398,
															"nodeType": "Block",
															"src": "877:267:9",
															"statements": [
																{
																	"expression": {
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "895:5:9",
																		"subExpression": {
																			"id": 1385,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1381,
																			"src": "895:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1387,
																	"nodeType": "ExpressionStatement",
																	"src": "895:5:9"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "978:84:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "1008:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1022:5:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1029:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "1018:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1018:14:9"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "1034:8:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "1013:4:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1013:30:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "1000:7:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1000:44:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1000:44:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1353,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1034:8:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1381,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1008:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1359,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1022:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1388,
																	"nodeType": "InlineAssembly",
																	"src": "969:93:9"
																},
																{
																	"expression": {
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1389,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "1079:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1088:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1079:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1392,
																	"nodeType": "ExpressionStatement",
																	"src": "1079:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1393,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "1112:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1121:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1112:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1397,
																	"nodeType": "IfStatement",
																	"src": "1108:21:9",
																	"trueBody": {
																		"id": 1396,
																		"nodeType": "Break",
																		"src": "1124:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1399,
														"nodeType": "WhileStatement",
														"src": "864:280:9"
													},
													{
														"expression": {
															"id": 1400,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "1164:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1363,
														"id": 1401,
														"nodeType": "Return",
														"src": "1157:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "385:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "489:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "498:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:9"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "536:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:15:9"
									},
									"scope": 1574,
									"src": "480:707:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "1357:114:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1416,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "1398:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:9",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1425,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1407,
																					"src": "1455:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1423,
																					"name": "SignedMathUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2601,
																					"src": "1429:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMathUpgradeable_$2601_$",
																						"typeString": "type(library SignedMathUpgradeable)"
																					}
																				},
																				"id": 1424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1451:3:9",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2600,
																				"src": "1429:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:32:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1422,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1404,
																			1432
																		],
																		"referencedDeclaration": 1404,
																		"src": "1420:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:42:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:9",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:82:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1412,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:90:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1430,
												"nodeType": "Return",
												"src": "1367:97:9"
											}
										]
									},
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "1193:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1296:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1312:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1305:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1406,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:14:9"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1342:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:9"
									},
									"scope": 1574,
									"src": "1287:184:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "1650:111:9",
										"statements": [
											{
												"id": 1450,
												"nodeType": "UncheckedBlock",
												"src": "1660:95:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "1703:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1444,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "1733:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1442,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2496,
																				"src": "1710:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2496_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1726:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2456,
																			"src": "1710:22:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1710:29:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1710:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1440,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1452,
																	1528,
																	1548
																],
																"referencedDeclaration": 1528,
																"src": "1691:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1439,
														"id": 1449,
														"nodeType": "Return",
														"src": "1684:60:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "1477:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1585:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1605:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1597:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:15:9"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1635:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1635:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:15:9"
									},
									"scope": 1574,
									"src": "1576:185:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "1974:347:9",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1997:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1527,
														"src": "1984:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1462,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1984:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1472,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2016:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1467,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2020:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2016:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2006:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1464,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2010:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:47:9"
											},
											{
												"expression": {
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1473,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "2041:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1475,
														"indexExpression": {
															"hexValue": "30",
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2053:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2041:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "2041:15:9"
											},
											{
												"expression": {
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1479,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "2066:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1481,
														"indexExpression": {
															"hexValue": "31",
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2066:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "2066:15:9"
											},
											{
												"body": {
													"id": 1513,
													"nodeType": "Block",
													"src": "2136:83:9",
													"statements": [
														{
															"expression": {
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1499,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "2150:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1501,
																	"indexExpression": {
																		"id": 1500,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "2157:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2150:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1502,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1353,
																		"src": "2162:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1506,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1503,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1455,
																			"src": "2171:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2179:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2171:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2162:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2150:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1508,
															"nodeType": "ExpressionStatement",
															"src": "2150:33:9"
														},
														{
															"expression": {
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1509,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "2197:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2207:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2197:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1512,
															"nodeType": "ExpressionStatement",
															"src": "2197:11:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1493,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "2124:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2124:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1514,
												"initializationExpression": {
													"assignments": [
														1486
													],
													"declarations": [
														{
															"constant": false,
															"id": 1486,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2104:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1514,
															"src": "2096:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1485,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2096:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1492,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1488,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "2112:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2108:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2096:26:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2131:3:9",
														"subExpression": {
															"id": 1496,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "2133:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1498,
													"nodeType": "ExpressionStatement",
													"src": "2131:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2091:128:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "2236:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "2228:55:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1524,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "2307:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2300:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2300:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1526,
												"nodeType": "Return",
												"src": "2293:21:9"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "1767:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1893:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1905:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1928:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1920:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:31:9"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "1959:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:9"
									},
									"scope": 1574,
									"src": "1884:437:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "2546:76:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1541,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "2591:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2583:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1539,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2583:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2583:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2575:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1537,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2575:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1544,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "2599:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1536,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1452,
															1528,
															1548
														],
														"referencedDeclaration": 1528,
														"src": "2563:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1546,
												"nodeType": "Return",
												"src": "2556:59:9"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "2327:141:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2482:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2502:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2494:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:14:9"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "2531:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2531:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:9"
									},
									"scope": 1574,
									"src": "2473:149:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "2777:66:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1561,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "2810:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2804:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1559,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2804:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1558,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2794:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1567,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "2833:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2827:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2827:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1564,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2817:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:19:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2794:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1571,
												"nodeType": "Return",
												"src": "2787:49:9"
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "2628:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2708:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2728:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2714:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2745:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2731:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2731:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:34:9"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2771:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:9"
									},
									"scope": 1574,
									"src": "2699:144:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1575,
							"src": "242:2603:9",
							"usedErrors": []
						}
					],
					"src": "101:2745:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1303
						],
						"ERC165Upgradeable": [
							1618
						],
						"IERC165Upgradeable": [
							1630
						],
						"Initializable": [
							973
						]
					},
					"id": 1619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1576,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1577,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1619,
							"sourceUnit": 1631,
							"src": "124:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1619,
							"sourceUnit": 974,
							"src": "159:45:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1580,
										"name": "Initializable",
										"nameLocations": [
											"822:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 973,
										"src": "822:13:10"
									},
									"id": 1581,
									"nodeType": "InheritanceSpecifier",
									"src": "822:13:10"
								},
								{
									"baseName": {
										"id": 1582,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"837:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1630,
										"src": "837:18:10"
									},
									"id": 1583,
									"nodeType": "InheritanceSpecifier",
									"src": "837:18:10"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1579,
								"nodeType": "StructuredDocumentation",
								"src": "206:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1618,
							"linearizedBaseContracts": [
								1618,
								1630,
								973
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "801:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "913:7:10",
										"statements": []
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1585,
												"name": "onlyInitializing",
												"nameLocations": [
													"896:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "896:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "896:16:10"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "871:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:10"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:10"
									},
									"scope": 1618,
									"src": "862:58:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "987:7:10",
										"statements": []
									},
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1592,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1591,
												"name": "onlyInitializing",
												"nameLocations": [
													"970:16:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 918,
												"src": "970:16:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "970:16:10"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "935:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:2:10"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:10"
									},
									"scope": 1618,
									"src": "926:68:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1629
									],
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "1151:75:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1604,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "1168:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1606,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "1188:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1630_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1630_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 1605,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1183:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1183:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1630",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1208:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1183:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1168:51:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1603,
												"id": 1610,
												"nodeType": "Return",
												"src": "1161:58:10"
											}
										]
									},
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "999:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1069:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1127:8:10"
									},
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1094:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "1087:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1597,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1087:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:20:10"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "1145:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:10"
									},
									"scope": 1618,
									"src": "1060:166:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "1232:254:10",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1617,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1511:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1618,
									"src": "1491:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1614,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1491:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1616,
										"length": {
											"hexValue": "3530",
											"id": 1615,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1499:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1491:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1619,
							"src": "783:736:10",
							"usedErrors": []
						}
					],
					"src": "99:1421:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1630
						]
					},
					"id": 1631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1620,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1621,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1630,
							"linearizedBaseContracts": [
								1630
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "812:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1623,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:11"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "855:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:11"
									},
									"scope": 1630,
									"src": "785:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1631,
							"src": "405:458:11",
							"usedErrors": []
						}
					],
					"src": "100:764:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2496
						]
					},
					"id": 2497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1633,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2496,
							"linearizedBaseContracts": [
								2496
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 1637,
									"members": [
										{
											"id": 1634,
											"name": "Down",
											"nameLocation": "256:4:12",
											"nodeType": "EnumValue",
											"src": "256:4:12"
										},
										{
											"id": 1635,
											"name": "Up",
											"nameLocation": "298:2:12",
											"nodeType": "EnumValue",
											"src": "298:2:12"
										},
										{
											"id": 1636,
											"name": "Zero",
											"nameLocation": "329:4:12",
											"nodeType": "EnumValue",
											"src": "329:4:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:12",
									"nodeType": "EnumDefinition",
									"src": "232:122:12"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "491:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1647,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "508:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1648,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "512:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1651,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "520:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:12",
													"trueExpression": {
														"id": 1650,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "516:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1653,
												"nodeType": "Return",
												"src": "501:20:12"
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "437:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "448:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:12"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "482:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:12"
									},
									"scope": 2496,
									"src": "424:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "666:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1665,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "683:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1666,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "687:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1669,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1660,
														"src": "695:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:12",
													"trueExpression": {
														"id": 1668,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "691:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1664,
												"id": 1671,
												"nodeType": "Return",
												"src": "676:20:12"
											}
										]
									},
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "623:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:12"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "657:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:12"
									},
									"scope": 2496,
									"src": "599:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "887:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1683,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1676,
																	"src": "942:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1684,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "946:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1686,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1687,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "952:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1688,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "956:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1690,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1694,
												"nodeType": "Return",
												"src": "934:28:12"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "833:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "844:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:12"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:12"
									},
									"scope": 2496,
									"src": "816:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "1239:123:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1706,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "1327:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1710,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1699,
																			"src": "1341:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1713,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1714,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "1350:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1719,
												"nodeType": "Return",
												"src": "1320:35:12"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1185:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1196:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:12"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "1230:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:12"
									},
									"scope": 2496,
									"src": "1168:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "1776:4115:12",
										"statements": [
											{
												"id": 1842,
												"nodeType": "UncheckedBlock",
												"src": "1786:4099:12",
												"statements": [
													{
														"assignments": [
															1734
														],
														"declarations": [
															{
																"constant": false,
																"id": 1734,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2115:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1842,
																"src": "2107:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1733,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2107:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1735,
														"nodeType": "VariableDeclarationStatement",
														"src": "2107:13:12"
													},
													{
														"assignments": [
															1737
														],
														"declarations": [
															{
																"constant": false,
																"id": 1737,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2187:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 1842,
																"src": "2179:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1736,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1738,
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:13:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2259:157:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2277:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2294:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2297:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2304:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2300:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2281:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2324:18:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2337:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2340:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:9:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2324:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2359:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2380:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2372:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2391:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2395:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2388:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2388:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2368:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2359:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "2380:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "2395:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1737,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1724,
																"isOffset": false,
																"isSlot": false,
																"src": "2294:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1724,
																"isOffset": false,
																"isSlot": false,
																"src": "2337:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "2297:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "2340:1:12",
																"valueSize": 1
															}
														],
														"id": 1739,
														"nodeType": "InlineAssembly",
														"src": "2250:166:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1740,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1737,
																"src": "2497:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1748,
														"nodeType": "IfStatement",
														"src": "2493:368:12",
														"trueBody": {
															"id": 1747,
															"nodeType": "Block",
															"src": "2509:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1743,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "2827:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1744,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "2835:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2827:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1732,
																	"id": 1746,
																	"nodeType": "Return",
																	"src": "2820:26:12"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1750,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "2971:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1751,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "2985:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2971:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1749,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2963:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:53:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1755,
														"nodeType": "ExpressionStatement",
														"src": "2963:53:12"
													},
													{
														"assignments": [
															1757
														],
														"declarations": [
															{
																"constant": false,
																"id": 1757,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3280:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 1842,
																"src": "3272:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1756,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1758,
														"nodeType": "VariableDeclarationStatement",
														"src": "3272:17:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3312:291:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3381:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3401:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:12"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3407:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3394:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3381:9:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3501:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3524:9:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3535:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3521:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3501:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3559:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:12"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3559:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1728,
																"isOffset": false,
																"isSlot": false,
																"src": "3407:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "3535:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "3559:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "3572:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1737,
																"isOffset": false,
																"isSlot": false,
																"src": "3501:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1737,
																"isOffset": false,
																"isSlot": false,
																"src": "3514:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1757,
																"isOffset": false,
																"isSlot": false,
																"src": "3381:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1757,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1757,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:9:12",
																"valueSize": 1
															},
															{
																"declaration": 1724,
																"isOffset": false,
																"isSlot": false,
																"src": "3401:1:12",
																"valueSize": 1
															},
															{
																"declaration": 1726,
																"isOffset": false,
																"isSlot": false,
																"src": "3404:1:12",
																"valueSize": 1
															}
														],
														"id": 1759,
														"nodeType": "InlineAssembly",
														"src": "3303:300:12"
													},
													{
														"assignments": [
															1761
														],
														"declarations": [
															{
																"constant": false,
																"id": 1761,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3918:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 1842,
																"src": "3910:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1760,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1769,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1762,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "3925:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3940:12:12",
																			"subExpression": {
																				"id": 1763,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1728,
																				"src": "3941:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3955:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3940:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1767,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3939:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3910:47:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3980:362:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4045:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4064:11:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4077:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4045:11:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4149:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4162:5:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4158:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4149:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4289:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4309:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4312:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4305:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4305:12:12"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4319:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4301:23:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4297:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4289:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 1728,
																"isOffset": false,
																"isSlot": false,
																"src": "4045:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1728,
																"isOffset": false,
																"isSlot": false,
																"src": "4064:11:12",
																"valueSize": 1
															},
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "4149:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1734,
																"isOffset": false,
																"isSlot": false,
																"src": "4162:5:12",
																"valueSize": 1
															},
															{
																"declaration": 1761,
																"isOffset": false,
																"isSlot": false,
																"src": "4077:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1761,
																"isOffset": false,
																"isSlot": false,
																"src": "4169:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1761,
																"isOffset": false,
																"isSlot": false,
																"src": "4289:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1761,
																"isOffset": false,
																"isSlot": false,
																"src": "4312:4:12",
																"valueSize": 1
															},
															{
																"declaration": 1761,
																"isOffset": false,
																"isSlot": false,
																"src": "4319:4:12",
																"valueSize": 1
															}
														],
														"id": 1770,
														"nodeType": "InlineAssembly",
														"src": "3971:371:12"
													},
													{
														"expression": {
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1771,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1734,
																"src": "4408:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1772,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "4417:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1773,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "4425:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4417:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4408:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1776,
														"nodeType": "ExpressionStatement",
														"src": "4408:21:12"
													},
													{
														"assignments": [
															1778
														],
														"declarations": [
															{
																"constant": false,
																"id": 1778,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4755:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 1842,
																"src": "4747:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1777,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4747:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1785,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4766:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1780,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1728,
																			"src": "4770:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4766:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1782,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4765:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4785:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4765:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4747:39:12"
													},
													{
														"expression": {
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1786,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5003:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1788,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "5018:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1789,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "5032:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5018:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5014:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5003:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1793,
														"nodeType": "ExpressionStatement",
														"src": "5003:36:12"
													},
													{
														"expression": {
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1794,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5072:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1796,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "5087:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1797,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "5101:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5072:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1801,
														"nodeType": "ExpressionStatement",
														"src": "5072:36:12"
													},
													{
														"expression": {
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1802,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5142:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5153:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1804,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "5157:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1805,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "5171:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5157:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5153:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5142:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1809,
														"nodeType": "ExpressionStatement",
														"src": "5142:36:12"
													},
													{
														"expression": {
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1810,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5212:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5223:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1812,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "5227:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1813,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "5241:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5227:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5212:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1817,
														"nodeType": "ExpressionStatement",
														"src": "5212:36:12"
													},
													{
														"expression": {
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1818,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5282:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1820,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "5297:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1821,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "5311:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5297:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5293:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5282:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1825,
														"nodeType": "ExpressionStatement",
														"src": "5282:36:12"
													},
													{
														"expression": {
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1826,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1778,
																"src": "5353:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1828,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "5368:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1829,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1778,
																		"src": "5382:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5368:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5353:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1833,
														"nodeType": "ExpressionStatement",
														"src": "5353:36:12"
													},
													{
														"expression": {
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1834,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "5823:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1835,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1734,
																	"src": "5832:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1836,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1778,
																	"src": "5840:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1839,
														"nodeType": "ExpressionStatement",
														"src": "5823:24:12"
													},
													{
														"expression": {
															"id": 1840,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "5868:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1732,
														"id": 1841,
														"nodeType": "Return",
														"src": "5861:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1702:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1694:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1713:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1705:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1724:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1716:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:43:12"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1768:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1760:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:16:12"
									},
									"scope": 2496,
									"src": "1678:4213:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1887,
										"nodeType": "Block",
										"src": "6133:189:12",
										"statements": [
											{
												"assignments": [
													1860
												],
												"declarations": [
													{
														"constant": false,
														"id": 1860,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6151:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1887,
														"src": "6143:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6143:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1866,
												"initialValue": {
													"arguments": [
														{
															"id": 1862,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "6167:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1863,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "6170:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1864,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "6173:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1861,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1844,
															1888
														],
														"referencedDeclaration": 1844,
														"src": "6160:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1637",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1867,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "6199:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1637",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1868,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1637,
																"src": "6211:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1637_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6220:2:12",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1635,
															"src": "6211:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1637",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "6199:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1872,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "6233:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1873,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1849,
																	"src": "6236:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1874,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1851,
																	"src": "6239:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1871,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6226:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6226:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6199:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "IfStatement",
												"src": "6195:98:12",
												"trueBody": {
													"id": 1883,
													"nodeType": "Block",
													"src": "6257:36:12",
													"statements": [
														{
															"expression": {
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1879,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "6271:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6271:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1882,
															"nodeType": "ExpressionStatement",
															"src": "6271:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1885,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1860,
													"src": "6309:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1858,
												"id": 1886,
												"nodeType": "Return",
												"src": "6302:13:12"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "5897:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6032:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6047:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "6039:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6058:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "6050:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6069:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "6061:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6091:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "6082:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1637",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 1853,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1852,
														"name": "Rounding",
														"nameLocations": [
															"6082:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1637,
														"src": "6082:8:12"
													},
													"referencedDeclaration": 1637,
													"src": "6082:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1637",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:62:12"
									},
									"returnParameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1888,
												"src": "6124:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:12"
									},
									"scope": 2496,
									"src": "6023:299:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1999,
										"nodeType": "Block",
										"src": "6598:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1896,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "6612:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6617:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6612:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1902,
												"nodeType": "IfStatement",
												"src": "6608:45:12",
												"trueBody": {
													"id": 1901,
													"nodeType": "Block",
													"src": "6620:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1895,
															"id": 1900,
															"nodeType": "Return",
															"src": "6634:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													1904
												],
												"declarations": [
													{
														"constant": false,
														"id": 1904,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7340:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1999,
														"src": "7332:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7332:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1913,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7349:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1907,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1891,
																			"src": "7360:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1906,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2168,
																			2204
																		],
																		"referencedDeclaration": 2168,
																		"src": "7355:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7355:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7355:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1911,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7354:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:36:12"
											},
											{
												"id": 1998,
												"nodeType": "UncheckedBlock",
												"src": "7769:408:12",
												"statements": [
													{
														"expression": {
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "7793:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1915,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "7803:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1916,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "7812:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1917,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "7816:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7812:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7803:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1920,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7802:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7827:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7802:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7793:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1924,
														"nodeType": "ExpressionStatement",
														"src": "7793:35:12"
													},
													{
														"expression": {
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1925,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "7842:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1926,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "7852:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1927,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "7861:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1928,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "7865:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7861:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7852:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1931,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7851:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7876:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7851:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1935,
														"nodeType": "ExpressionStatement",
														"src": "7842:35:12"
													},
													{
														"expression": {
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1936,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "7891:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1937,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "7901:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1938,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "7910:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1939,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "7914:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7910:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7901:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1942,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7900:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7900:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7891:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1946,
														"nodeType": "ExpressionStatement",
														"src": "7891:35:12"
													},
													{
														"expression": {
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1947,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "7940:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1948,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "7950:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1949,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "7959:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1950,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "7963:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7959:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7950:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1953,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7949:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7949:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7940:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1957,
														"nodeType": "ExpressionStatement",
														"src": "7940:35:12"
													},
													{
														"expression": {
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1958,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "7989:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1959,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "7999:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1960,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "8008:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1961,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "8012:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8008:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7999:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1964,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7998:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8023:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7998:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7989:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1968,
														"nodeType": "ExpressionStatement",
														"src": "7989:35:12"
													},
													{
														"expression": {
															"id": 1978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1969,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "8038:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1970,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "8048:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1971,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "8057:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1972,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "8061:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8057:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8048:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1975,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8047:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8072:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8047:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8038:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1979,
														"nodeType": "ExpressionStatement",
														"src": "8038:35:12"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1980,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "8087:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1981,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1904,
																				"src": "8097:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1982,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1891,
																					"src": "8106:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1983,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1904,
																					"src": "8110:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8106:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8097:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1986,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8096:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8121:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8096:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8087:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "8087:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1992,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "8147:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1993,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1891,
																		"src": "8155:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1994,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "8159:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8155:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1991,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "8143:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8143:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1895,
														"id": 1997,
														"nodeType": "Return",
														"src": "8136:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "6328:208:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6550:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6563:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "6555:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:11:12"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2000,
												"src": "6589:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:12"
									},
									"scope": 2496,
									"src": "6541:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2035,
										"nodeType": "Block",
										"src": "8359:161:12",
										"statements": [
											{
												"id": 2034,
												"nodeType": "UncheckedBlock",
												"src": "8369:145:12",
												"statements": [
													{
														"assignments": [
															2012
														],
														"declarations": [
															{
																"constant": false,
																"id": 2012,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8401:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2034,
																"src": "8393:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2011,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8393:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2016,
														"initialValue": {
															"arguments": [
																{
																	"id": 2014,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "8415:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2013,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2000,
																	2036
																],
																"referencedDeclaration": 2000,
																"src": "8410:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8410:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8393:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2017,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "8438:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1637",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2018,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2006,
																					"src": "8448:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2019,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1637,
																						"src": "8460:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1637_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2020,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8469:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1635,
																					"src": "8460:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8448:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2026,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2024,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2022,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2012,
																						"src": "8475:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2023,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2012,
																						"src": "8484:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8475:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2025,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2003,
																					"src": "8493:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8475:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8448:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8501:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8448:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8497:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2031,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8447:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8438:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2010,
														"id": 2033,
														"nodeType": "Return",
														"src": "8431:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2001,
										"nodeType": "StructuredDocumentation",
										"src": "8189:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8292:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8305:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "8297:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8297:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8317:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "8308:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1637",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2005,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2004,
														"name": "Rounding",
														"nameLocations": [
															"8308:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1637,
														"src": "8308:8:12"
													},
													"referencedDeclaration": 1637,
													"src": "8308:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1637",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8296:30:12"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "8350:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:12"
									},
									"scope": 2496,
									"src": "8283:237:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "8705:922:12",
										"statements": [
											{
												"assignments": [
													2045
												],
												"declarations": [
													{
														"constant": false,
														"id": 2045,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8723:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2167,
														"src": "8715:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8715:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2047,
												"initialValue": {
													"hexValue": "30",
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8732:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:18:12"
											},
											{
												"id": 2164,
												"nodeType": "UncheckedBlock",
												"src": "8743:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2048,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "8771:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8780:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8771:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8771:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2062,
														"nodeType": "IfStatement",
														"src": "8767:99:12",
														"trueBody": {
															"id": 2061,
															"nodeType": "Block",
															"src": "8789:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2053,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "8807:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8807:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2056,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:13:12"
																},
																{
																	"expression": {
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2057,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "8838:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8848:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8838:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2060,
																	"nodeType": "ExpressionStatement",
																	"src": "8838:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2063,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "8883:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8883:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8883:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2077,
														"nodeType": "IfStatement",
														"src": "8879:96:12",
														"trueBody": {
															"id": 2076,
															"nodeType": "Block",
															"src": "8900:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2068,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "8918:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8928:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8918:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2071,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:12:12"
																},
																{
																	"expression": {
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2072,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "8948:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8958:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8948:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2075,
																	"nodeType": "ExpressionStatement",
																	"src": "8948:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2078,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "8992:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9001:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8992:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9006:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8992:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2092,
														"nodeType": "IfStatement",
														"src": "8988:96:12",
														"trueBody": {
															"id": 2091,
															"nodeType": "Block",
															"src": "9009:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2083,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "9027:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9037:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9027:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2086,
																	"nodeType": "ExpressionStatement",
																	"src": "9027:12:12"
																},
																{
																	"expression": {
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2087,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "9057:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9067:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9057:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2090,
																	"nodeType": "ExpressionStatement",
																	"src": "9057:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2093,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "9101:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9101:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9115:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9101:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2107,
														"nodeType": "IfStatement",
														"src": "9097:96:12",
														"trueBody": {
															"id": 2106,
															"nodeType": "Block",
															"src": "9118:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2098,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "9136:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9146:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9136:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2101,
																	"nodeType": "ExpressionStatement",
																	"src": "9136:12:12"
																},
																{
																	"expression": {
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2102,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "9166:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9176:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9166:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2105,
																	"nodeType": "ExpressionStatement",
																	"src": "9166:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2108,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "9210:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9219:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9210:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9223:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9210:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2122,
														"nodeType": "IfStatement",
														"src": "9206:93:12",
														"trueBody": {
															"id": 2121,
															"nodeType": "Block",
															"src": "9226:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2113,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "9244:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9254:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9244:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2116,
																	"nodeType": "ExpressionStatement",
																	"src": "9244:11:12"
																},
																{
																	"expression": {
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2117,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "9273:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9273:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2120,
																	"nodeType": "ExpressionStatement",
																	"src": "9273:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2123,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "9316:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9325:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9316:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9316:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2137,
														"nodeType": "IfStatement",
														"src": "9312:93:12",
														"trueBody": {
															"id": 2136,
															"nodeType": "Block",
															"src": "9332:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2128,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "9350:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9360:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9350:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2131,
																	"nodeType": "ExpressionStatement",
																	"src": "9350:11:12"
																},
																{
																	"expression": {
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2132,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "9379:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9379:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2135,
																	"nodeType": "ExpressionStatement",
																	"src": "9379:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2138,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "9422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9431:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9422:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9435:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9422:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2152,
														"nodeType": "IfStatement",
														"src": "9418:93:12",
														"trueBody": {
															"id": 2151,
															"nodeType": "Block",
															"src": "9438:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2143,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2039,
																			"src": "9456:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9456:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2146,
																	"nodeType": "ExpressionStatement",
																	"src": "9456:11:12"
																},
																{
																	"expression": {
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2147,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "9485:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9485:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2150,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2153,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "9528:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9537:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9528:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9541:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2163,
														"nodeType": "IfStatement",
														"src": "9524:64:12",
														"trueBody": {
															"id": 2162,
															"nodeType": "Block",
															"src": "9544:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2158,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2045,
																			"src": "9562:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9572:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9562:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2161,
																	"nodeType": "ExpressionStatement",
																	"src": "9562:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2165,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2045,
													"src": "9614:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2043,
												"id": 2166,
												"nodeType": "Return",
												"src": "9607:13:12"
											}
										]
									},
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "8526:113:12",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8653:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8666:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "8658:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:15:12"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "8696:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:9:12"
									},
									"scope": 2496,
									"src": "8644:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "9860:165:12",
										"statements": [
											{
												"id": 2202,
												"nodeType": "UncheckedBlock",
												"src": "9870:149:12",
												"statements": [
													{
														"assignments": [
															2180
														],
														"declarations": [
															{
																"constant": false,
																"id": 2180,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9902:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2202,
																"src": "9894:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2179,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9894:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2184,
														"initialValue": {
															"arguments": [
																{
																	"id": 2182,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2171,
																	"src": "9916:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2181,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2168,
																	2204
																],
																"referencedDeclaration": 2168,
																"src": "9911:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9911:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9894:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2185,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2180,
																"src": "9943:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1637",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2186,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2174,
																					"src": "9953:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2187,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1637,
																						"src": "9965:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1637_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9974:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1635,
																					"src": "9965:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9953:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9980:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2191,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2180,
																						"src": "9985:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9980:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2193,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2171,
																					"src": "9994:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9980:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9953:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10006:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9953:54:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10002:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2199,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9952:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9943:65:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2178,
														"id": 2201,
														"nodeType": "Return",
														"src": "9936:72:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2169,
										"nodeType": "StructuredDocumentation",
										"src": "9633:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9789:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9802:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "9794:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9818:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "9809:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1637",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2173,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2172,
														"name": "Rounding",
														"nameLocations": [
															"9809:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1637,
														"src": "9809:8:12"
													},
													"referencedDeclaration": 1637,
													"src": "9809:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1637",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:34:12"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "9851:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:12"
									},
									"scope": 2496,
									"src": "9780:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2332,
										"nodeType": "Block",
										"src": "10212:854:12",
										"statements": [
											{
												"assignments": [
													2213
												],
												"declarations": [
													{
														"constant": false,
														"id": 2213,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10230:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2332,
														"src": "10222:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2215,
												"initialValue": {
													"hexValue": "30",
													"id": 2214,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10239:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:18:12"
											},
											{
												"id": 2329,
												"nodeType": "UncheckedBlock",
												"src": "10250:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "10278:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10287:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10287:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10278:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2232,
														"nodeType": "IfStatement",
														"src": "10274:103:12",
														"trueBody": {
															"id": 2231,
															"nodeType": "Block",
															"src": "10297:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2221,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "10315:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10324:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10330:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10324:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10315:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2226,
																	"nodeType": "ExpressionStatement",
																	"src": "10315:17:12"
																},
																{
																	"expression": {
																		"id": 2229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2227,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "10350:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10360:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10350:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2230,
																	"nodeType": "ExpressionStatement",
																	"src": "10350:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "10394:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10409:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10403:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10394:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2249,
														"nodeType": "IfStatement",
														"src": "10390:103:12",
														"trueBody": {
															"id": 2248,
															"nodeType": "Block",
															"src": "10413:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2238,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "10431:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10440:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10446:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10440:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10431:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2243,
																	"nodeType": "ExpressionStatement",
																	"src": "10431:17:12"
																},
																{
																	"expression": {
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2244,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "10466:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10476:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10466:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2247,
																	"nodeType": "ExpressionStatement",
																	"src": "10466:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2250,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "10510:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10519:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10525:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10519:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10510:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2266,
														"nodeType": "IfStatement",
														"src": "10506:103:12",
														"trueBody": {
															"id": 2265,
															"nodeType": "Block",
															"src": "10529:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2255,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "10547:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10556:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10556:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10547:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2260,
																	"nodeType": "ExpressionStatement",
																	"src": "10547:17:12"
																},
																{
																	"expression": {
																		"id": 2263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2261,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "10582:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10592:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10582:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2264,
																	"nodeType": "ExpressionStatement",
																	"src": "10582:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2267,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "10626:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10635:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10626:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2283,
														"nodeType": "IfStatement",
														"src": "10622:100:12",
														"trueBody": {
															"id": 2282,
															"nodeType": "Block",
															"src": "10644:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2272,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "10662:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2273,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10671:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10677:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10671:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10662:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2277,
																	"nodeType": "ExpressionStatement",
																	"src": "10662:16:12"
																},
																{
																	"expression": {
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2278,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "10696:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10706:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10696:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2281,
																	"nodeType": "ExpressionStatement",
																	"src": "10696:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "10739:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10748:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10754:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10748:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10739:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2300,
														"nodeType": "IfStatement",
														"src": "10735:100:12",
														"trueBody": {
															"id": 2299,
															"nodeType": "Block",
															"src": "10757:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2289,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "10775:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10784:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10790:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10784:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10775:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2294,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:16:12"
																},
																{
																	"expression": {
																		"id": 2297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2295,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "10809:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10819:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10809:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2298,
																	"nodeType": "ExpressionStatement",
																	"src": "10809:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "10852:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10861:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10861:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10852:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2317,
														"nodeType": "IfStatement",
														"src": "10848:100:12",
														"trueBody": {
															"id": 2316,
															"nodeType": "Block",
															"src": "10870:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2306,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2207,
																			"src": "10888:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10897:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10903:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10897:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10888:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2311,
																	"nodeType": "ExpressionStatement",
																	"src": "10888:16:12"
																},
																{
																	"expression": {
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2312,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "10922:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10932:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10922:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2315,
																	"nodeType": "ExpressionStatement",
																	"src": "10922:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "10965:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10974:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10980:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10974:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10965:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2328,
														"nodeType": "IfStatement",
														"src": "10961:66:12",
														"trueBody": {
															"id": 2327,
															"nodeType": "Block",
															"src": "10983:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2323,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "11001:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11011:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11001:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2326,
																	"nodeType": "ExpressionStatement",
																	"src": "11001:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2330,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2213,
													"src": "11053:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2211,
												"id": 2331,
												"nodeType": "Return",
												"src": "11046:13:12"
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "10031:114:12",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10159:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10173:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "10165:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10164:15:12"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "10203:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10202:9:12"
									},
									"scope": 2496,
									"src": "10150:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "11301:167:12",
										"statements": [
											{
												"id": 2367,
												"nodeType": "UncheckedBlock",
												"src": "11311:151:12",
												"statements": [
													{
														"assignments": [
															2345
														],
														"declarations": [
															{
																"constant": false,
																"id": 2345,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11343:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2367,
																"src": "11335:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2344,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11335:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2349,
														"initialValue": {
															"arguments": [
																{
																	"id": 2347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2336,
																	"src": "11358:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2346,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2333,
																	2369
																],
																"referencedDeclaration": 2333,
																"src": "11352:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11352:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11335:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2350,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "11385:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1637",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2351,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2339,
																					"src": "11395:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2352,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1637,
																						"src": "11407:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1637_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11416:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1635,
																					"src": "11407:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11395:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11422:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2356,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2345,
																						"src": "11428:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11422:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2358,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2336,
																					"src": "11437:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11422:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11395:47:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11395:55:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11445:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11394:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11385:66:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2343,
														"id": 2366,
														"nodeType": "Return",
														"src": "11378:73:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "11072:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11229:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11243:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "11235:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11235:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11259:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "11250:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1637",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2337,
														"name": "Rounding",
														"nameLocations": [
															"11250:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1637,
														"src": "11250:8:12"
													},
													"referencedDeclaration": 1637,
													"src": "11250:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1637",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11234:34:12"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "11292:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:9:12"
									},
									"scope": 2496,
									"src": "11220:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2455,
										"nodeType": "Block",
										"src": "11782:600:12",
										"statements": [
											{
												"assignments": [
													2378
												],
												"declarations": [
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11800:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2455,
														"src": "11792:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11792:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2380,
												"initialValue": {
													"hexValue": "30",
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11809:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11792:18:12"
											},
											{
												"id": 2452,
												"nodeType": "UncheckedBlock",
												"src": "11820:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2381,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "11848:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11857:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11848:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11863:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11848:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2395,
														"nodeType": "IfStatement",
														"src": "11844:98:12",
														"trueBody": {
															"id": 2394,
															"nodeType": "Block",
															"src": "11866:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2386,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "11884:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11894:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11884:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2389,
																	"nodeType": "ExpressionStatement",
																	"src": "11884:13:12"
																},
																{
																	"expression": {
																		"id": 2392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2390,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "11915:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2393,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2396,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "11959:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11968:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11959:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11973:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11959:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2410,
														"nodeType": "IfStatement",
														"src": "11955:95:12",
														"trueBody": {
															"id": 2409,
															"nodeType": "Block",
															"src": "11976:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2401,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "11994:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12004:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11994:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2404,
																	"nodeType": "ExpressionStatement",
																	"src": "11994:12:12"
																},
																{
																	"expression": {
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2405,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "12024:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12034:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12024:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2408,
																	"nodeType": "ExpressionStatement",
																	"src": "12024:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2411,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "12067:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12076:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12067:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12081:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12067:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2425,
														"nodeType": "IfStatement",
														"src": "12063:95:12",
														"trueBody": {
															"id": 2424,
															"nodeType": "Block",
															"src": "12084:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2416,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "12102:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12112:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12102:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2419,
																	"nodeType": "ExpressionStatement",
																	"src": "12102:12:12"
																},
																{
																	"expression": {
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2420,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "12132:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12142:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12132:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2423,
																	"nodeType": "ExpressionStatement",
																	"src": "12132:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2426,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "12175:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12184:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12175:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12189:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12175:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2440,
														"nodeType": "IfStatement",
														"src": "12171:95:12",
														"trueBody": {
															"id": 2439,
															"nodeType": "Block",
															"src": "12192:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2372,
																			"src": "12210:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12220:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12210:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "12210:12:12"
																},
																{
																	"expression": {
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2435,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "12240:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12240:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2438,
																	"nodeType": "ExpressionStatement",
																	"src": "12240:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "12283:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12292:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12283:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12283:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2451,
														"nodeType": "IfStatement",
														"src": "12279:64:12",
														"trueBody": {
															"id": 2450,
															"nodeType": "Block",
															"src": "12299:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2446,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2378,
																			"src": "12317:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12327:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12317:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "12317:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2453,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2378,
													"src": "12369:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2454,
												"nodeType": "Return",
												"src": "12362:13:12"
											}
										]
									},
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "11474:240:12",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11728:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11743:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "11735:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:15:12"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "11773:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:9:12"
									},
									"scope": 2496,
									"src": "11719:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "12619:174:12",
										"statements": [
											{
												"id": 2493,
												"nodeType": "UncheckedBlock",
												"src": "12629:158:12",
												"statements": [
													{
														"assignments": [
															2468
														],
														"declarations": [
															{
																"constant": false,
																"id": 2468,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12661:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2493,
																"src": "12653:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2467,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12653:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2472,
														"initialValue": {
															"arguments": [
																{
																	"id": 2470,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2459,
																	"src": "12677:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2469,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2456,
																	2495
																],
																"referencedDeclaration": 2456,
																"src": "12670:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12670:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12653:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2473,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "12704:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1637",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2474,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2462,
																					"src": "12714:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2475,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1637,
																						"src": "12726:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1637_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12735:2:12",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1635,
																					"src": "12726:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1637",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12714:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2483,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12741:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2481,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2479,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2468,
																									"src": "12747:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2480,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12757:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12747:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2482,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12746:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12741:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2484,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2459,
																					"src": "12762:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12741:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12714:53:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12774:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12714:61:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2490,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12713:63:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12704:72:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2466,
														"id": 2492,
														"nodeType": "Return",
														"src": "12697:79:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2457,
										"nodeType": "StructuredDocumentation",
										"src": "12388:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12546:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12561:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "12553:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12577:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "12568:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1637",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2460,
														"name": "Rounding",
														"nameLocations": [
															"12568:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1637,
														"src": "12568:8:12"
													},
													"referencedDeclaration": 1637,
													"src": "12568:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1637",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:34:12"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "12610:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:9:12"
									},
									"scope": 2496,
									"src": "12537:256:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2497,
							"src": "202:12593:12",
							"usedErrors": []
						}
					],
					"src": "103:12693:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
					"exportedSymbols": {
						"SignedMathUpgradeable": [
							2601
						]
					},
					"id": 2602,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2499,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2601,
							"linearizedBaseContracts": [
								2601
							],
							"name": "SignedMathUpgradeable",
							"nameLocation": "223:21:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "386:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2509,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "403:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2510,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2504,
															"src": "407:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "403:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "403:13:13",
													"trueExpression": {
														"id": 2512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "411:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2508,
												"id": 2515,
												"nodeType": "Return",
												"src": "396:20:13"
											}
										]
									},
									"documentation": {
										"id": 2500,
										"nodeType": "StructuredDocumentation",
										"src": "251:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "331:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2501,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "352:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "345:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2503,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:20:13"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "378:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2506,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:8:13"
									},
									"scope": 2601,
									"src": "322:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2534,
										"nodeType": "Block",
										"src": "565:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2527,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2520,
															"src": "582:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2528,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "586:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "582:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2531,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2522,
														"src": "594:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "582:13:13",
													"trueExpression": {
														"id": 2530,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2520,
														"src": "590:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2526,
												"id": 2533,
												"nodeType": "Return",
												"src": "575:20:13"
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "429:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "510:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2519,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "531:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "524:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2521,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:20:13"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2535,
												"src": "557:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2524,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:8:13"
									},
									"scope": 2601,
									"src": "501:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "807:162:13",
										"statements": [
											{
												"assignments": [
													2546
												],
												"declarations": [
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "876:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "869:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2545,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "869:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2559,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2547,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "881:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2548,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2540,
																	"src": "885:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "881:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2550,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2551,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2538,
																				"src": "892:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2552,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2540,
																				"src": "896:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "892:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2554,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "891:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "902:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "891:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2557,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "890:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "880:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "869:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2560,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2546,
														"src": "921:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2565,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2546,
																						"src": "941:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "933:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2563,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "933:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "933:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "947:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "933:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "926:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2561,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "926:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "926:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2570,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2538,
																				"src": "955:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2571,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2540,
																				"src": "959:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "955:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2573,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "954:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "926:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2575,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2544,
												"id": 2577,
												"nodeType": "Return",
												"src": "914:48:13"
											}
										]
									},
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "608:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "748:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2537,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "773:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "766:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2539,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:13"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "799:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2542,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:8:13"
									},
									"scope": 2601,
									"src": "739:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "1113:158:13",
										"statements": [
											{
												"id": 2598,
												"nodeType": "UncheckedBlock",
												"src": "1123:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2589,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "1238:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1243:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1251:2:13",
																		"subExpression": {
																			"id": 2593,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "1252:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1238:15:13",
																	"trueExpression": {
																		"id": 2592,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2582,
																		"src": "1247:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1230:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2587,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1230:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1230:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2586,
														"id": 2597,
														"nodeType": "Return",
														"src": "1223:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "975:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1067:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1078:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "1071:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2581,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:10:13"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "1104:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:13"
									},
									"scope": 2601,
									"src": "1058:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2602,
							"src": "215:1058:13",
							"usedErrors": []
						}
					],
					"src": "109:1165:13"
				},
				"id": 13
			},
			"erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/implementation/IdentityRegistryStorage.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							599
						],
						"AddressUpgradeable": [
							1303
						],
						"ContextUpgradeable": [
							1345
						],
						"ERC165Upgradeable": [
							1618
						],
						"IAccessControlUpgradeable": [
							672
						],
						"IERC165Upgradeable": [
							1630
						],
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							263
						],
						"IIdentityRegistryStorage": [
							3160
						],
						"IRSStorage": [
							3182
						],
						"IdentityRegistryStorage": [
							3058
						],
						"Initializable": [
							973
						],
						"MathUpgradeable": [
							2496
						],
						"OwnableUpgradeable": [
							804
						],
						"SignedMathUpgradeable": [
							2601
						],
						"StringsUpgradeable": [
							1574
						]
					},
					"id": 3059,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2603,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:14"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 2604,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3059,
							"sourceUnit": 264,
							"src": "62:64:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2605,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3059,
							"sourceUnit": 805,
							"src": "128:75:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2606,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3059,
							"sourceUnit": 600,
							"src": "204:81:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
							"file": "../interface/IIdentityRegistryStorage.sol",
							"id": 2607,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3059,
							"sourceUnit": 3161,
							"src": "286:51:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/registry/storage/IRSStorage.sol",
							"file": "../storage/IRSStorage.sol",
							"id": 2608,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3059,
							"sourceUnit": 3183,
							"src": "338:35:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2609,
										"name": "IIdentityRegistryStorage",
										"nameLocations": [
											"415:24:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3160,
										"src": "415:24:14"
									},
									"id": 2610,
									"nodeType": "InheritanceSpecifier",
									"src": "415:24:14"
								},
								{
									"baseName": {
										"id": 2611,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"445:24:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 599,
										"src": "445:24:14"
									},
									"id": 2612,
									"nodeType": "InheritanceSpecifier",
									"src": "445:24:14"
								},
								{
									"baseName": {
										"id": 2613,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"475:18:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "475:18:14"
									},
									"id": 2614,
									"nodeType": "InheritanceSpecifier",
									"src": "475:18:14"
								},
								{
									"baseName": {
										"id": 2615,
										"name": "IRSStorage",
										"nameLocations": [
											"499:10:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3182,
										"src": "499:10:14"
									},
									"id": 2616,
									"nodeType": "InheritanceSpecifier",
									"src": "499:10:14"
								}
							],
							"canonicalName": "IdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3058,
							"linearizedBaseContracts": [
								3058,
								3182,
								804,
								599,
								1618,
								1630,
								672,
								1345,
								973,
								3160
							],
							"name": "IdentityRegistryStorage",
							"nameLocation": "384:23:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "22459e18",
									"id": 2619,
									"mutability": "constant",
									"name": "AGENT_ROLE",
									"nameLocation": "540:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 3058,
									"src": "516:111:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2617,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863616235613062666530623739643263346231633265303235393966613034346431313562373531316639363539333037636234323736393530393637373039",
										"id": 2618,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "561:66:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_91688104184975485665605621293953084602104354180736674220400715645603821287177_by_1",
											"typeString": "int_const 9168...(69 digits omitted)...7177"
										},
										"value": "0xcab5a0bfe0b79d2c4b1c2e02599fa044d115b7511f9659307cb4276950967709"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e58378bb",
									"id": 2622,
									"mutability": "constant",
									"name": "OWNER_ROLE",
									"nameLocation": "658:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 3058,
									"src": "634:111:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2620,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "634:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862313935343664666630316538353666623366303130633236376137623163363033363363663861343636346532316363383963323632323436323032313465",
										"id": 2621,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "679:66:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_80323123571490017829807956183959927157758783243307277648765580262250913997134_by_1",
											"typeString": "int_const 8032...(69 digits omitted)...7134"
										},
										"value": "0xb19546dff01e856fb3f010c267a7b1c60363cf8a4664e21cc89c26224620214e"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2651,
										"nodeType": "Block",
										"src": "789:173:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "818:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "810:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2628,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "810:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "810:10:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2632,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "822:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "822:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2627,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "799:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2635,
												"nodeType": "ExpressionStatement",
												"src": "799:36:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2637,
															"name": "OWNER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2622,
															"src": "857:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2638,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "869:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "869:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2636,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "846:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "846:36:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2643,
															"name": "AGENT_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "904:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2644,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "916:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "916:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2642,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "893:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "893:36:14"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2648,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "939:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "939:16:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2650,
												"nodeType": "ExpressionStatement",
												"src": "939:16:14"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 2652,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2625,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2624,
												"name": "initializer",
												"nameLocations": [
													"777:11:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 875,
												"src": "777:11:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "777:11:14"
										}
									],
									"name": "init",
									"nameLocation": "761:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:2:14"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:14"
									},
									"scope": 3058,
									"src": "752:210:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3108
									],
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "1209:481:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2668,
																	"name": "_userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2655,
																	"src": "1240:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1264:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1256:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2669,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1256:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1256:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1240:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2676,
																			"name": "_identity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2658,
																			"src": "1278:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IIdentity_$263",
																				"typeString": "contract IIdentity"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IIdentity_$263",
																				"typeString": "contract IIdentity"
																			}
																		],
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1270:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2674,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1270:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1270:18:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1300:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1292:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2678,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1292:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1292:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1270:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1240:62:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1316:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 2667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1219:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1219:140:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2686,
												"nodeType": "ExpressionStatement",
												"src": "1219:140:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2690,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3174,
																				"src": "1398:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 2692,
																			"indexExpression": {
																				"id": 2691,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2655,
																				"src": "1410:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1398:25:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$3169_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1424:16:14",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3166,
																		"src": "1398:42:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1390:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1390:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1390:51:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1453:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1445:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2695,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1445:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1445:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1390:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616464726573732073746f72656420616c7265616479",
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1469:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0",
																"typeString": "literal_string \"address stored already\""
															},
															"value": "address stored already"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d21c6cb8c3e92c1f241743ec6bc7512183f8b93efeba3f31234178ff89bad6f0",
																"typeString": "literal_string \"address stored already\""
															}
														],
														"id": 2687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1369:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1369:134:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2702,
												"nodeType": "ExpressionStatement",
												"src": "1369:134:14"
											},
											{
												"expression": {
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2703,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3174,
																"src": "1513:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 2705,
															"indexExpression": {
																"id": 2704,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2655,
																"src": "1525:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1513:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$3169_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 2706,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1539:16:14",
														"memberName": "identityContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3166,
														"src": "1513:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$263",
															"typeString": "contract IIdentity"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2707,
														"name": "_identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2658,
														"src": "1558:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$263",
															"typeString": "contract IIdentity"
														}
													},
													"src": "1513:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"id": 2709,
												"nodeType": "ExpressionStatement",
												"src": "1513:54:14"
											},
											{
												"expression": {
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2710,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3174,
																"src": "1577:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 2712,
															"indexExpression": {
																"id": 2711,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2655,
																"src": "1589:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1577:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$3169_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 2713,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1603:15:14",
														"memberName": "investorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3168,
														"src": "1577:41:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2714,
														"name": "_country",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2660,
														"src": "1621:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1577:52:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2716,
												"nodeType": "ExpressionStatement",
												"src": "1577:52:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2718,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "1659:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2719,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "1673:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														],
														"id": 2717,
														"name": "IdentityStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3068,
														"src": "1644:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$263_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1644:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2721,
												"nodeType": "EmitStatement",
												"src": "1639:44:14"
											}
										]
									},
									"documentation": {
										"id": 2653,
										"nodeType": "StructuredDocumentation",
										"src": "968:77:14",
										"text": "  @dev See {IIdentityRegistryStorage-addIdentityToStorage}."
									},
									"functionSelector": "a53410dd",
									"id": 2723,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2664,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2619,
													"src": "1197:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2663,
												"name": "onlyRole",
												"nameLocations": [
													"1188:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 317,
												"src": "1188:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1188:20:14"
										}
									],
									"name": "addIdentityToStorage",
									"nameLocation": "1059:20:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2662,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1179:8:14"
									},
									"parameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1097:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "1089:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1129:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "1119:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2656,
														"name": "IIdentity",
														"nameLocations": [
															"1119:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "1119:9:14"
													},
													"referencedDeclaration": 263,
													"src": "1119:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1155:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "1148:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2659,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1148:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:90:14"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:0:14"
									},
									"scope": 3058,
									"src": "1050:640:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3128
									],
									"body": {
										"id": 2792,
										"nodeType": "Block",
										"src": "1918:496:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2737,
																	"name": "_userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2726,
																	"src": "1949:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1973:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1965:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2738,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1965:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1965:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1949:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2745,
																			"name": "_identity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2729,
																			"src": "1987:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IIdentity_$263",
																				"typeString": "contract IIdentity"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IIdentity_$263",
																				"typeString": "contract IIdentity"
																			}
																		],
																		"id": 2744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1979:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2743,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1979:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1979:18:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2009:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2001:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2747,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2001:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2001:10:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1979:32:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1949:62:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2025:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 2736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1928:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1928:140:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2755,
												"nodeType": "ExpressionStatement",
												"src": "1928:140:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2759,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3174,
																				"src": "2107:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 2761,
																			"indexExpression": {
																				"id": 2760,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2726,
																				"src": "2119:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2107:25:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$3169_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2133:16:14",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3166,
																		"src": "2107:42:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2099:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2757,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2099:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2099:51:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2162:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2154:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2764,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2154:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2154:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2099:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f742073746f72656420796574",
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2178:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															},
															"value": "address not stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															}
														],
														"id": 2756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2078:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2078:134:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2771,
												"nodeType": "ExpressionStatement",
												"src": "2078:134:14"
											},
											{
												"assignments": [
													2774
												],
												"declarations": [
													{
														"constant": false,
														"id": 2774,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "2232:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2792,
														"src": "2222:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$263",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 2773,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2772,
																"name": "IIdentity",
																"nameLocations": [
																	"2222:9:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 263,
																"src": "2222:9:14"
															},
															"referencedDeclaration": 263,
															"src": "2222:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2779,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2775,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "2246:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 2777,
														"indexExpression": {
															"id": 2776,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2726,
															"src": "2258:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2246:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$3169_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 2778,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2272:16:14",
													"memberName": "identityContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3166,
													"src": "2246:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2222:66:14"
											},
											{
												"expression": {
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2780,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3174,
																"src": "2298:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 2782,
															"indexExpression": {
																"id": 2781,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2726,
																"src": "2310:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2298:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$3169_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 2783,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2324:16:14",
														"memberName": "identityContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3166,
														"src": "2298:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$263",
															"typeString": "contract IIdentity"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2784,
														"name": "_identity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2729,
														"src": "2343:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$263",
															"typeString": "contract IIdentity"
														}
													},
													"src": "2298:54:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"id": 2786,
												"nodeType": "ExpressionStatement",
												"src": "2298:54:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2788,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "2384:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														},
														{
															"id": 2789,
															"name": "_identity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "2397:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														],
														"id": 2787,
														"name": "IdentityModified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3083,
														"src": "2367:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IIdentity_$263_$_t_contract$_IIdentity_$263_$returns$__$",
															"typeString": "function (contract IIdentity,contract IIdentity)"
														}
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2367:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2791,
												"nodeType": "EmitStatement",
												"src": "2362:45:14"
											}
										]
									},
									"documentation": {
										"id": 2724,
										"nodeType": "StructuredDocumentation",
										"src": "1696:77:14",
										"text": "  @dev See {IIdentityRegistryStorage-modifyStoredIdentity}."
									},
									"functionSelector": "e805cf86",
									"id": 2793,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2733,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2619,
													"src": "1902:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2732,
												"name": "onlyRole",
												"nameLocations": [
													"1893:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 317,
												"src": "1893:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1893:20:14"
										}
									],
									"name": "modifyStoredIdentity",
									"nameLocation": "1787:20:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2731,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1876:8:14"
									},
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1816:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "1808:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1808:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1840:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2793,
												"src": "1830:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 2728,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2727,
														"name": "IIdentity",
														"nameLocations": [
															"1830:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "1830:9:14"
													},
													"referencedDeclaration": 263,
													"src": "1830:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1807:43:14"
									},
									"returnParameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1918:0:14"
									},
									"scope": 3058,
									"src": "1778:636:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3120
									],
									"body": {
										"id": 2843,
										"nodeType": "Block",
										"src": "2652:347:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2806,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2796,
																"src": "2670:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2694:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2686:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2807,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2686:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2686:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2670:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2698:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 2805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2662:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2662:70:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2814,
												"nodeType": "ExpressionStatement",
												"src": "2662:70:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2818,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3174,
																				"src": "2771:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 2820,
																			"indexExpression": {
																				"id": 2819,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2796,
																				"src": "2783:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2771:25:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$3169_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 2821,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2797:16:14",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3166,
																		"src": "2771:42:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 2817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2763:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2816,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2763:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:51:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2826:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2818:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2823,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2818:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2818:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2763:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f742073746f72656420796574",
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2842:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															},
															"value": "address not stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															}
														],
														"id": 2815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2742:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2742:134:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "2742:134:14"
											},
											{
												"expression": {
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2831,
																"name": "_identities",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3174,
																"src": "2886:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																	"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																}
															},
															"id": 2833,
															"indexExpression": {
																"id": 2832,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2796,
																"src": "2898:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2886:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Identity_$3169_storage",
																"typeString": "struct IRSStorage.Identity storage ref"
															}
														},
														"id": 2834,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2912:15:14",
														"memberName": "investorCountry",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3168,
														"src": "2886:41:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2835,
														"name": "_country",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "2930:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2886:52:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2837,
												"nodeType": "ExpressionStatement",
												"src": "2886:52:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2839,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2796,
															"src": "2969:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2840,
															"name": "_country",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2798,
															"src": "2983:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 2838,
														"name": "CountryModified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3089,
														"src": "2953:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint16_$returns$__$",
															"typeString": "function (address,uint16)"
														}
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2953:39:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2842,
												"nodeType": "EmitStatement",
												"src": "2948:44:14"
											}
										]
									},
									"documentation": {
										"id": 2794,
										"nodeType": "StructuredDocumentation",
										"src": "2420:84:14",
										"text": "  @dev See {IIdentityRegistryStorage-modifyStoredInvestorCountry}."
									},
									"functionSelector": "9f3418d5",
									"id": 2844,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2802,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2619,
													"src": "2636:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2801,
												"name": "onlyRole",
												"nameLocations": [
													"2627:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 317,
												"src": "2627:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2627:20:14"
										}
									],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "2518:27:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2800,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2610:8:14"
									},
									"parameters": {
										"id": 2799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "2554:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "2546:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "2575:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2844,
												"src": "2568:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2797,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:39:14"
									},
									"returnParameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2652:0:14"
									},
									"scope": 3058,
									"src": "2509:490:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3113
									],
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "3216:407:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2855,
																"name": "_userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2847,
																"src": "3234:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3258:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3250:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2856,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3250:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3250:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3234:26:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3262:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 2854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3226:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3226:70:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2863,
												"nodeType": "ExpressionStatement",
												"src": "3226:70:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2867,
																				"name": "_identities",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3174,
																				"src": "3335:11:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																					"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
																				}
																			},
																			"id": 2869,
																			"indexExpression": {
																				"id": 2868,
																				"name": "_userAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2847,
																				"src": "3347:12:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3335:25:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Identity_$3169_storage",
																				"typeString": "struct IRSStorage.Identity storage ref"
																			}
																		},
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3361:16:14",
																		"memberName": "identityContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3166,
																		"src": "3335:42:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IIdentity_$263",
																			"typeString": "contract IIdentity"
																		}
																	],
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3327:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2865,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3327:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3327:51:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3390:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3382:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2872,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3382:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3382:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3327:65:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373206e6f742073746f72656420796574",
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3406:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															},
															"value": "address not stored yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97ec336078fefc43e27606a24311253789c641f2cb75878d4174559a25c62ec5",
																"typeString": "literal_string \"address not stored yet\""
															}
														],
														"id": 2864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3306:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3306:134:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2879,
												"nodeType": "ExpressionStatement",
												"src": "3306:134:14"
											},
											{
												"assignments": [
													2882
												],
												"declarations": [
													{
														"constant": false,
														"id": 2882,
														"mutability": "mutable",
														"name": "oldIdentity",
														"nameLocation": "3460:11:14",
														"nodeType": "VariableDeclaration",
														"scope": 2898,
														"src": "3450:21:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIdentity_$263",
															"typeString": "contract IIdentity"
														},
														"typeName": {
															"id": 2881,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2880,
																"name": "IIdentity",
																"nameLocations": [
																	"3450:9:14"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 263,
																"src": "3450:9:14"
															},
															"referencedDeclaration": 263,
															"src": "3450:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2887,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2883,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "3474:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 2885,
														"indexExpression": {
															"id": 2884,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "3486:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3474:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$3169_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 2886,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3500:16:14",
													"memberName": "identityContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3166,
													"src": "3474:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3450:66:14"
											},
											{
												"expression": {
													"id": 2891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3526:32:14",
													"subExpression": {
														"baseExpression": {
															"id": 2888,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "3533:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 2890,
														"indexExpression": {
															"id": 2889,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "3545:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3533:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$3169_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2892,
												"nodeType": "ExpressionStatement",
												"src": "3526:32:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2894,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "3590:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2895,
															"name": "oldIdentity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "3604:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_contract$_IIdentity_$263",
																"typeString": "contract IIdentity"
															}
														],
														"id": 2893,
														"name": "IdentityUnstored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3075,
														"src": "3573:16:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IIdentity_$263_$returns$__$",
															"typeString": "function (address,contract IIdentity)"
														}
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3573:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2897,
												"nodeType": "EmitStatement",
												"src": "3568:48:14"
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "3005:82:14",
										"text": "  @dev See {IIdentityRegistryStorage-removeIdentityFromStorage}."
									},
									"functionSelector": "cf191bcd",
									"id": 2899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2851,
													"name": "AGENT_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2619,
													"src": "3200:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2852,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2850,
												"name": "onlyRole",
												"nameLocations": [
													"3191:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 317,
												"src": "3191:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "3191:20:14"
										}
									],
									"name": "removeIdentityFromStorage",
									"nameLocation": "3101:25:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2849,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3174:8:14"
									},
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "3135:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "3127:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:22:14"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3216:0:14"
									},
									"scope": 3058,
									"src": "3092:531:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3133
									],
									"body": {
										"id": 2939,
										"nodeType": "Block",
										"src": "3786:411:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2907,
																"name": "_identityRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2902,
																"src": "3817:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3846:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3838:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2908,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3838:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3838:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3817:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 2913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3862:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 2906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3796:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3796:109:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2915,
												"nodeType": "ExpressionStatement",
												"src": "3796:109:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2917,
																	"name": "_identityRegistries",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3177,
																	"src": "3936:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3956:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3936:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "333030",
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3965:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_300_by_1",
																	"typeString": "int_const 300"
																},
																"value": "300"
															},
															"src": "3936:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742062696e64206d6f7265207468616e2033303020495220746f203120495253",
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3982:39:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c",
																"typeString": "literal_string \"cannot bind more than 300 IR to 1 IRS\""
															},
															"value": "cannot bind more than 300 IR to 1 IRS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df82ab7e77c8fc48b4d068bdda288c9ffc5dd4dfcc6861471883e27416b3540c",
																"typeString": "literal_string \"cannot bind more than 300 IR to 1 IRS\""
															}
														],
														"id": 2916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3915:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3915:116:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2923,
												"nodeType": "ExpressionStatement",
												"src": "3915:116:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2925,
															"name": "AGENT_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "4052:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2926,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "4064:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2924,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "4041:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4041:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2928,
												"nodeType": "ExpressionStatement",
												"src": "4041:41:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2932,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "4117:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2929,
															"name": "_identityRegistries",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3177,
															"src": "4092:19:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4112:4:14",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4092:24:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4092:43:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2934,
												"nodeType": "ExpressionStatement",
												"src": "4092:43:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2936,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2902,
															"src": "4172:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2935,
														"name": "IdentityRegistryBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3093,
														"src": "4150:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4150:40:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2938,
												"nodeType": "EmitStatement",
												"src": "4145:45:14"
											}
										]
									},
									"documentation": {
										"id": 2900,
										"nodeType": "StructuredDocumentation",
										"src": "3629:77:14",
										"text": "  @dev See {IIdentityRegistryStorage-bindIdentityRegistry}."
									},
									"functionSelector": "690a49f9",
									"id": 2940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "3720:20:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2904,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3777:8:14"
									},
									"parameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "3749:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "3741:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3741:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3740:27:14"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3786:0:14"
									},
									"scope": 3058,
									"src": "3711:486:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3138
									],
									"body": {
										"id": 3014,
										"nodeType": "Block",
										"src": "4384:680:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2948,
																"name": "_identityRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2943,
																"src": "4415:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4444:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4436:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2949,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4436:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4436:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4415:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4460:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 2947,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4394:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:109:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "4394:109:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2958,
																	"name": "_identityRegistries",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3177,
																	"src": "4534:19:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4554:6:14",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4534:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4563:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4534:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6964656e74697479207265676973747279206973206e6f742073746f726564",
															"id": 2962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4578:33:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc",
																"typeString": "literal_string \"identity registry is not stored\""
															},
															"value": "identity registry is not stored"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b93320b45eec031c532d533bc5a30d598b97d9cdd9618c549c011e4c074c85cc",
																"typeString": "literal_string \"identity registry is not stored\""
															}
														],
														"id": 2957,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4513:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4513:108:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2964,
												"nodeType": "ExpressionStatement",
												"src": "4513:108:14"
											},
											{
												"assignments": [
													2966
												],
												"declarations": [
													{
														"constant": false,
														"id": 2966,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "4639:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 3014,
														"src": "4631:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4631:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2969,
												"initialValue": {
													"expression": {
														"id": 2967,
														"name": "_identityRegistries",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "4648:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4668:6:14",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4648:26:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4631:43:14"
											},
											{
												"body": {
													"id": 3003,
													"nodeType": "Block",
													"src": "4721:228:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2980,
																		"name": "_identityRegistries",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3177,
																		"src": "4739:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2982,
																	"indexExpression": {
																		"id": 2981,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2971,
																		"src": "4759:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4739:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2983,
																	"name": "_identityRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2943,
																	"src": "4765:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4739:43:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3002,
															"nodeType": "IfStatement",
															"src": "4735:204:14",
															"trueBody": {
																"id": 3001,
																"nodeType": "Block",
																"src": "4784:155:14",
																"statements": [
																	{
																		"expression": {
																			"id": 2993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2985,
																					"name": "_identityRegistries",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3177,
																					"src": "4802:19:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2987,
																				"indexExpression": {
																					"id": 2986,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2971,
																					"src": "4822:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4802:22:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2988,
																					"name": "_identityRegistries",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3177,
																					"src": "4827:19:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2992,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2991,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2989,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2966,
																						"src": "4847:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2990,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4856:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "4847:10:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4827:31:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4802:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2994,
																		"nodeType": "ExpressionStatement",
																		"src": "4802:56:14"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2995,
																					"name": "_identityRegistries",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3177,
																					"src": "4876:19:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4896:3:14",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "4876:23:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 2998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4876:25:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2999,
																		"nodeType": "ExpressionStatement",
																		"src": "4876:25:14"
																	},
																	{
																		"id": 3000,
																		"nodeType": "Break",
																		"src": "4919:5:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2974,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "4704:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2975,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2966,
														"src": "4708:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4704:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3004,
												"initializationExpression": {
													"assignments": [
														2971
													],
													"declarations": [
														{
															"constant": false,
															"id": 2971,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4697:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 3004,
															"src": "4689:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2970,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4689:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2973,
													"initialValue": {
														"hexValue": "30",
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4701:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4689:13:14"
												},
												"loopExpression": {
													"expression": {
														"id": 2978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4716:3:14",
														"subExpression": {
															"id": 2977,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2971,
															"src": "4716:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2979,
													"nodeType": "ExpressionStatement",
													"src": "4716:3:14"
												},
												"nodeType": "ForStatement",
												"src": "4684:265:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3006,
															"name": "AGENT_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "4970:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3007,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "4982:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3005,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "4958:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4958:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3009,
												"nodeType": "ExpressionStatement",
												"src": "4958:42:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3011,
															"name": "_identityRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "5039:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3010,
														"name": "IdentityRegistryUnbound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3097,
														"src": "5015:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5015:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3013,
												"nodeType": "EmitStatement",
												"src": "5010:47:14"
											}
										]
									},
									"documentation": {
										"id": 2941,
										"nodeType": "StructuredDocumentation",
										"src": "4203:79:14",
										"text": "  @dev See {IIdentityRegistryStorage-unbindIdentityRegistry}."
									},
									"functionSelector": "97a012f7",
									"id": 3015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "4296:22:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2945,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4371:8:14"
									},
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "4327:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 3015,
												"src": "4319:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4318:27:14"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4384:0:14"
									},
									"scope": 3058,
									"src": "4287:777:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3144
									],
									"body": {
										"id": 3025,
										"nodeType": "Block",
										"src": "5278:43:14",
										"statements": [
											{
												"expression": {
													"id": 3023,
													"name": "_identityRegistries",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3177,
													"src": "5295:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 3022,
												"id": 3024,
												"nodeType": "Return",
												"src": "5288:26:14"
											}
										]
									},
									"documentation": {
										"id": 3016,
										"nodeType": "StructuredDocumentation",
										"src": "5070:81:14",
										"text": "  @dev See {IIdentityRegistryStorage-linkedIdentityRegistries}."
									},
									"functionSelector": "bf9eb959",
									"id": 3026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "5165:24:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3018,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5230:8:14"
									},
									"parameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5189:2:14"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "5256:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3019,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5256:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3020,
													"nodeType": "ArrayTypeName",
													"src": "5256:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5255:18:14"
									},
									"scope": 3058,
									"src": "5156:165:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3152
									],
									"body": {
										"id": 3041,
										"nodeType": "Block",
										"src": "5528:66:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 3036,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "5545:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 3038,
														"indexExpression": {
															"id": 3037,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3029,
															"src": "5557:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5545:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$3169_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 3039,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5571:16:14",
													"memberName": "identityContract",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3166,
													"src": "5545:42:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"functionReturnParameters": 3035,
												"id": 3040,
												"nodeType": "Return",
												"src": "5538:49:14"
											}
										]
									},
									"documentation": {
										"id": 3027,
										"nodeType": "StructuredDocumentation",
										"src": "5327:71:14",
										"text": "  @dev See {IIdentityRegistryStorage-storedIdentity}."
									},
									"functionSelector": "7988d3a5",
									"id": 3042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "5412:14:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3031,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5487:8:14"
									},
									"parameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "5435:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3042,
												"src": "5427:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5427:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5426:22:14"
									},
									"returnParameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3042,
												"src": "5513:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3032,
														"name": "IIdentity",
														"nameLocations": [
															"5513:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "5513:9:14"
													},
													"referencedDeclaration": 263,
													"src": "5513:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5512:11:14"
									},
									"scope": 3058,
									"src": "5403:191:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3159
									],
									"body": {
										"id": 3056,
										"nodeType": "Block",
										"src": "5812:65:14",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 3051,
															"name": "_identities",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3174,
															"src": "5829:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
																"typeString": "mapping(address => struct IRSStorage.Identity storage ref)"
															}
														},
														"id": 3053,
														"indexExpression": {
															"id": 3052,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3045,
															"src": "5841:12:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5829:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Identity_$3169_storage",
															"typeString": "struct IRSStorage.Identity storage ref"
														}
													},
													"id": 3054,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5855:15:14",
													"memberName": "investorCountry",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3168,
													"src": "5829:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3050,
												"id": 3055,
												"nodeType": "Return",
												"src": "5822:48:14"
											}
										]
									},
									"documentation": {
										"id": 3043,
										"nodeType": "StructuredDocumentation",
										"src": "5600:78:14",
										"text": "  @dev See {IIdentityRegistryStorage-storedInvestorCountry}."
									},
									"functionSelector": "727e13bc",
									"id": 3057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "5692:21:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3047,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5774:8:14"
									},
									"parameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "5722:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "5714:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5714:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:22:14"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3057,
												"src": "5800:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3048,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5800:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5799:8:14"
									},
									"scope": 3058,
									"src": "5683:194:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3059,
							"src": "375:5504:14",
							"usedErrors": []
						}
					],
					"src": "37:5843:14"
				},
				"id": 14
			},
			"erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/interface/IIdentityRegistryStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							263
						],
						"IIdentityRegistryStorage": [
							3160
						]
					},
					"id": 3161,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3060,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:15"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 3061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3161,
							"sourceUnit": 264,
							"src": "62:64:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIdentityRegistryStorage",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3160,
							"linearizedBaseContracts": [
								3160
							],
							"name": "IIdentityRegistryStorage",
							"nameLocation": "138:24:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "0030dea7e9c9afaa2e3c9810f2fc9b5181f1bad74ca5a8db85f746a33585e747",
									"id": 3068,
									"name": "IdentityStored",
									"nameLocation": "175:14:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "215:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "199:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3066,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "258:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "240:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3064,
														"name": "IIdentity",
														"nameLocations": [
															"240:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "240:9:15"
													},
													"referencedDeclaration": 263,
													"src": "240:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:83:15"
									},
									"src": "169:104:15"
								},
								{
									"anonymous": false,
									"eventSelector": "ca6a4c3370b859312246e7f086284076e557997e10d856b716c23ab67067790b",
									"id": 3075,
									"name": "IdentityUnstored",
									"nameLocation": "285:16:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "327:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "311:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"indexed": true,
												"mutability": "mutable",
												"name": "identity",
												"nameLocation": "370:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3075,
												"src": "352:26:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3071,
														"name": "IIdentity",
														"nameLocations": [
															"352:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "352:9:15"
													},
													"referencedDeclaration": 263,
													"src": "352:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:83:15"
									},
									"src": "279:106:15"
								},
								{
									"anonymous": false,
									"eventSelector": "556ce885dfcea52155c773f1ed2e58781c51945c13030ab8f793c61f51d1b808",
									"id": 3083,
									"name": "IdentityModified",
									"nameLocation": "397:16:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldIdentity",
												"nameLocation": "441:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "423:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3076,
														"name": "IIdentity",
														"nameLocations": [
															"423:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "423:9:15"
													},
													"referencedDeclaration": 263,
													"src": "423:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3081,
												"indexed": true,
												"mutability": "mutable",
												"name": "newIdentity",
												"nameLocation": "480:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "462:29:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3080,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3079,
														"name": "IIdentity",
														"nameLocations": [
															"462:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "462:9:15"
													},
													"referencedDeclaration": 263,
													"src": "462:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:84:15"
									},
									"src": "391:107:15"
								},
								{
									"anonymous": false,
									"eventSelector": "20965fcdc6eed7ae398065b40ece4e732ba667992ca819fc54e80e9f2047c4cf",
									"id": 3089,
									"name": "CountryModified",
									"nameLocation": "510:15:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3085,
												"indexed": true,
												"mutability": "mutable",
												"name": "investorAddress",
												"nameLocation": "551:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "535:31:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3087,
												"indexed": true,
												"mutability": "mutable",
												"name": "country",
												"nameLocation": "591:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3089,
												"src": "576:22:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3086,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "576:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:79:15"
									},
									"src": "504:101:15"
								},
								{
									"anonymous": false,
									"eventSelector": "500c250171aa20e861b680f93502547b9d436eda7d4c537fc360db6e0c6eedfb",
									"id": 3093,
									"name": "IdentityRegistryBound",
									"nameLocation": "617:21:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3091,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "655:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "639:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:34:15"
									},
									"src": "611:62:15"
								},
								{
									"anonymous": false,
									"eventSelector": "51f353eb5801583fdf2706e43c045b62fdf6b1566820b349390616363ecf72c9",
									"id": 3097,
									"name": "IdentityRegistryUnbound",
									"nameLocation": "685:23:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3095,
												"indexed": true,
												"mutability": "mutable",
												"name": "identityRegistry",
												"nameLocation": "725:16:15",
												"nodeType": "VariableDeclaration",
												"scope": 3097,
												"src": "709:32:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:34:15"
									},
									"src": "679:64:15"
								},
								{
									"documentation": {
										"id": 3098,
										"nodeType": "StructuredDocumentation",
										"src": "749:14:15",
										"text": "functions"
									},
									"functionSelector": "a53410dd",
									"id": 3108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addIdentityToStorage",
									"nameLocation": "777:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "815:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "807:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "847:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "837:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3101,
														"name": "IIdentity",
														"nameLocations": [
															"837:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "837:9:15"
													},
													"referencedDeclaration": 263,
													"src": "837:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "873:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "866:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3104,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "866:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:90:15"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "896:0:15"
									},
									"scope": 3160,
									"src": "768:129:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cf191bcd",
									"id": 3113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeIdentityFromStorage",
									"nameLocation": "912:25:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "946:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "938:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:22:15"
									},
									"returnParameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:0:15"
									},
									"scope": 3160,
									"src": "903:66:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f3418d5",
									"id": 3120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredInvestorCountry",
									"nameLocation": "984:27:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1020:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "1012:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "_country",
												"nameLocation": "1041:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "1034:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3116,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1034:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:39:15"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:15"
									},
									"scope": 3160,
									"src": "975:93:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e805cf86",
									"id": 3128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "modifyStoredIdentity",
									"nameLocation": "1083:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1112:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3128,
												"src": "1104:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1136:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 3128,
												"src": "1126:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3123,
														"name": "IIdentity",
														"nameLocations": [
															"1126:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "1126:9:15"
													},
													"referencedDeclaration": 263,
													"src": "1126:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:43:15"
									},
									"returnParameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:0:15"
									},
									"scope": 3160,
									"src": "1074:90:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "690a49f9",
									"id": 3133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindIdentityRegistry",
									"nameLocation": "1179:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3130,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "1208:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 3133,
												"src": "1200:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:15"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:0:15"
									},
									"scope": 3160,
									"src": "1170:66:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97a012f7",
									"id": 3138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindIdentityRegistry",
									"nameLocation": "1251:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3135,
												"mutability": "mutable",
												"name": "_identityRegistry",
												"nameLocation": "1282:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "1274:25:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:27:15"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:15"
									},
									"scope": 3160,
									"src": "1242:68:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bf9eb959",
									"id": 3144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "linkedIdentityRegistries",
									"nameLocation": "1325:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1349:2:15"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3144,
												"src": "1399:16:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3140,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1399:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3141,
													"nodeType": "ArrayTypeName",
													"src": "1399:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:18:15"
									},
									"scope": 3160,
									"src": "1316:101:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7988d3a5",
									"id": 3152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedIdentity",
									"nameLocation": "1432:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1455:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "1447:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:22:15"
									},
									"returnParameters": {
										"id": 3151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3152,
												"src": "1516:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 3149,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3148,
														"name": "IIdentity",
														"nameLocations": [
															"1516:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 263,
														"src": "1516:9:15"
													},
													"referencedDeclaration": 263,
													"src": "1516:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$263",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1515:11:15"
									},
									"scope": 3160,
									"src": "1423:104:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "727e13bc",
									"id": 3159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "storedInvestorCountry",
									"nameLocation": "1542:21:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1572:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "1564:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:22:15"
									},
									"returnParameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3159,
												"src": "1633:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3156,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1633:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1632:8:15"
									},
									"scope": 3160,
									"src": "1533:108:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3161,
							"src": "128:1515:15",
							"usedErrors": []
						}
					],
					"src": "37:1607:15"
				},
				"id": 15
			},
			"erc3643/erc3643/registry/storage/IRSStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/storage/IRSStorage.sol",
					"exportedSymbols": {
						"IERC734": [
							146
						],
						"IERC735": [
							254
						],
						"IIdentity": [
							263
						],
						"IRSStorage": [
							3182
						]
					},
					"id": 3183,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3162,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:16"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"id": 3163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3183,
							"sourceUnit": 264,
							"src": "62:64:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRSStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3182,
							"linearizedBaseContracts": [
								3182
							],
							"name": "IRSStorage",
							"nameLocation": "137:10:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IRSStorage.Identity",
									"id": 3169,
									"members": [
										{
											"constant": false,
											"id": 3166,
											"mutability": "mutable",
											"name": "identityContract",
											"nameLocation": "265:16:16",
											"nodeType": "VariableDeclaration",
											"scope": 3169,
											"src": "255:26:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IIdentity_$263",
												"typeString": "contract IIdentity"
											},
											"typeName": {
												"id": 3165,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3164,
													"name": "IIdentity",
													"nameLocations": [
														"255:9:16"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 263,
													"src": "255:9:16"
												},
												"referencedDeclaration": 263,
												"src": "255:9:16",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$263",
													"typeString": "contract IIdentity"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3168,
											"mutability": "mutable",
											"name": "investorCountry",
											"nameLocation": "298:15:16",
											"nodeType": "VariableDeclaration",
											"scope": 3169,
											"src": "291:22:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 3167,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "291:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Identity",
									"nameLocation": "236:8:16",
									"nodeType": "StructDefinition",
									"scope": 3182,
									"src": "229:91:16",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3174,
									"mutability": "mutable",
									"name": "_identities",
									"nameLocation": "432:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 3182,
									"src": "394:49:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
										"typeString": "mapping(address => struct IRSStorage.Identity)"
									},
									"typeName": {
										"id": 3173,
										"keyType": {
											"id": 3170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "402:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "394:28:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Identity_$3169_storage_$",
											"typeString": "mapping(address => struct IRSStorage.Identity)"
										},
										"valueType": {
											"id": 3172,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3171,
												"name": "Identity",
												"nameLocations": [
													"413:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3169,
												"src": "413:8:16"
											},
											"referencedDeclaration": 3169,
											"src": "413:8:16",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Identity_$3169_storage_ptr",
												"typeString": "struct IRSStorage.Identity"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3177,
									"mutability": "mutable",
									"name": "_identityRegistries",
									"nameLocation": "527:19:16",
									"nodeType": "VariableDeclaration",
									"scope": 3182,
									"src": "508:38:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 3175,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "508:7:16",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 3176,
										"nodeType": "ArrayTypeName",
										"src": "508:9:16",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3181,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "577:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 3182,
									"src": "557:25:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 3178,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "557:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 3180,
										"length": {
											"hexValue": "3439",
											"id": 3179,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "565:2:16",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "557:11:16",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 3183,
							"src": "128:457:16",
							"usedErrors": []
						}
					],
					"src": "37:549:16"
				},
				"id": 16
			}
		}
	}
}