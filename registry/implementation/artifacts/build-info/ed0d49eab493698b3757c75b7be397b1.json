{
	"id": "ed0d49eab493698b3757c75b7be397b1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../interface/ITrustedIssuersRegistry.sol\";\nimport \"../storage/TIRStorage.sol\";\n\ncontract TrustedIssuersRegistry is\n    ITrustedIssuersRegistry,\n    OwnableUpgradeable,\n    TIRStorage\n{\n    function init() external initializer {\n        __Ownable_init();\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-addTrustedIssuer}.\n     */\n    function addTrustedIssuer(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external override onlyOwner {\n        require(\n            address(_trustedIssuer) != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            _trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0,\n            \"trusted Issuer already exists\"\n        );\n        require(\n            _claimTopics.length > 0,\n            \"trusted claim topics cannot be empty\"\n        );\n        require(\n            _claimTopics.length <= 15,\n            \"cannot have more than 15 claim topics\"\n        );\n        require(\n            _trustedIssuers.length < 50,\n            \"cannot have more than 50 trusted issuers\"\n        );\n        _trustedIssuers.push(_trustedIssuer);\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\n        }\n        emit TrustedIssuerAdded(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-removeTrustedIssuer}.\n     */\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer)\n        external\n        override\n        onlyOwner\n    {\n        require(\n            address(_trustedIssuer) != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0,\n            \"NOT a trusted issuer\"\n        );\n        uint256 length = _trustedIssuers.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (_trustedIssuers[i] == _trustedIssuer) {\n                _trustedIssuers[i] = _trustedIssuers[length - 1];\n                _trustedIssuers.pop();\n                break;\n            }\n        }\n        for (\n            uint256 claimTopicIndex = 0;\n            claimTopicIndex <\n            _trustedIssuerClaimTopics[address(_trustedIssuer)].length;\n            claimTopicIndex++\n        ) {\n            uint256 claimTopic = _trustedIssuerClaimTopics[\n                address(_trustedIssuer)\n            ][claimTopicIndex];\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic]\n                .length;\n            for (uint256 i = 0; i < topicsLength; i++) {\n                if (\n                    _claimTopicsToTrustedIssuers[claimTopic][i] ==\n                    _trustedIssuer\n                ) {\n                    _claimTopicsToTrustedIssuers[claimTopic][\n                        i\n                    ] = _claimTopicsToTrustedIssuers[claimTopic][\n                        topicsLength - 1\n                    ];\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\n                    break;\n                }\n            }\n        }\n        delete _trustedIssuerClaimTopics[address(_trustedIssuer)];\n        emit TrustedIssuerRemoved(_trustedIssuer);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\n     */\n    function updateIssuerClaimTopics(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external override onlyOwner {\n        require(\n            address(_trustedIssuer) != address(0),\n            \"invalid argument - zero address\"\n        );\n        require(\n            _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0,\n            \"NOT a trusted issuer\"\n        );\n        require(\n            _claimTopics.length <= 15,\n            \"cannot have more than 15 claim topics\"\n        );\n        require(_claimTopics.length > 0, \"claim topics cannot be empty\");\n\n        for (\n            uint256 i = 0;\n            i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length;\n            i++\n        ) {\n            uint256 claimTopic = _trustedIssuerClaimTopics[\n                address(_trustedIssuer)\n            ][i];\n            uint256 topicsLength = _claimTopicsToTrustedIssuers[claimTopic]\n                .length;\n            for (uint256 j = 0; j < topicsLength; j++) {\n                if (\n                    _claimTopicsToTrustedIssuers[claimTopic][j] ==\n                    _trustedIssuer\n                ) {\n                    _claimTopicsToTrustedIssuers[claimTopic][\n                        j\n                    ] = _claimTopicsToTrustedIssuers[claimTopic][\n                        topicsLength - 1\n                    ];\n                    _claimTopicsToTrustedIssuers[claimTopic].pop();\n                    break;\n                }\n            }\n        }\n        _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics;\n        for (uint256 i = 0; i < _claimTopics.length; i++) {\n            _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer);\n        }\n        emit ClaimTopicsUpdated(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuers}.\n     */\n    function getTrustedIssuers()\n        external\n        view\n        override\n        returns (IClaimIssuer[] memory)\n    {\n        return _trustedIssuers;\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\n     */\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic)\n        external\n        view\n        override\n        returns (IClaimIssuer[] memory)\n    {\n        return _claimTopicsToTrustedIssuers[claimTopic];\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-isTrustedIssuer}.\n     */\n    function isTrustedIssuer(address _issuer)\n        external\n        view\n        override\n        returns (bool)\n    {\n        if (_trustedIssuerClaimTopics[_issuer].length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\n     */\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer)\n        external\n        view\n        override\n        returns (uint256[] memory)\n    {\n        require(\n            _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0,\n            \"trusted Issuer doesn't exist\"\n        );\n        return _trustedIssuerClaimTopics[address(_trustedIssuer)];\n    }\n\n    /**\n     *  @dev See {ITrustedIssuersRegistry-hasClaimTopic}.\n     */\n    function hasClaimTopic(address _issuer, uint256 _claimTopic)\n        external\n        view\n        override\n        returns (bool)\n    {\n        uint256 length = _trustedIssuerClaimTopics[_issuer].length;\n        uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer];\n        for (uint256 i = 0; i < length; i++) {\n            if (claimTopics[i] == _claimTopic) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"
			},
			"erc3643/erc3643/registry/storage/TIRStorage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ncontract TIRStorage {\n    // Array containing all TrustedIssuers identity contract address.\n    IClaimIssuer[] internal _trustedIssuers;\n\n    // Mapping between a trusted issuer address and its corresponding claimTopics.\n    mapping(address => uint256[]) internal _trustedIssuerClaimTopics;\n\n    // Mapping between a claim topic and the allowed trusted issuers for it.\n    mapping(uint256 => IClaimIssuer[]) internal _claimTopicsToTrustedIssuers;\n\n    uint256[49] private __gap;\n}\n"
			},
			"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\";\n\ninterface ITrustedIssuersRegistry {\n    event TrustedIssuerAdded(\n        IClaimIssuer indexed trustedIssuer,\n        uint256[] claimTopics\n    );\n\n    event TrustedIssuerRemoved(IClaimIssuer indexed trustedIssuer);\n\n    event ClaimTopicsUpdated(\n        IClaimIssuer indexed trustedIssuer,\n        uint256[] claimTopics\n    );\n\n    function addTrustedIssuer(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    function removeTrustedIssuer(IClaimIssuer _trustedIssuer) external;\n\n    function updateIssuerClaimTopics(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics\n    ) external;\n\n    function getTrustedIssuers() external view returns (IClaimIssuer[] memory);\n\n    function getTrustedIssuersForClaimTopic(uint256 claimTopic)\n        external\n        view\n        returns (IClaimIssuer[] memory);\n\n    function isTrustedIssuer(address _issuer) external view returns (bool);\n\n    function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer)\n        external\n        view\n        returns (uint256[] memory);\n\n    function hasClaimTopic(address _issuer, uint256 _claimTopic)\n        external\n        view\n        returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IIdentity.sol\";\n\ninterface IClaimIssuer is IIdentity {\n\n    /**\n     * @dev Emitted when a claim is revoked.\n     *\n     * Specification: MUST be triggered when revoking a claim.\n     */\n    event ClaimRevoked(bytes indexed signature);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @notice will fetch the claim from the identity contract (unsafe).\n     * @param _claimId the id of the claim\n     * @param _identity the address of the identity contract\n     * @return isRevoked true when the claim is revoked\n     */\n    function revokeClaim(bytes32 _claimId, address _identity) external returns(bool);\n\n    /**\n     * @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n     * @param signature the signature of the claim\n     */\n    function revokeClaimBySignature(bytes calldata signature) external;\n\n    /**\n     * @dev Returns revocation status of a claim.\n     * @param _sig the signature of the claim\n     * @return isRevoked true if the claim is revoked and false otherwise\n     */\n    function isClaimRevoked(bytes calldata _sig) external view returns (bool);\n\n    /**\n     * @dev Checks if a claim is valid.\n     * @param _identity the identity contract related to the claim\n     * @param claimTopic the claim topic of the claim\n     * @param sig the signature of the claim\n     * @param data the data field of the claim\n     * @return claimValid true if the claim is valid, false otherwise\n     */\n    function isClaimValid(\n        IIdentity _identity,\n        uint256 claimTopic,\n        bytes calldata sig,\n        bytes calldata data)\n    external view returns (bool);\n\n    /**\n     * @dev returns the address that signed the given data\n     * @param sig the signature of the data\n     * @param dataHash the data that was signed\n     * returns the address that signed dataHash and created the signature sig\n     */\n    function getRecoveredAddress(bytes calldata sig, bytes32 dataHash) external pure returns (address);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\nimport \"./IERC734.sol\";\nimport \"./IERC735.sol\";\n\n// solhint-disable-next-line no-empty-blocks\ninterface IIdentity is IERC734, IERC735 {}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP.\n */\ninterface IERC735 {\n\n    /**\n     * @dev Emitted when a claim was added.\n     *\n     * Specification: MUST be triggered when a claim was successfully added.\n     */\n    event ClaimAdded(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was removed.\n     *\n     * Specification: MUST be triggered when removeClaim was successfully called.\n     */\n    event ClaimRemoved(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Emitted when a claim was changed.\n     *\n     * Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\n     */\n    event ClaimChanged(\n        bytes32 indexed claimId,\n        uint256 indexed topic,\n        uint256 scheme,\n        address indexed issuer,\n        bytes signature,\n        bytes data,\n        string uri);\n\n    /**\n     * @dev Add or update a claim.\n     *\n     * Triggers Event: `ClaimAdded`, `ClaimChanged`\n     *\n     * Specification: Add or update a claim from an issuer.\n     *\n     * _signature is a signed message of the following structure:\n     * `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\n     */\n    function addClaim(\n        uint256 _topic,\n        uint256 _scheme,\n        address issuer,\n        bytes calldata _signature,\n        bytes calldata _data,\n        string calldata _uri)\n    external returns (bytes32 claimRequestId);\n\n    /**\n     * @dev Removes a claim.\n     *\n     * Triggers Event: `ClaimRemoved`\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function removeClaim(bytes32 _claimId) external returns (bool success);\n\n    /**\n     * @dev Get a claim by its ID.\n     *\n     * Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\n     */\n    function getClaim(bytes32 _claimId)\n    external view returns(\n        uint256 topic,\n        uint256 scheme,\n        address issuer,\n        bytes memory signature,\n        bytes memory data,\n        string memory uri);\n\n    /**\n     * @dev Returns an array of claim IDs by topic.\n     */\n    function getClaimIdsByTopic(uint256 _topic) external view returns(bytes32[] memory claimIds);\n}\n"
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity 0.8.17;\n\n/**\n * @dev interface of the ERC734 (Key Holder) standard as defined in the EIP.\n */\ninterface IERC734 {\n\n    /**\n     * @dev Emitted when an execution request was approved.\n     *\n     * Specification: MUST be triggered when approve was successfully called.\n     */\n    event Approved(uint256 indexed executionId, bool approved);\n\n    /**\n     * @dev Emitted when an execute operation was approved and successfully performed.\n     *\n     * Specification: MUST be triggered when approve was called and the execution was successfully approved.\n     */\n    event Executed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execution request was performed via `execute`.\n     *\n     * Specification: MUST be triggered when execute was successfully called.\n     */\n    event ExecutionRequested(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when an execute operation was called and failed\n     *\n     * Specification: MUST be triggered when execute call failed\n     */\n    event ExecutionFailed(uint256 indexed executionId, address indexed to, uint256 indexed value, bytes data);\n\n    /**\n     * @dev Emitted when a key was added to the Identity.\n     *\n     * Specification: MUST be triggered when addKey was successfully called.\n     */\n    event KeyAdded(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Emitted when a key was removed from the Identity.\n     *\n     * Specification: MUST be triggered when removeKey was successfully called.\n     */\n    event KeyRemoved(bytes32 indexed key, uint256 indexed purpose, uint256 indexed keyType);\n\n    /**\n     * @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n     *\n     * Triggers Event: `KeyAdded`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity\n     * itself. If it's the identity itself, the approval process will determine its approval.\n     */\n    function addKey(bytes32 _key, uint256 _purpose, uint256 _keyType) external returns (bool success);\n\n    /**\n    * @dev Approves an execution.\n    *\n    * Triggers Event: `Approved`\n    * Triggers on execution successful Event: `Executed`\n    * Triggers on execution failure Event: `ExecutionFailed`\n    */\n    function approve(uint256 _id, bool _approve) external returns (bool success);\n\n    /**\n     * @dev Removes _purpose for _key from the identity.\n     *\n     * Triggers Event: `KeyRemoved`\n     *\n     * Specification: MUST only be done by keys of purpose 1, or the identity itself.\n     * If it's the identity itself, the approval process will determine its approval.\n     */\n    function removeKey(bytes32 _key, uint256 _purpose) external returns (bool success);\n\n    /**\n     * @dev Passes an execution instruction to an ERC734 identity.\n     * How the execution is handled is up to the identity implementation:\n     * An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n     * approve this execution.\n     * Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n     *\n     * Triggers Event: ExecutionRequested\n     * Triggers on direct execution Event: Executed\n     */\n    function execute(address _to, uint256 _value, bytes calldata _data) external payable returns (uint256 executionId);\n\n    /**\n     * @dev Returns the full key data, if present in the identity.\n     */\n    function getKey(bytes32 _key) external view returns (uint256[] memory purposes, uint256 keyType, bytes32 key);\n\n    /**\n     * @dev Returns the list of purposes associated with a key.\n     */\n    function getKeyPurposes(bytes32 _key) external view returns(uint256[] memory _purposes);\n\n    /**\n     * @dev Returns an array of public key bytes32 held by this identity.\n     */\n    function getKeysByPurpose(uint256 _purpose) external view returns (bytes32[] memory keys);\n\n    /**\n     * @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\n     */\n    function keyHasPurpose(bytes32 _key, uint256 _purpose) external view returns (bool exists);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"IClaimIssuer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "ClaimRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "dataHash",
									"type": "bytes32"
								}
							],
							"name": "getRecoveredAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_sig",
									"type": "bytes"
								}
							],
							"name": "isClaimRevoked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIdentity",
									"name": "_identity",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "sig",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "isClaimValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_identity",
									"type": "address"
								}
							],
							"name": "revokeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "revokeClaimBySignature",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ClaimRevoked(bytes)": {
								"details": "Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"getRecoveredAddress(bytes,bytes32)": {
								"details": "returns the address that signed the given data",
								"params": {
									"dataHash": "the data that was signed returns the address that signed dataHash and created the signature sig",
									"sig": "the signature of the data"
								}
							},
							"isClaimRevoked(bytes)": {
								"details": "Returns revocation status of a claim.",
								"params": {
									"_sig": "the signature of the claim"
								},
								"returns": {
									"_0": "isRevoked true if the claim is revoked and false otherwise"
								}
							},
							"isClaimValid(address,uint256,bytes,bytes)": {
								"details": "Checks if a claim is valid.",
								"params": {
									"_identity": "the identity contract related to the claim",
									"claimTopic": "the claim topic of the claim",
									"data": "the data field of the claim",
									"sig": "the signature of the claim"
								},
								"returns": {
									"_0": "claimValid true if the claim is valid, false otherwise"
								}
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"revokeClaim(bytes32,address)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"_claimId": "the id of the claim",
									"_identity": "the address of the identity contract"
								},
								"returns": {
									"_0": "isRevoked true when the claim is revoked"
								}
							},
							"revokeClaimBySignature(bytes)": {
								"details": "Revoke a claim previously issued, the claim is no longer considered as valid after revocation.",
								"params": {
									"signature": "the signature of the claim"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"getRecoveredAddress(bytes,bytes32)": "c3b129e3",
							"isClaimRevoked(bytes)": "2646b264",
							"isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5",
							"revokeClaim(bytes32,address)": "73c33708",
							"revokeClaimBySignature(bytes)": "9f7f9edd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"ClaimRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"isClaimRevoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"revokeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revokeClaimBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ClaimRevoked(bytes)\":{\"details\":\"Emitted when a claim is revoked. Specification: MUST be triggered when revoking a claim.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"isClaimRevoked(bytes)\":{\"details\":\"Returns revocation status of a claim.\",\"params\":{\"_sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"isRevoked true if the claim is revoked and false otherwise\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"_0\":\"claimValid true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"revokeClaim(bytes32,address)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"_claimId\":\"the id of the claim\",\"_identity\":\"the address of the identity contract\"},\"returns\":{\"_0\":\"isRevoked true when the claim is revoked\"}},\"revokeClaimBySignature(bytes)\":{\"details\":\"Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\",\"params\":{\"signature\":\"the signature of the claim\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revokeClaim(bytes32,address)\":{\"notice\":\"will fetch the claim from the identity contract (unsafe).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":\"IClaimIssuer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revokeClaim(bytes32,address)": {
								"notice": "will fetch the claim from the identity contract (unsafe)."
							}
						},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"IERC734": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC734 (Key Holder) standard as defined in the EIP.",
						"events": {
							"Approved(uint256,bool)": {
								"details": "Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called."
							},
							"Executed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved."
							},
							"ExecutionFailed(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed"
							},
							"ExecutionRequested(uint256,address,uint256,bytes)": {
								"details": "Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called."
							},
							"KeyAdded(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called."
							},
							"KeyRemoved(bytes32,uint256,uint256)": {
								"details": "Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC734 (Key Holder) standard as defined in the EIP.\",\"events\":{\"Approved(uint256,bool)\":{\"details\":\"Emitted when an execution request was approved. Specification: MUST be triggered when approve was successfully called.\"},\"Executed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was approved and successfully performed. Specification: MUST be triggered when approve was called and the execution was successfully approved.\"},\"ExecutionFailed(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execute operation was called and failed Specification: MUST be triggered when execute call failed\"},\"ExecutionRequested(uint256,address,uint256,bytes)\":{\"details\":\"Emitted when an execution request was performed via `execute`. Specification: MUST be triggered when execute was successfully called.\"},\"KeyAdded(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was added to the Identity. Specification: MUST be triggered when addKey was successfully called.\"},\"KeyRemoved(bytes32,uint256,uint256)\":{\"details\":\"Emitted when a key was removed from the Identity. Specification: MUST be triggered when removeKey was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":\"IERC734\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"IERC735": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "interface of the ERC735 (Claim Holder) standard as defined in the EIP.",
						"events": {
							"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added."
							},
							"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
							},
							"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)": {
								"details": "Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called."
							}
						},
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"removeClaim(bytes32)": "4eee424a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"interface of the ERC735 (Claim Holder) standard as defined in the EIP.\",\"events\":{\"ClaimAdded(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was added. Specification: MUST be triggered when a claim was successfully added.\"},\"ClaimChanged(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was changed. Specification: MUST be triggered when addClaim was successfully called on an existing claimId.\"},\"ClaimRemoved(bytes32,uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Emitted when a claim was removed. Specification: MUST be triggered when removeClaim was successfully called.\"}},\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":\"IERC735\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"IIdentity": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "Approved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "claimId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "ClaimRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionFailed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "ExecutionRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purpose",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								}
							],
							"name": "KeyRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "addClaim",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "claimRequestId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_keyType",
									"type": "uint256"
								}
							],
							"name": "addKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_approve",
									"type": "bool"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "executionId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "getClaim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "topic",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "scheme",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "issuer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_topic",
									"type": "uint256"
								}
							],
							"name": "getClaimIdsByTopic",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "claimIds",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKey",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "purposes",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "keyType",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								}
							],
							"name": "getKeyPurposes",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_purposes",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "getKeysByPurpose",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "keys",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "keyHasPurpose",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_claimId",
									"type": "bytes32"
								}
							],
							"name": "removeClaim",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_key",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_purpose",
									"type": "uint256"
								}
							],
							"name": "removeKey",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": {
								"details": "Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
							},
							"addKey(bytes32,uint256,uint256)": {
								"details": "Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							},
							"approve(uint256,bool)": {
								"details": "Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`"
							},
							"execute(address,uint256,bytes)": {
								"details": "Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed"
							},
							"getClaim(bytes32)": {
								"details": "Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"getClaimIdsByTopic(uint256)": {
								"details": "Returns an array of claim IDs by topic."
							},
							"getKey(bytes32)": {
								"details": "Returns the full key data, if present in the identity."
							},
							"getKeyPurposes(bytes32)": {
								"details": "Returns the list of purposes associated with a key."
							},
							"getKeysByPurpose(uint256)": {
								"details": "Returns an array of public key bytes32 held by this identity."
							},
							"keyHasPurpose(bytes32,uint256)": {
								"details": "Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
							},
							"removeClaim(bytes32)": {
								"details": "Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
							},
							"removeKey(bytes32,uint256)": {
								"details": "Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
							"addKey(bytes32,uint256,uint256)": "1d381240",
							"approve(uint256,bool)": "747442d3",
							"execute(address,uint256,bytes)": "b61d27f6",
							"getClaim(bytes32)": "c9100bcb",
							"getClaimIdsByTopic(uint256)": "80e9e9e1",
							"getKey(bytes32)": "12aaac70",
							"getKeyPurposes(bytes32)": "fb307b34",
							"getKeysByPurpose(uint256)": "9010f726",
							"keyHasPurpose(bytes32,uint256)": "d202158d",
							"removeClaim(bytes32)": "4eee424a",
							"removeKey(bytes32,uint256)": "53d413c5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_keyType\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"Add or update a claim. Triggers Event: `ClaimAdded`, `ClaimChanged` Specification: Add or update a claim from an issuer. _signature is a signed message of the following structure: `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`. Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`.\"},\"addKey(bytes32,uint256,uint256)\":{\"details\":\"Adds a _key to the identity. The _purpose specifies the purpose of the key. Triggers Event: `KeyAdded` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"details\":\"Approves an execution. Triggers Event: `Approved` Triggers on execution successful Event: `Executed` Triggers on execution failure Event: `ExecutionFailed`\"},\"execute(address,uint256,bytes)\":{\"details\":\"Passes an execution instruction to an ERC734 identity. How the execution is handled is up to the identity implementation: An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to approve this execution. Execute COULD be used as the only accessor for `addKey` and `removeKey`. Triggers Event: ExecutionRequested Triggers on direct execution Event: Executed\"},\"getClaim(bytes32)\":{\"details\":\"Get a claim by its ID. Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"getClaimIdsByTopic(uint256)\":{\"details\":\"Returns an array of claim IDs by topic.\"},\"getKey(bytes32)\":{\"details\":\"Returns the full key data, if present in the identity.\"},\"getKeyPurposes(bytes32)\":{\"details\":\"Returns the list of purposes associated with a key.\"},\"getKeysByPurpose(uint256)\":{\"details\":\"Returns an array of public key bytes32 held by this identity.\"},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE.\"},\"removeClaim(bytes32)\":{\"details\":\"Removes a claim. Triggers Event: `ClaimRemoved` Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`.\"},\"removeKey(bytes32,uint256)\":{\"details\":\"Removes _purpose for _key from the identity. Triggers Event: `KeyRemoved` Specification: MUST only be done by keys of purpose 1, or the identity itself. If it's the identity itself, the approval process will determine its approval.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":\"IIdentity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 454,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH7 0xD23DC12FF1CC7F 0xAC PUSH29 0x3C8BF24C440E1B67CC8D2043A0ABC016CA335310FC64736F6C63430008 GT STOP CALLER ",
							"sourceMap": "194:9180:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202266d23dc12ff1cc7fac7c3c8bf24c440e1b67cc8d2043a0abc016ca335310fc64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol",
								"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/erc3643/registry/storage/TIRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol": {
				"TrustedIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTrustedIssuer(address,uint256[])": {
								"details": "See {ITrustedIssuersRegistry-addTrustedIssuer}."
							},
							"getTrustedIssuerClaimTopics(address)": {
								"details": "See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}."
							},
							"getTrustedIssuers()": {
								"details": "See {ITrustedIssuersRegistry-getTrustedIssuers}."
							},
							"getTrustedIssuersForClaimTopic(uint256)": {
								"details": "See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}."
							},
							"hasClaimTopic(address,uint256)": {
								"details": "See {ITrustedIssuersRegistry-hasClaimTopic}."
							},
							"isTrustedIssuer(address)": {
								"details": "See {ITrustedIssuersRegistry-isTrustedIssuer}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeTrustedIssuer(address)": {
								"details": "See {ITrustedIssuersRegistry-removeTrustedIssuer}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateIssuerClaimTopics(address,uint256[])": {
								"details": "See {ITrustedIssuersRegistry-updateIssuerClaimTopics}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":294:7335  contract TrustedIssuersRegistry is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":294:7335  contract TrustedIssuersRegistry is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb93d28eb\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xb93d28eb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc28fb278\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd9dd24c5\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xe1c7392a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xef2ed1a4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x04bc7e84\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x34a89987\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x52c111d1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9f63ea98\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3636:5452  function updateIssuerClaimTopics(... */\n    tag_3:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6877:7333  function hasClaimTopic(address _issuer, uint256 _claimTopic)... */\n    tag_4:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":1451:1465   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1444:1466   */\n      iszero\n        /* \"#utility.yul\":1426:1467   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1414:1416   */\n      0x20\n        /* \"#utility.yul\":1399:1417   */\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6877:7333  function hasClaimTopic(address _issuer, uint256 _claimTopic)... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5792:6007  function getTrustedIssuersForClaimTopic(uint256 claimTopic)... */\n    tag_5:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_16\n      tag_33\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x33)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2491:2542   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2479:2481   */\n      0x20\n        /* \"#utility.yul\":2464:2482   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":2345:2548   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":556:1667  function addTrustedIssuer(... */\n    tag_8:\n      tag_16\n      tag_39\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1753:3546  function removeTrustedIssuer(IClaimIssuer _trustedIssuer)... */\n    tag_9:\n      tag_16\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6424:6797  function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer)... */\n    tag_10:\n      tag_45\n      tag_46\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5536:5695  function getTrustedIssuers()... */\n    tag_11:\n      tag_26\n      tag_51\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":403:473  function init() external initializer {... */\n    tag_12:\n      tag_16\n      tag_54\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6089:6330  function isTrustedIssuer(address _issuer)... */\n    tag_13:\n      tag_20\n      tag_56\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_16\n      tag_61\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3636:5452  function updateIssuerClaimTopics(... */\n    tag_19:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3812:3849  address(_trustedIssuer) != address(0) */\n      dup4\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3791:3906  require(... */\n      tag_67\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3937:3987  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3937:3962  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3937:3987  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3937:3994  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3937:3999  _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0 */\n      swap1\n      sub\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3916:4045  require(... */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4303:4305   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3916:4045  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4285:4306   */\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x14\n        /* \"#utility.yul\":4322:4340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4315:4345   */\n      mstore\n      shl(0x61, 0x2727aa1030903a393ab9ba32b21034b9b9bab2b9)\n        /* \"#utility.yul\":4361:4379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4354:4404   */\n      mstore\n        /* \"#utility.yul\":4421:4439   */\n      0x64\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3916:4045  require(... */\n      tag_68\n        /* \"#utility.yul\":4101:4445   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3916:4045  require(... */\n    tag_70:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4099:4101  15 */\n      0x0f\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4076:4101  _claimTopics.length <= 15 */\n      dup2\n      gt\n      iszero\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4055:4164  require(... */\n      tag_73\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_75\n      jump\t// in\n    tag_73:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4182:4205  _claimTopics.length > 0 */\n      dup1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4174:4238  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5058:5060   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4174:4238  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5040:5061   */\n      mstore\n        /* \"#utility.yul\":5097:5099   */\n      0x1c\n        /* \"#utility.yul\":5077:5095   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5070:5100   */\n      mstore\n        /* \"#utility.yul\":5136:5166   */\n      0x636c61696d20746f706963732063616e6e6f7420626520656d70747900000000\n        /* \"#utility.yul\":5116:5134   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5109:5167   */\n      mstore\n        /* \"#utility.yul\":5184:5202   */\n      0x64\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4174:4238  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n      tag_68\n        /* \"#utility.yul\":4856:5208   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4174:4238  require(_claimTopics.length > 0, \"claim topics cannot be empty\") */\n    tag_76:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4267:4276  uint256 i */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4249:5158  for (... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4298:4348  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4298:4323  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4298:4348  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4298:4355  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4294:4355  i < _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      dup2\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4249:5158  for (... */\n      iszero\n      tag_80\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4418:4498  _trustedIssuerClaimTopics[... */\n      dup5\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4397:4415  uint256 claimTopic */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4418:4498  _trustedIssuerClaimTopics[... */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4418:4443  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4418:4498  _trustedIssuerClaimTopics[... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4418:4501  _trustedIssuerClaimTopics[... */\n      dup1\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4499:4500  i */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4418:4501  _trustedIssuerClaimTopics[... */\n      dup2\n      lt\n      tag_83\n      jumpi\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4538:4578  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup1\n      dup4\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4538:4566  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4538:4578  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4538:4602  _claimTopicsToTrustedIssuers[claimTopic]... */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4418:4501  _trustedIssuerClaimTopics[... */\n      swap1\n      swap3\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4538:4602  _claimTopicsToTrustedIssuers[claimTopic]... */\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4616:5148  for (uint256 j = 0; j < topicsLength; j++) {... */\n    tag_86:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4640:4652  topicsLength */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4636:4637  j */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4636:4652  j < topicsLength */\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4616:5148  for (uint256 j = 0; j < topicsLength; j++) {... */\n      iszero\n      tag_87\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4742  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4730  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4742  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4745  _claimTopicsToTrustedIssuers[claimTopic][j] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4783  _claimTopicsToTrustedIssuers[claimTopic][j] ==... */\n      dup10\n      and\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4742  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4743:4744  j */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4745  _claimTopicsToTrustedIssuers[claimTopic][j] */\n      dup2\n      lt\n      tag_90\n      jumpi\n      tag_90\n      tag_84\n      jump\t// in\n    tag_90:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4702:4783  _claimTopicsToTrustedIssuers[claimTopic][j] ==... */\n      sub\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4677:5134  if (... */\n      tag_92\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4916:4956  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4916:4944  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4916:4956  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4982:4998  topicsLength - 1 */\n      tag_93\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4997:4998  1 */\n      0x01\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4982:4994  topicsLength */\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4982:4998  topicsLength - 1 */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4916:5020  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_84\n      jump\t// in\n    tag_96:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4824:4864  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup6\n      dup4\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4824:4852  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4824:4864  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4824:4913  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4916:5020  _claimTopicsToTrustedIssuers[claimTopic][... */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4890:4891  j */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4824:4913  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup2\n      lt\n      tag_99\n      jumpi\n      tag_99\n      tag_84\n      jump\t// in\n    tag_99:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4824:5020  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5042:5082  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup5\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5042:5070  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5042:5082  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5042:5088  _claimTopicsToTrustedIssuers[claimTopic].pop() */\n      dup1\n      sload\n      dup1\n      tag_102\n      jumpi\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5110:5115  break */\n      jump(tag_87)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4677:5134  if (... */\n    tag_92:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4654:4657  j++ */\n      dup1\n      tag_105\n      dup2\n      tag_106\n      jump\t// in\n    tag_105:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4616:5148  for (uint256 j = 0; j < topicsLength; j++) {... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4383:5158  {... */\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4369:4372  i++ */\n      dup1\n      dup1\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":4249:5158  for (... */\n      jump(tag_79)\n    tag_80:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5167:5217  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5167:5192  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5167:5217  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5167:5232  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_108\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5220:5232  _claimTopics */\n      dup4\n      dup4\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5167:5232  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_109\n      jump\t// in\n    tag_108:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5247:5256  uint256 i */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5242:5383  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n    tag_110:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5262:5285  i < _claimTopics.length */\n      dup2\n      dup2\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5242:5383  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      iszero\n      tag_111\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5306:5334  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5306:5351  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5335:5347  _claimTopics */\n      dup5\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5348:5349  i */\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5335:5350  _claimTopics[i] */\n      dup2\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_114\n      tag_84\n      jump\t// in\n    tag_114:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5306:5351  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5306:5372  _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5287:5290  i++ */\n      dup1\n      tag_116\n      dup2\n      tag_106\n      jump\t// in\n    tag_116:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5242:5383  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      jump(tag_110)\n    tag_111:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5416:5430  _trustedIssuer */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5397:5445  ClaimTopicsUpdated(_trustedIssuer, _claimTopics) */\n      and\n      0xec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5432:5444  _claimTopics */\n      dup4\n      dup4\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5397:5445  ClaimTopicsUpdated(_trustedIssuer, _claimTopics) */\n      mload(0x40)\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3636:5452  function updateIssuerClaimTopics(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6877:7333  function hasClaimTopic(address _issuer, uint256 _claimTopic)... */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7073  _trustedIssuerClaimTopics[_issuer] */\n      dup3\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7002:7006  bool */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7073  _trustedIssuerClaimTopics[_issuer] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7064  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7073  _trustedIssuerClaimTopics[_issuer] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7080  _trustedIssuerClaimTopics[_issuer].length */\n      dup1\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7090:7155  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7080  _trustedIssuerClaimTopics[_issuer].length */\n      swap3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7002:7006  bool */\n      dup5\n      swap3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7090:7155  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7073  _trustedIssuerClaimTopics[_issuer] */\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7080  _trustedIssuerClaimTopics[_issuer].length */\n      dup5\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7090:7155  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      dup4\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7073  _trustedIssuerClaimTopics[_issuer] */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7039:7080  _trustedIssuerClaimTopics[_issuer].length */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7090:7155  uint256[] memory claimTopics = _trustedIssuerClaimTopics[_issuer] */\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7170:7179  uint256 i */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7165:7305  for (uint256 i = 0; i < length; i++) {... */\n    tag_122:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7189:7195  length */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7185:7186  i */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7185:7195  i < length */\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7165:7305  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7238:7249  _claimTopic */\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7220:7231  claimTopics */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7232:7233  i */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7220:7234  claimTopics[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_126\n      jumpi\n      tag_126\n      tag_84\n      jump\t// in\n    tag_126:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7220:7249  claimTopics[i] == _claimTopic */\n      sub\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7216:7295  if (claimTopics[i] == _claimTopic) {... */\n      tag_127\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7276:7280  true */\n      0x01\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7269:7280  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_119)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7216:7295  if (claimTopics[i] == _claimTopic) {... */\n    tag_127:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7197:7200  i++ */\n      dup1\n      tag_128\n      dup2\n      tag_106\n      jump\t// in\n    tag_128:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7165:7305  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_122)\n    tag_123:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7321:7326  false */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":7314:7326  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6877:7333  function hasClaimTopic(address _issuer, uint256 _claimTopic)... */\n    tag_119:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5792:6007  function getTrustedIssuersForClaimTopic(uint256 claimTopic)... */\n    tag_29:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5960:6000  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5960:5988  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5960:6000  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5953:6000  return _claimTopicsToTrustedIssuers[claimTopic] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5916:5937  IClaimIssuer[] memory */\n      0x60\n      swap4\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5953:6000  return _claimTopicsToTrustedIssuers[claimTopic] */\n      swap3\n      dup4\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5960:6000  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5953:6000  return _claimTopicsToTrustedIssuers[claimTopic] */\n      dup3\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5792:6007  function getTrustedIssuersForClaimTopic(uint256 claimTopic)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2155:2156  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2146  _transferOwnership */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2128:2158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2064:2165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":556:1667  function addTrustedIssuer(... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":725:762  address(_trustedIssuer) != address(0) */\n      dup4\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":704:819  require(... */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":850:900  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":850:875  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":850:900  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":850:907  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":850:912  _trustedIssuerClaimTopics[address(_trustedIssuer)].length == 0 */\n      iszero\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":829:967  require(... */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6532:6534   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":829:967  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6514:6535   */\n      mstore\n        /* \"#utility.yul\":6571:6573   */\n      0x1d\n        /* \"#utility.yul\":6551:6569   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6544:6574   */\n      mstore\n        /* \"#utility.yul\":6610:6641   */\n      0x747275737465642049737375657220616c726561647920657869737473000000\n        /* \"#utility.yul\":6590:6608   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6583:6642   */\n      mstore\n        /* \"#utility.yul\":6659:6677   */\n      0x64\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":829:967  require(... */\n      tag_68\n        /* \"#utility.yul\":6330:6683   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":829:967  require(... */\n    tag_143:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":998:1021  _claimTopics.length > 0 */\n      dup1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":977:1083  require(... */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6890:6892   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":977:1083  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6872:6893   */\n      mstore\n        /* \"#utility.yul\":6929:6931   */\n      0x24\n        /* \"#utility.yul\":6909:6927   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6902:6932   */\n      mstore\n        /* \"#utility.yul\":6968:7002   */\n      0x7472757374656420636c61696d20746f706963732063616e6e6f742062652065\n        /* \"#utility.yul\":6948:6966   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6941:7003   */\n      mstore\n      shl(0xe0, 0x6d707479)\n        /* \"#utility.yul\":7019:7037   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7012:7046   */\n      mstore\n        /* \"#utility.yul\":7063:7082   */\n      0x84\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":977:1083  require(... */\n      tag_68\n        /* \"#utility.yul\":6688:7088   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":977:1083  require(... */\n    tag_146:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1137:1139  15 */\n      0x0f\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1114:1139  _claimTopics.length <= 15 */\n      dup2\n      gt\n      iszero\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1093:1202  require(... */\n      tag_149\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_75\n      jump\t// in\n    tag_149:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1233:1248  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1233:1255  _trustedIssuers.length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1258:1260  50 */\n      0x32\n      gt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1212:1326  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7295:7297   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1212:1326  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7277:7298   */\n      mstore\n        /* \"#utility.yul\":7334:7336   */\n      0x28\n        /* \"#utility.yul\":7314:7332   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7307:7337   */\n      mstore\n        /* \"#utility.yul\":7373:7407   */\n      0x63616e6e6f742068617665206d6f7265207468616e2035302074727573746564\n        /* \"#utility.yul\":7353:7371   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7346:7408   */\n      mstore\n      shl(0xc0, 0x2069737375657273)\n        /* \"#utility.yul\":7424:7442   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7417:7455   */\n      mstore\n        /* \"#utility.yul\":7472:7491   */\n      0x84\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1212:1326  require(... */\n      tag_68\n        /* \"#utility.yul\":7093:7497   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1212:1326  require(... */\n    tag_151:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1336:1351  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1336:1372  _trustedIssuers.push(_trustedIssuer) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      swap1\n      swap2\n      sstore\n      0x8ff97419363ffd7000167f130ef7168fbea05faf9251824ca5043f113cc6a7c7\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1382:1432  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1382:1407  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1336:1372  _trustedIssuers.push(_trustedIssuer) */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1382:1432  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1382:1447  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_155\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1435:1447  _claimTopics */\n      dup4\n      dup4\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1382:1447  _trustedIssuerClaimTopics[address(_trustedIssuer)] = _claimTopics */\n      tag_109\n      jump\t// in\n    tag_155:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1462:1471  uint256 i */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1457:1598  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n    tag_156:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1477:1500  i < _claimTopics.length */\n      dup2\n      dup2\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1457:1598  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1521:1549  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1521:1566  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1550:1562  _claimTopics */\n      dup5\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1563:1564  i */\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1550:1565  _claimTopics[i] */\n      dup2\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_84\n      jump\t// in\n    tag_160:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1521:1566  _claimTopicsToTrustedIssuers[_claimTopics[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1521:1587  _claimTopicsToTrustedIssuers[_claimTopics[i]].push(_trustedIssuer) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1502:1505  i++ */\n      dup1\n      tag_162\n      dup2\n      tag_106\n      jump\t// in\n    tag_162:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1457:1598  for (uint256 i = 0; i < _claimTopics.length; i++) {... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1631:1645  _trustedIssuer */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1612:1660  TrustedIssuerAdded(_trustedIssuer, _claimTopics) */\n      and\n      0xfedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1647:1659  _claimTopics */\n      dup4\n      dup4\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1612:1660  TrustedIssuerAdded(_trustedIssuer, _claimTopics) */\n      mload(0x40)\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1753:3546  function removeTrustedIssuer(IClaimIssuer _trustedIssuer)... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1898:1935  address(_trustedIssuer) != address(0) */\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1877:1992  require(... */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2023:2073  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2023:2048  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2023:2073  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2023:2080  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2023:2085  _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0 */\n      swap1\n      sub\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2002:2131  require(... */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4303:4305   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2002:2131  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4285:4306   */\n      mstore\n        /* \"#utility.yul\":4342:4344   */\n      0x14\n        /* \"#utility.yul\":4322:4340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4315:4345   */\n      mstore\n      shl(0x61, 0x2727aa1030903a393ab9ba32b21034b9b9bab2b9)\n        /* \"#utility.yul\":4361:4379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4354:4404   */\n      mstore\n        /* \"#utility.yul\":4421:4439   */\n      0x64\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2002:2131  require(... */\n      tag_68\n        /* \"#utility.yul\":4101:4445   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2002:2131  require(... */\n    tag_169:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2158:2173  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2158:2180  _trustedIssuers.length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2141:2155  uint256 length */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2190:2436  for (uint256 i = 0; i < length; i++) {... */\n    tag_171:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2214:2220  length */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2210:2211  i */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2210:2220  i < length */\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2190:2436  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2267:2281  _trustedIssuer */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2245:2281  _trustedIssuers[i] == _trustedIssuer */\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2245:2260  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2261:2262  i */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2245:2263  _trustedIssuers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_84\n      jump\t// in\n    tag_175:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2245:2281  _trustedIssuers[i] == _trustedIssuer */\n      sub\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2241:2426  if (_trustedIssuers[i] == _trustedIssuer) {... */\n      tag_177\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2322:2337  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2338:2348  length - 1 */\n      tag_178\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2347:2348  1 */\n      0x01\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2338:2344  length */\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2338:2348  length - 1 */\n      tag_94\n      jump\t// in\n    tag_178:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2322:2349  _trustedIssuers[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_180\n      jumpi\n      tag_180\n      tag_84\n      jump\t// in\n    tag_180:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2301:2316  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2301:2319  _trustedIssuers[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2322:2349  _trustedIssuers[length - 1] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2317:2318  i */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2301:2319  _trustedIssuers[i] */\n      dup2\n      lt\n      tag_183\n      jumpi\n      tag_183\n      tag_84\n      jump\t// in\n    tag_183:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2301:2349  _trustedIssuers[i] = _trustedIssuers[length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2367:2382  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2367:2388  _trustedIssuers.pop() */\n      dup1\n      sload\n      dup1\n      tag_186\n      jumpi\n      tag_186\n      tag_103\n      jump\t// in\n    tag_186:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2406:2411  break */\n      jump(tag_172)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2241:2426  if (_trustedIssuers[i] == _trustedIssuer) {... */\n    tag_177:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2222:2225  i++ */\n      dup1\n      tag_188\n      dup2\n      tag_106\n      jump\t// in\n    tag_188:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2190:2436  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_171)\n    tag_172:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2463:2486  uint256 claimTopicIndex */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2445:3422  for (... */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2534:2584  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2534:2559  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2534:2584  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2534:2591  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2504:2591  claimTopicIndex <... */\n      dup2\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2445:3422  for (... */\n      iszero\n      tag_190\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2668:2748  _trustedIssuerClaimTopics[... */\n      dup4\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2647:2665  uint256 claimTopic */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2668:2748  _trustedIssuerClaimTopics[... */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2668:2693  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2668:2748  _trustedIssuerClaimTopics[... */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2668:2765  _trustedIssuerClaimTopics[... */\n      dup1\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2749:2764  claimTopicIndex */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2668:2765  _trustedIssuerClaimTopics[... */\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_84\n      jump\t// in\n    tag_193:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2802:2842  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup1\n      dup4\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2802:2830  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2802:2842  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2802:2866  _claimTopicsToTrustedIssuers[claimTopic]... */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2668:2765  _trustedIssuerClaimTopics[... */\n      swap1\n      swap3\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2802:2866  _claimTopicsToTrustedIssuers[claimTopic]... */\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2880:3412  for (uint256 i = 0; i < topicsLength; i++) {... */\n    tag_195:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2904:2916  topicsLength */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2900:2901  i */\n      dup2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2900:2916  i < topicsLength */\n      lt\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2880:3412  for (uint256 i = 0; i < topicsLength; i++) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:3006  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:2994  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:3006  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:3009  _claimTopicsToTrustedIssuers[claimTopic][i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:3047  _claimTopicsToTrustedIssuers[claimTopic][i] ==... */\n      dup9\n      and\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:3006  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3007:3008  i */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:3009  _claimTopicsToTrustedIssuers[claimTopic][i] */\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_84\n      jump\t// in\n    tag_199:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2966:3047  _claimTopicsToTrustedIssuers[claimTopic][i] ==... */\n      sub\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2941:3398  if (... */\n      tag_201\n      jumpi\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3180:3220  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3180:3208  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3180:3220  _claimTopicsToTrustedIssuers[claimTopic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3246:3262  topicsLength - 1 */\n      tag_202\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3261:3262  1 */\n      0x01\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3246:3258  topicsLength */\n      dup5\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3246:3262  topicsLength - 1 */\n      tag_94\n      jump\t// in\n    tag_202:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3180:3284  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup2\n      sload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_204\n      tag_84\n      jump\t// in\n    tag_204:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3088:3128  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup6\n      dup4\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3088:3116  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3088:3128  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3088:3177  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3180:3284  _claimTopicsToTrustedIssuers[claimTopic][... */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3154:3155  i */\n      dup4\n      swap1\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3088:3177  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup2\n      lt\n      tag_207\n      jumpi\n      tag_207\n      tag_84\n      jump\t// in\n    tag_207:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap2\n      swap1\n      swap2\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3088:3284  _claimTopicsToTrustedIssuers[claimTopic][... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3306:3346  _claimTopicsToTrustedIssuers[claimTopic] */\n      dup5\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3306:3334  _claimTopicsToTrustedIssuers */\n      0x67\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3306:3346  _claimTopicsToTrustedIssuers[claimTopic] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3306:3352  _claimTopicsToTrustedIssuers[claimTopic].pop() */\n      dup1\n      sload\n      dup1\n      tag_210\n      jumpi\n      tag_210\n      tag_103\n      jump\t// in\n    tag_210:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      swap1\n      keccak256\n      dup2\n      add\n      not(0x00)\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      add\n      swap1\n      sstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3374:3379  break */\n      jump(tag_196)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2941:3398  if (... */\n    tag_201:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2918:2921  i++ */\n      dup1\n      tag_212\n      dup2\n      tag_106\n      jump\t// in\n    tag_212:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2880:3412  for (uint256 i = 0; i < topicsLength; i++) {... */\n      jump(tag_195)\n    tag_196:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2633:3422  {... */\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2605:2622  claimTopicIndex++ */\n      dup1\n      dup1\n      tag_213\n      swap1\n      tag_106\n      jump\t// in\n    tag_213:\n      swap2\n      pop\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":2445:3422  for (... */\n      jump(tag_189)\n    tag_190:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3438:3488  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3438:3463  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3438:3488  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3431:3488  delete _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      tag_214\n      swap2\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":3503:3539  TrustedIssuerRemoved(_trustedIssuer) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0x2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1867:3546  {... */\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":1753:3546  function removeTrustedIssuer(IClaimIssuer _trustedIssuer)... */\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6424:6797  function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer)... */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6607:6657  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6607:6632  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6607:6657  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6607:6664  _trustedIssuerClaimTopics[address(_trustedIssuer)].length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6554:6570  uint256[] memory */\n      0x60\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6607:6669  _trustedIssuerClaimTopics[address(_trustedIssuer)].length != 0 */\n      sub\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6586:6723  require(... */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7704:7706   */\n      0x20\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6586:6723  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7686:7707   */\n      mstore\n        /* \"#utility.yul\":7743:7745   */\n      0x1c\n        /* \"#utility.yul\":7723:7741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7716:7746   */\n      mstore\n        /* \"#utility.yul\":7782:7812   */\n      0x747275737465642049737375657220646f65736e277420657869737400000000\n        /* \"#utility.yul\":7762:7780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7755:7813   */\n      mstore\n        /* \"#utility.yul\":7830:7848   */\n      0x64\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6586:6723  require(... */\n      tag_68\n        /* \"#utility.yul\":7502:7854   */\n      jump\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6586:6723  require(... */\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6740:6790  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6740:6765  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6740:6790  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6733:6790  return _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6740:6790  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      swap1\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6733:6790  return _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup4\n      add\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6740:6790  _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6733:6790  return _trustedIssuerClaimTopics[address(_trustedIssuer)] */\n      dup3\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_221:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_221\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6424:6797  function getTrustedIssuerClaimTopics(IClaimIssuer _trustedIssuer)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5536:5695  function getTrustedIssuers()... */\n    tag_51:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5629:5650  IClaimIssuer[] memory */\n      0x60\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5673:5688  _trustedIssuers */\n      0x65\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5666:5688  return _trustedIssuers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_223\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_224:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_224\n      jumpi\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":5536:5695  function getTrustedIssuers()... */\n      swap1\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":403:473  function init() external initializer {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8061:8063   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8043:8064   */\n      mstore\n        /* \"#utility.yul\":8100:8102   */\n      0x2e\n        /* \"#utility.yul\":8080:8098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8073:8103   */\n      mstore\n        /* \"#utility.yul\":8139:8173   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":8119:8137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8112:8174   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":8190:8208   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8183:8227   */\n      mstore\n        /* \"#utility.yul\":8244:8263   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_68\n        /* \"#utility.yul\":7859:8269   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_234:\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":450:466  __Ownable_init() */\n      tag_236\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":450:464  __Ownable_init */\n      tag_237\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":450:466  __Ownable_init() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3651:3665  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      iszero\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8426:8462   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":8414:8416   */\n      0x20\n        /* \"#utility.yul\":8399:8417   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":403:473  function init() external initializer {... */\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6089:6330  function isTrustedIssuer(address _issuer)... */\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6219:6253  _trustedIssuerClaimTopics[_issuer] */\n      dup2\n      and\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6195:6199  bool */\n      0x00\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6219:6253  _trustedIssuerClaimTopics[_issuer] */\n      swap1\n      dup2\n      mstore\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6219:6244  _trustedIssuerClaimTopics */\n      0x66\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6219:6253  _trustedIssuerClaimTopics[_issuer] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6219:6260  _trustedIssuerClaimTopics[_issuer].length */\n      sload\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6219:6264  _trustedIssuerClaimTopics[_issuer].length > 0 */\n      iszero\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6215:6302  if (_trustedIssuerClaimTopics[_issuer].length > 0) {... */\n      tag_242\n      jumpi\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6287:6291  true */\n      0x01\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6089:6330  function isTrustedIssuer(address _issuer)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6215:6302  if (_trustedIssuerClaimTopics[_issuer].length > 0) {... */\n    tag_242:\n      pop\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6318:6323  false */\n      0x00\n      swap2\n        /* \"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":6089:6330  function isTrustedIssuer(address _issuer)... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2314:2512  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2402:2424  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8675:8677   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8657:8678   */\n      mstore\n        /* \"#utility.yul\":8714:8716   */\n      0x26\n        /* \"#utility.yul\":8694:8712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8687:8717   */\n      mstore\n        /* \"#utility.yul\":8753:8787   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8733:8751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8726:8788   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8804:8822   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8797:8833   */\n      mstore\n        /* \"#utility.yul\":8850:8869   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_68\n        /* \"#utility.yul\":8473:8875   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2394:2467  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2496:2504  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2495  _transferOwnership */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2477:2505  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9082:9084   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9064:9085   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9101:9119   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9094:9124   */\n      mstore\n        /* \"#utility.yul\":9160:9194   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9140:9158   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9133:9195   */\n      mstore\n        /* \"#utility.yul\":9212:9230   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_68\n        /* \"#utility.yul\":8880:9236   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2774:2791  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2758:2764  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2739:2755  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2806:2846  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2729:2853  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2666:2853  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_262\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_262\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_135\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_109:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_275\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_274:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_275\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_274)\n    tag_275:\n      pop\n      tag_276\n      swap3\n      swap2\n      pop\n      tag_277\n      jump\t// in\n    tag_276:\n      pop\n      swap1\n      jump\t// out\n    tag_215:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n    tag_277:\n    tag_280:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_280)\n        /* \"#utility.yul\":14:159   */\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":103:134   */\n      dup2\n      and\n        /* \"#utility.yul\":93:135   */\n      dup2\n      eq\n        /* \"#utility.yul\":83:153   */\n      tag_238\n      jumpi\n        /* \"#utility.yul\":149:150   */\n      0x00\n        /* \"#utility.yul\":146:147   */\n      dup1\n        /* \"#utility.yul\":139:151   */\n      revert\n        /* \"#utility.yul\":164:947   */\n    tag_18:\n        /* \"#utility.yul\":278:284   */\n      0x00\n        /* \"#utility.yul\":286:292   */\n      dup1\n        /* \"#utility.yul\":294:300   */\n      0x00\n        /* \"#utility.yul\":347:349   */\n      0x40\n        /* \"#utility.yul\":335:344   */\n      dup5\n        /* \"#utility.yul\":326:333   */\n      dup7\n        /* \"#utility.yul\":322:345   */\n      sub\n        /* \"#utility.yul\":318:350   */\n      slt\n        /* \"#utility.yul\":315:367   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":363:364   */\n      0x00\n        /* \"#utility.yul\":360:361   */\n      dup1\n        /* \"#utility.yul\":353:365   */\n      revert\n        /* \"#utility.yul\":315:367   */\n    tag_288:\n        /* \"#utility.yul\":402:411   */\n      dup4\n        /* \"#utility.yul\":389:412   */\n      calldataload\n        /* \"#utility.yul\":421:466   */\n      tag_289\n        /* \"#utility.yul\":460:465   */\n      dup2\n        /* \"#utility.yul\":421:466   */\n      tag_282\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":485:490   */\n      swap3\n      pop\n        /* \"#utility.yul\":541:543   */\n      0x20\n        /* \"#utility.yul\":526:544   */\n      dup5\n      add\n        /* \"#utility.yul\":513:545   */\n      calldataload\n        /* \"#utility.yul\":564:582   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":594:608   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":591:625   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":621:622   */\n      0x00\n        /* \"#utility.yul\":618:619   */\n      dup1\n        /* \"#utility.yul\":611:623   */\n      revert\n        /* \"#utility.yul\":591:625   */\n    tag_290:\n        /* \"#utility.yul\":659:665   */\n      dup2\n        /* \"#utility.yul\":648:657   */\n      dup7\n        /* \"#utility.yul\":644:666   */\n      add\n        /* \"#utility.yul\":634:666   */\n      swap2\n      pop\n        /* \"#utility.yul\":704:711   */\n      dup7\n        /* \"#utility.yul\":697:701   */\n      0x1f\n        /* \"#utility.yul\":693:695   */\n      dup4\n        /* \"#utility.yul\":689:702   */\n      add\n        /* \"#utility.yul\":685:712   */\n      slt\n        /* \"#utility.yul\":675:730   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":726:727   */\n      0x00\n        /* \"#utility.yul\":723:724   */\n      dup1\n        /* \"#utility.yul\":716:728   */\n      revert\n        /* \"#utility.yul\":675:730   */\n    tag_291:\n        /* \"#utility.yul\":766:768   */\n      dup2\n        /* \"#utility.yul\":753:769   */\n      calldataload\n        /* \"#utility.yul\":792:794   */\n      dup2\n        /* \"#utility.yul\":784:790   */\n      dup2\n        /* \"#utility.yul\":781:795   */\n      gt\n        /* \"#utility.yul\":778:812   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":808:809   */\n      0x00\n        /* \"#utility.yul\":805:806   */\n      dup1\n        /* \"#utility.yul\":798:810   */\n      revert\n        /* \"#utility.yul\":778:812   */\n    tag_292:\n        /* \"#utility.yul\":861:868   */\n      dup8\n        /* \"#utility.yul\":856:858   */\n      0x20\n        /* \"#utility.yul\":846:852   */\n      dup3\n        /* \"#utility.yul\":843:844   */\n      0x05\n        /* \"#utility.yul\":839:853   */\n      shl\n        /* \"#utility.yul\":835:837   */\n      dup6\n        /* \"#utility.yul\":831:854   */\n      add\n        /* \"#utility.yul\":827:859   */\n      add\n        /* \"#utility.yul\":824:869   */\n      gt\n        /* \"#utility.yul\":821:886   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":882:883   */\n      0x00\n        /* \"#utility.yul\":879:880   */\n      dup1\n        /* \"#utility.yul\":872:884   */\n      revert\n        /* \"#utility.yul\":821:886   */\n    tag_293:\n        /* \"#utility.yul\":913:915   */\n      0x20\n        /* \"#utility.yul\":909:911   */\n      dup4\n        /* \"#utility.yul\":905:916   */\n      add\n        /* \"#utility.yul\":895:916   */\n      swap5\n      pop\n        /* \"#utility.yul\":935:941   */\n      dup1\n        /* \"#utility.yul\":925:941   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":164:947   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":952:1281   */\n    tag_22:\n        /* \"#utility.yul\":1020:1026   */\n      0x00\n        /* \"#utility.yul\":1028:1034   */\n      dup1\n        /* \"#utility.yul\":1081:1083   */\n      0x40\n        /* \"#utility.yul\":1069:1078   */\n      dup4\n        /* \"#utility.yul\":1060:1067   */\n      dup6\n        /* \"#utility.yul\":1056:1079   */\n      sub\n        /* \"#utility.yul\":1052:1084   */\n      slt\n        /* \"#utility.yul\":1049:1101   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":1097:1098   */\n      0x00\n        /* \"#utility.yul\":1094:1095   */\n      dup1\n        /* \"#utility.yul\":1087:1099   */\n      revert\n        /* \"#utility.yul\":1049:1101   */\n    tag_295:\n        /* \"#utility.yul\":1136:1145   */\n      dup3\n        /* \"#utility.yul\":1123:1146   */\n      calldataload\n        /* \"#utility.yul\":1155:1200   */\n      tag_296\n        /* \"#utility.yul\":1194:1199   */\n      dup2\n        /* \"#utility.yul\":1155:1200   */\n      tag_282\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1219:1224   */\n      swap5\n        /* \"#utility.yul\":1271:1273   */\n      0x20\n        /* \"#utility.yul\":1256:1274   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1243:1275   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":952:1281   */\n      jump\t// out\n        /* \"#utility.yul\":1478:1658   */\n    tag_28:\n        /* \"#utility.yul\":1537:1543   */\n      0x00\n        /* \"#utility.yul\":1590:1592   */\n      0x20\n        /* \"#utility.yul\":1578:1587   */\n      dup3\n        /* \"#utility.yul\":1569:1576   */\n      dup5\n        /* \"#utility.yul\":1565:1588   */\n      sub\n        /* \"#utility.yul\":1561:1593   */\n      slt\n        /* \"#utility.yul\":1558:1610   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1606:1607   */\n      0x00\n        /* \"#utility.yul\":1603:1604   */\n      dup1\n        /* \"#utility.yul\":1596:1608   */\n      revert\n        /* \"#utility.yul\":1558:1610   */\n    tag_299:\n      pop\n        /* \"#utility.yul\":1629:1652   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1478:1658   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1663:2340   */\n    tag_31:\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1905:1926   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1975:1988   */\n      dup3\n      mload\n        /* \"#utility.yul\":1878:1896   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1997:2019   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1824:1828   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1853:1855   */\n      swap1\n        /* \"#utility.yul\":2076:2091   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2050:2052   */\n      0x40\n        /* \"#utility.yul\":2035:2053   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1824:1828   */\n      dup5\n        /* \"#utility.yul\":2119:2314   */\n    tag_301:\n        /* \"#utility.yul\":2133:2139   */\n      dup2\n        /* \"#utility.yul\":2130:2131   */\n      dup2\n        /* \"#utility.yul\":2127:2140   */\n      lt\n        /* \"#utility.yul\":2119:2314   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2198:2211   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2194:2233   */\n      and\n        /* \"#utility.yul\":2182:2234   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2289:2304   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2254:2266   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2230:2231   */\n      0x01\n        /* \"#utility.yul\":2148:2157   */\n      add\n        /* \"#utility.yul\":2119:2314   */\n      jump(tag_301)\n    tag_303:\n      pop\n        /* \"#utility.yul\":2331:2334   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1663:2340   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:2833   */\n    tag_43:\n        /* \"#utility.yul\":2631:2637   */\n      0x00\n        /* \"#utility.yul\":2684:2686   */\n      0x20\n        /* \"#utility.yul\":2672:2681   */\n      dup3\n        /* \"#utility.yul\":2663:2670   */\n      dup5\n        /* \"#utility.yul\":2659:2682   */\n      sub\n        /* \"#utility.yul\":2655:2687   */\n      slt\n        /* \"#utility.yul\":2652:2704   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2697:2698   */\n      dup1\n        /* \"#utility.yul\":2690:2702   */\n      revert\n        /* \"#utility.yul\":2652:2704   */\n    tag_306:\n        /* \"#utility.yul\":2739:2748   */\n      dup2\n        /* \"#utility.yul\":2726:2749   */\n      calldataload\n        /* \"#utility.yul\":2758:2803   */\n      tag_307\n        /* \"#utility.yul\":2797:2802   */\n      dup2\n        /* \"#utility.yul\":2758:2803   */\n      tag_282\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2822:2827   */\n      swap4\n        /* \"#utility.yul\":2553:2833   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2838:3470   */\n    tag_49:\n        /* \"#utility.yul\":3009:3011   */\n      0x20\n        /* \"#utility.yul\":3061:3082   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3131:3144   */\n      dup3\n      mload\n        /* \"#utility.yul\":3034:3052   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3153:3175   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2980:2984   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3009:3011   */\n      swap1\n        /* \"#utility.yul\":3232:3247   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3206:3208   */\n      0x40\n        /* \"#utility.yul\":3191:3209   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2980:2984   */\n      dup5\n        /* \"#utility.yul\":3275:3444   */\n    tag_309:\n        /* \"#utility.yul\":3289:3295   */\n      dup2\n        /* \"#utility.yul\":3286:3287   */\n      dup2\n        /* \"#utility.yul\":3283:3296   */\n      lt\n        /* \"#utility.yul\":3275:3444   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3350:3363   */\n      dup4\n      mload\n        /* \"#utility.yul\":3338:3364   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3419:3434   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3384:3396   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3311:3312   */\n      0x01\n        /* \"#utility.yul\":3304:3313   */\n      add\n        /* \"#utility.yul\":3275:3444   */\n      jump(tag_309)\n        /* \"#utility.yul\":3741:4096   */\n    tag_69:\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"#utility.yul\":3925:3946   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x1f\n        /* \"#utility.yul\":3962:3980   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4054   */\n      0x696e76616c696420617267756d656e74202d207a65726f206164647265737300\n        /* \"#utility.yul\":4016:4018   */\n      0x40\n        /* \"#utility.yul\":4001:4019   */\n      dup3\n      add\n        /* \"#utility.yul\":3994:4055   */\n      mstore\n        /* \"#utility.yul\":4087:4089   */\n      0x60\n        /* \"#utility.yul\":4072:4090   */\n      add\n      swap1\n        /* \"#utility.yul\":3741:4096   */\n      jump\t// out\n        /* \"#utility.yul\":4450:4851   */\n    tag_75:\n        /* \"#utility.yul\":4652:4654   */\n      0x20\n        /* \"#utility.yul\":4634:4655   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4691:4693   */\n      0x25\n        /* \"#utility.yul\":4671:4689   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4664:4694   */\n      mstore\n        /* \"#utility.yul\":4730:4764   */\n      0x63616e6e6f742068617665206d6f7265207468616e20313520636c61696d2074\n        /* \"#utility.yul\":4725:4727   */\n      0x40\n        /* \"#utility.yul\":4710:4728   */\n      dup3\n      add\n        /* \"#utility.yul\":4703:4765   */\n      mstore\n      shl(0xd8, 0x6f70696373)\n        /* \"#utility.yul\":4796:4798   */\n      0x60\n        /* \"#utility.yul\":4781:4799   */\n      dup3\n      add\n        /* \"#utility.yul\":4774:4809   */\n      mstore\n        /* \"#utility.yul\":4841:4844   */\n      0x80\n        /* \"#utility.yul\":4826:4845   */\n      add\n      swap1\n        /* \"#utility.yul\":4450:4851   */\n      jump\t// out\n        /* \"#utility.yul\":5213:5340   */\n    tag_84:\n        /* \"#utility.yul\":5274:5284   */\n      0x4e487b71\n        /* \"#utility.yul\":5269:5272   */\n      0xe0\n        /* \"#utility.yul\":5265:5285   */\n      shl\n        /* \"#utility.yul\":5262:5263   */\n      0x00\n        /* \"#utility.yul\":5255:5286   */\n      mstore\n        /* \"#utility.yul\":5305:5309   */\n      0x32\n        /* \"#utility.yul\":5302:5303   */\n      0x04\n        /* \"#utility.yul\":5295:5310   */\n      mstore\n        /* \"#utility.yul\":5329:5333   */\n      0x24\n        /* \"#utility.yul\":5326:5327   */\n      0x00\n        /* \"#utility.yul\":5319:5334   */\n      revert\n        /* \"#utility.yul\":5345:5472   */\n    tag_283:\n        /* \"#utility.yul\":5406:5416   */\n      0x4e487b71\n        /* \"#utility.yul\":5401:5404   */\n      0xe0\n        /* \"#utility.yul\":5397:5417   */\n      shl\n        /* \"#utility.yul\":5394:5395   */\n      0x00\n        /* \"#utility.yul\":5387:5418   */\n      mstore\n        /* \"#utility.yul\":5437:5441   */\n      0x11\n        /* \"#utility.yul\":5434:5435   */\n      0x04\n        /* \"#utility.yul\":5427:5442   */\n      mstore\n        /* \"#utility.yul\":5461:5465   */\n      0x24\n        /* \"#utility.yul\":5458:5459   */\n      0x00\n        /* \"#utility.yul\":5451:5466   */\n      revert\n        /* \"#utility.yul\":5477:5605   */\n    tag_94:\n        /* \"#utility.yul\":5544:5553   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5565:5576   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5562:5599   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":5579:5597   */\n      tag_119\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":5610:5737   */\n    tag_103:\n        /* \"#utility.yul\":5671:5681   */\n      0x4e487b71\n        /* \"#utility.yul\":5666:5669   */\n      0xe0\n        /* \"#utility.yul\":5662:5682   */\n      shl\n        /* \"#utility.yul\":5659:5660   */\n      0x00\n        /* \"#utility.yul\":5652:5683   */\n      mstore\n        /* \"#utility.yul\":5702:5706   */\n      0x31\n        /* \"#utility.yul\":5699:5700   */\n      0x04\n        /* \"#utility.yul\":5692:5707   */\n      mstore\n        /* \"#utility.yul\":5726:5730   */\n      0x24\n        /* \"#utility.yul\":5723:5724   */\n      0x00\n        /* \"#utility.yul\":5716:5731   */\n      revert\n        /* \"#utility.yul\":5742:5877   */\n    tag_106:\n        /* \"#utility.yul\":5781:5784   */\n      0x00\n        /* \"#utility.yul\":5802:5819   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5799:5842   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":5822:5840   */\n      tag_327\n      tag_283\n      jump\t// in\n    tag_327:\n      pop\n        /* \"#utility.yul\":5869:5870   */\n      0x01\n        /* \"#utility.yul\":5858:5871   */\n      add\n      swap1\n        /* \"#utility.yul\":5742:5877   */\n      jump\t// out\n        /* \"#utility.yul\":5882:6325   */\n    tag_118:\n        /* \"#utility.yul\":6071:6073   */\n      0x20\n        /* \"#utility.yul\":6053:6074   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6090:6108   */\n      dup2\n      add\n        /* \"#utility.yul\":6083:6117   */\n      dup3\n      swap1\n      mstore\n      0x00\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":6129:6160   */\n      dup4\n      gt\n        /* \"#utility.yul\":6126:6177   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":6173:6174   */\n      0x00\n        /* \"#utility.yul\":6170:6171   */\n      dup1\n        /* \"#utility.yul\":6163:6175   */\n      revert\n        /* \"#utility.yul\":6126:6177   */\n    tag_329:\n        /* \"#utility.yul\":6207:6213   */\n      dup3\n        /* \"#utility.yul\":6204:6205   */\n      0x05\n        /* \"#utility.yul\":6200:6214   */\n      shl\n        /* \"#utility.yul\":6264:6270   */\n      dup1\n        /* \"#utility.yul\":6256:6262   */\n      dup6\n        /* \"#utility.yul\":6251:6253   */\n      0x40\n        /* \"#utility.yul\":6240:6249   */\n      dup6\n        /* \"#utility.yul\":6236:6254   */\n      add\n        /* \"#utility.yul\":6223:6271   */\n      calldatacopy\n        /* \"#utility.yul\":6292:6314   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6316:6318   */\n      0x40\n        /* \"#utility.yul\":6288:6319   */\n      add\n      swap4\n        /* \"#utility.yul\":5882:6325   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9241:9648   */\n    tag_262:\n        /* \"#utility.yul\":9443:9445   */\n      0x20\n        /* \"#utility.yul\":9425:9446   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9482:9484   */\n      0x2b\n        /* \"#utility.yul\":9462:9480   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9455:9485   */\n      mstore\n        /* \"#utility.yul\":9521:9555   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":9516:9518   */\n      0x40\n        /* \"#utility.yul\":9501:9519   */\n      dup3\n      add\n        /* \"#utility.yul\":9494:9556   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":9587:9589   */\n      0x60\n        /* \"#utility.yul\":9572:9590   */\n      dup3\n      add\n        /* \"#utility.yul\":9565:9606   */\n      mstore\n        /* \"#utility.yul\":9638:9641   */\n      0x80\n        /* \"#utility.yul\":9623:9642   */\n      add\n      swap1\n        /* \"#utility.yul\":9241:9648   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205f9d008637fb8bf91afd63b530f24bce652d56861310e076d31e260b440645fb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1451 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB93D28EB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB93D28EB EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC28FB278 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD9DD24C5 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xEF2ED1A4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x52C111D1 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x9F63EA98 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x67D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0xCC PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x109 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xCC PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST DUP1 PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D20746F706963732063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x444 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x38C PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH2 0x39C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x41D JUMPI PUSH2 0x41D PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH2 0x44E DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x325 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x464 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x490 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x500 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x494 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 DUP5 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x59F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x603 JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5D8 JUMPI PUSH2 0x5D8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x5F1 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x60B JUMP JUMPDEST DUP1 PUSH2 0x5FB DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BD JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x653 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x699 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7472757374656420636C61696D20746F706963732063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x32 GT PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E2035302074727573746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2069737375657273 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x8FF97419363FFD7000167F130EF7168FBEA05FAF9251824CA5043F113CC6A7C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x864 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x8D4 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x868 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x920 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAAA JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CF JUMPI PUSH2 0x9CF PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA98 JUMPI PUSH1 0x65 PUSH2 0x9F6 PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xA32 JUMPI PUSH2 0xA32 PUSH2 0x1329 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x65 DUP1 SLOAD DUP1 PUSH2 0xA71 JUMPI PUSH2 0xA71 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xAAA JUMP JUMPDEST DUP1 PUSH2 0xAA2 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9AA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC37 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB7F PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB8F JUMPI PUSH2 0xB8F PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xBC8 JUMPI PUSH2 0xBC8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xC10 JUMPI PUSH2 0xC10 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xC49 JUMP JUMPDEST DUP1 PUSH2 0xC41 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB18 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xC57 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC81 SWAP2 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD6C JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE0D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xE27 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE27 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEB5 PUSH2 0x104E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xF24 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF34 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0xEFB DUP2 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1075 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F CALLER PUSH2 0xFFC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x10E3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10E3 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10C8 JUMP JUMPDEST POP PUSH2 0x10EF SWAP3 SWAP2 POP PUSH2 0x110D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEFB SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10EF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x110E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1157 DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x11DD DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1220 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6F70696373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60B PUSH2 0x133F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F SWAP14 STOP DUP7 CALLDATACOPY 0xFB DUP12 0xF9 BYTE REVERT PUSH4 0xB530F24B 0xCE PUSH6 0x2D56861310E0 PUSH23 0xD31E260B440645FB64736F6C6343000811003300000000 ",
							"sourceMap": "294:7041:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_350": {
									"entryPoint": 4174,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_361": {
									"entryPoint": null,
									"id": 361,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_392": {
									"entryPoint": 4002,
									"id": 392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_449": {
									"entryPoint": 4092,
									"id": 449,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTrustedIssuer_1123": {
									"entryPoint": 1681,
									"id": 1123,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getTrustedIssuerClaimTopics_1542": {
									"entryPoint": 3257,
									"id": 1542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTrustedIssuersForClaimTopic_1488": {
									"entryPoint": 1553,
									"id": 1488,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTrustedIssuers_1472": {
									"entryPoint": 3467,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasClaimTopic_1593": {
									"entryPoint": 1361,
									"id": 1593,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@init_1017": {
									"entryPoint": 3565,
									"id": 1017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_642": {
									"entryPoint": null,
									"id": 642,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isTrustedIssuer_1510": {
									"entryPoint": 3838,
									"id": 1510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeTrustedIssuer_1290": {
									"entryPoint": 2328,
									"id": 1290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_406": {
									"entryPoint": 1661,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_429": {
									"entryPoint": 3884,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateIssuerClaimTopics_1460": {
									"entryPoint": 437,
									"id": 1460,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_contract$_IClaimIssuer_$59": {
									"entryPoint": 4689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IClaimIssuer_$59t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_IClaimIssuer": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9650:11",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "73:86:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "137:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "146:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "149:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "139:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "139:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "139:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "96:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "107:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "122:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "127:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "118:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "118:11:11"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "131:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "114:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "114:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "103:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "103:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "93:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "93:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "86:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:50:11"
															},
															"nodeType": "YulIf",
															"src": "83:70:11"
														}
													]
												},
												"name": "validator_revert_contract_IClaimIssuer",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "62:5:11",
														"type": ""
													}
												],
												"src": "14:145:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "305:642:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "351:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "360:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "363:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "353:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "353:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "353:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "326:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "335:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "322:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "322:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "347:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:32:11"
															},
															"nodeType": "YulIf",
															"src": "315:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "376:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "402:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "389:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "380:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "460:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "421:38:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "421:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "475:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "485:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "475:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "499:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "530:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "541:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "526:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "526:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "513:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "503:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "554:28:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "564:18:11",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "558:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "609:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "618:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "621:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "611:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "611:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "611:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "597:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "605:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "594:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:14:11"
															},
															"nodeType": "YulIf",
															"src": "591:34:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "634:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "648:9:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "659:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "644:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:22:11"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "638:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "714:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "723:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "726:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "716:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "716:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "693:2:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "697:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "689:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "689:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "704:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "685:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "685:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "678:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:35:11"
															},
															"nodeType": "YulIf",
															"src": "675:55:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "739:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "766:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "753:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "743:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "796:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "805:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "808:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "798:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "798:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "792:2:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "781:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:14:11"
															},
															"nodeType": "YulIf",
															"src": "778:34:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "870:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "879:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "872:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "872:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "872:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "835:2:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "843:1:11",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "846:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "839:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "839:14:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "831:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "831:23:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "856:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "827:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "827:32:11"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "861:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "824:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:45:11"
															},
															"nodeType": "YulIf",
															"src": "821:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "909:2:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:11:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "925:16:11",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "935:6:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IClaimIssuer_$59t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "255:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "266:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "278:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "286:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "294:6:11",
														"type": ""
													}
												],
												"src": "164:783:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1039:242:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1085:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1094:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1087:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1087:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1069:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1056:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1056:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1081:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1052:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:32:11"
															},
															"nodeType": "YulIf",
															"src": "1049:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1110:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1114:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1194:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "1155:38:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1209:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1219:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1209:6:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1233:42:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1260:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1271:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1256:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1256:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1243:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:32:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "997:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1008:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1020:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1028:6:11",
														"type": ""
													}
												],
												"src": "952:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:92:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1391:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1433:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1458:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1451:6:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1451:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1444:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1350:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1372:4:11",
														"type": ""
													}
												],
												"src": "1286:187:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1548:110:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1594:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1606:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1596:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1596:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1596:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1569:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1578:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1565:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1590:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:32:11"
															},
															"nodeType": "YulIf",
															"src": "1558:52:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1619:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1642:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1629:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:23:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1619:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1514:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1525:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1537:6:11",
														"type": ""
													}
												],
												"src": "1478:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1833:507:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1843:12:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1853:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1847:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1864:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1882:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1893:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1878:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:18:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1868:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1912:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1923:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1905:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1905:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1935:17:11",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1946:6:11"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1939:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1961:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1981:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1975:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1965:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2004:6:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2012:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1997:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1997:22:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2028:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2039:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2035:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2035:18:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2028:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2062:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2080:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2088:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2076:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:15:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2066:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2100:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2109:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2104:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2168:146:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2189:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2204:6:11"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2198:5:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2198:13:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2221:3:11",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2226:1:11",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2217:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2217:11:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2230:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2213:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2213:19:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2194:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2194:39:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2182:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2182:52:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2182:52:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2247:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2258:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2263:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2254:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2254:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2247:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2279:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2293:6:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2301:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2289:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2289:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2279:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2130:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2133:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2127:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2127:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2141:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2143:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2152:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2155:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2148:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2143:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2123:3:11",
																"statements": []
															},
															"src": "2119:195:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2323:11:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2331:3:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2323:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1802:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1813:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1824:4:11",
														"type": ""
													}
												],
												"src": "1663:677:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:102:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2468:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2479:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2464:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2456:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2498:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2513:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2529:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2534:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2525:3:11"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2525:11:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2538:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2521:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2521:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2509:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2491:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2491:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2415:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2426:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2437:4:11",
														"type": ""
													}
												],
												"src": "2345:203:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2642:191:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2688:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2697:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2700:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2690:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2690:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2690:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2663:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2672:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2659:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2659:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2655:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:32:11"
															},
															"nodeType": "YulIf",
															"src": "2652:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2713:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2739:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2726:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2717:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2797:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "2758:38:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2758:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2758:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2812:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2822:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IClaimIssuer_$59",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2608:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2619:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2631:6:11",
														"type": ""
													}
												],
												"src": "2553:280:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2989:481:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2999:12:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3009:2:11",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3003:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3020:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3038:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3049:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:18:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3024:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3079:2:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3061:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3061:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3061:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3091:17:11",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3102:6:11"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3095:3:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3117:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3137:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3131:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3121:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3160:6:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3168:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3153:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3153:22:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3184:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3206:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3191:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3191:18:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3184:3:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3218:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3236:6:11"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3244:2:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3232:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:15:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3222:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3256:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3265:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3260:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3324:120:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3345:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3356:6:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3350:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3350:13:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3338:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3338:26:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3338:26:11"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3377:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3388:3:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3393:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3384:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3384:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3377:3:11"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3409:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3423:6:11"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3431:2:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3419:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3409:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3286:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3289:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3283:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3297:18:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3299:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3308:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3311:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3304:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3304:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3299:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3279:3:11",
																"statements": []
															},
															"src": "3275:169:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3453:11:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3461:3:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3453:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2958:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2969:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2980:4:11",
														"type": ""
													}
												],
												"src": "2838:632:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3545:191:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3591:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3600:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3603:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3593:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3593:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3593:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3566:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3575:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3562:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3587:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:32:11"
															},
															"nodeType": "YulIf",
															"src": "3555:52:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3616:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3642:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3629:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3620:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3700:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_IClaimIssuer",
																	"nodeType": "YulIdentifier",
																	"src": "3661:38:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3661:45:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3715:15:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3725:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3715:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3511:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3522:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3534:6:11",
														"type": ""
													}
												],
												"src": "3475:261:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3915:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:11"
																	},
																	{
																		"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4021:33:11",
																		"type": "",
																		"value": "invalid argument - zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:61:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3994:61:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4064:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4076:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4072:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4064:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3892:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3906:4:11",
														"type": ""
													}
												],
												"src": "3741:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4275:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4285:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4285:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4326:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4337:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4342:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4315:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4315:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:11"
																	},
																	{
																		"hexValue": "4e4f542061207472757374656420697373756572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4381:22:11",
																		"type": "",
																		"value": "NOT a trusted issuer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4354:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4354:50:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4413:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4421:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4421:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4413:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4252:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4266:4:11",
														"type": ""
													}
												],
												"src": "4101:344:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:227:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4641:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4652:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4634:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4634:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4634:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4675:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4686:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4671:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4671:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4691:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4664:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4714:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4725:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4710:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4710:18:11"
																	},
																	{
																		"hexValue": "63616e6e6f742068617665206d6f7265207468616e20313520636c61696d2074",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4730:34:11",
																		"type": "",
																		"value": "cannot have more than 15 claim t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4703:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4703:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4785:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4796:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4781:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4781:18:11"
																	},
																	{
																		"hexValue": "6f70696373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4801:7:11",
																		"type": "",
																		"value": "opics"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4774:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4774:35:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4774:35:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4818:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4830:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4841:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4826:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4826:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4818:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4601:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4615:4:11",
														"type": ""
													}
												],
												"src": "4450:401:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5030:178:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5047:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5040:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5040:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5077:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5077:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5097:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5070:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5120:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5131:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5116:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5116:18:11"
																	},
																	{
																		"hexValue": "636c61696d20746f706963732063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5136:30:11",
																		"type": "",
																		"value": "claim topics cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5109:58:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5176:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5188:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5199:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5184:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5176:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5007:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5021:4:11",
														"type": ""
													}
												],
												"src": "4856:352:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5245:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5262:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5269:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5274:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5265:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5265:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5255:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5305:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5295:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5329:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5319:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5213:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5377:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5394:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5401:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5406:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5397:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5387:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5387:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5387:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5434:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5437:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5427:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5458:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5461:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5451:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5345:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5526:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5536:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5548:1:11"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5551:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5544:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5536:4:11"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5577:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5579:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5579:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5579:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5568:4:11"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5574:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5565:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5565:11:11"
															},
															"nodeType": "YulIf",
															"src": "5562:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5508:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5511:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5517:4:11",
														"type": ""
													}
												],
												"src": "5477:128:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5642:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5659:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5666:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5671:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5652:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5652:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5652:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5699:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5702:4:11",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5692:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5692:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5692:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5723:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5716:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5716:15:11"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "5610:127:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5789:88:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5820:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5822:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5822:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5822:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5805:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5816:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5812:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5812:6:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5802:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5802:17:11"
															},
															"nodeType": "YulIf",
															"src": "5799:43:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5851:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5862:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5869:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5858:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5851:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5771:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5781:3:11",
														"type": ""
													}
												],
												"src": "5742:135:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6043:282:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6060:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6071:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6053:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6053:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6053:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6094:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6105:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6090:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6090:18:11"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6110:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6083:34:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6161:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6170:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6173:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6163:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6163:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6163:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6132:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6148:3:11",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6153:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6144:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6144:11:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6157:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6140:19:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6129:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6129:31:11"
															},
															"nodeType": "YulIf",
															"src": "6126:51:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6186:28:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6204:1:11",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6207:6:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6200:14:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6190:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6240:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6251:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6236:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6236:18:11"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6256:6:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6264:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6223:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6223:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6280:39:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6296:9:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6307:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6292:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6292:22:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6316:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:31:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6280:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6004:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6015:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6023:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6034:4:11",
														"type": ""
													}
												],
												"src": "5882:443:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6504:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6521:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6532:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6555:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6566:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6551:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6571:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6544:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6544:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6594:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6605:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6590:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6590:18:11"
																	},
																	{
																		"hexValue": "747275737465642049737375657220616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6610:31:11",
																		"type": "",
																		"value": "trusted Issuer already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6583:59:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6583:59:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6651:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6663:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6674:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6651:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6481:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6495:4:11",
														"type": ""
													}
												],
												"src": "6330:353:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6862:226:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6879:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6890:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6872:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6913:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6924:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6909:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6909:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6929:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6902:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6902:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6902:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:11"
																	},
																	{
																		"hexValue": "7472757374656420636c61696d20746f706963732063616e6e6f742062652065",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6968:34:11",
																		"type": "",
																		"value": "trusted claim topics cannot be e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6941:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6941:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6941:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7023:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7034:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:18:11"
																	},
																	{
																		"hexValue": "6d707479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7039:6:11",
																		"type": "",
																		"value": "mpty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7012:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7012:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7012:34:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7055:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7067:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7078:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7063:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7055:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6839:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6853:4:11",
														"type": ""
													}
												],
												"src": "6688:400:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:230:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7284:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7295:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7277:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7318:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7329:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7314:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7314:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7334:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7307:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7307:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7357:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7368:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7353:18:11"
																	},
																	{
																		"hexValue": "63616e6e6f742068617665206d6f7265207468616e2035302074727573746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7373:34:11",
																		"type": "",
																		"value": "cannot have more than 50 trusted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7346:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7346:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7346:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7428:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7439:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7424:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7424:18:11"
																	},
																	{
																		"hexValue": "2069737375657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7444:10:11",
																		"type": "",
																		"value": " issuers"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7417:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7417:38:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7417:38:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7464:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7476:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7487:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7472:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7472:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7464:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7244:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7258:4:11",
														"type": ""
													}
												],
												"src": "7093:404:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7676:178:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7693:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7686:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7686:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7686:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7727:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7738:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7743:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7716:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7716:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7766:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7777:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7762:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7762:18:11"
																	},
																	{
																		"hexValue": "747275737465642049737375657220646f65736e2774206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7782:30:11",
																		"type": "",
																		"value": "trusted Issuer doesn't exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7755:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7755:58:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7822:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7834:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7845:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7830:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7830:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7822:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7653:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7667:4:11",
														"type": ""
													}
												],
												"src": "7502:352:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8033:236:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8050:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8061:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8043:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8043:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8043:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8084:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8095:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8080:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8080:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8100:2:11",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8073:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8073:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8123:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8134:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8119:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8119:18:11"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8139:34:11",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8112:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8112:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8194:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8205:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8190:18:11"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8210:16:11",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8183:44:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8183:44:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8236:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8248:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8259:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8244:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8244:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8236:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8010:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8024:4:11",
														"type": ""
													}
												],
												"src": "7859:410:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8381:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8391:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8403:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8414:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8399:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8399:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8391:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8433:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8448:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8456:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8426:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8426:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8426:36:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8350:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8361:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8372:4:11",
														"type": ""
													}
												],
												"src": "8274:194:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8647:228:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8664:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8675:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8657:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8698:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8709:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8694:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8714:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8687:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8687:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8737:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8748:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8733:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8733:18:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8753:34:11",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8726:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8726:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8808:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8819:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8804:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8804:18:11"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8824:8:11",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8797:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8797:36:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8842:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8854:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8865:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8850:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8842:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8624:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8638:4:11",
														"type": ""
													}
												],
												"src": "8473:402:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9054:182:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9071:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9082:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9064:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9064:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9064:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9105:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9116:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9101:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9101:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9121:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9094:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9094:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9094:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9144:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9155:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9140:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9140:18:11"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9160:34:11",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9133:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9133:62:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9204:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9216:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9227:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9212:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9204:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9031:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9045:4:11",
														"type": ""
													}
												],
												"src": "8880:356:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9415:233:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9432:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9443:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9425:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9466:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9477:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9462:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9462:18:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9482:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9455:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9455:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9455:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9505:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9516:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9501:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9501:18:11"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9521:34:11",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9494:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9494:62:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9494:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9576:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9587:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9572:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9572:18:11"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9592:13:11",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9565:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9565:41:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9565:41:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9615:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9627:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9638:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9623:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9623:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9615:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9392:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9406:4:11",
														"type": ""
													}
												],
												"src": "9241:407:11"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_contract_IClaimIssuer(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$59t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$59(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IClaimIssuer(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"invalid argument - zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"NOT a trusted issuer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"cannot have more than 15 claim t\")\n        mstore(add(headStart, 96), \"opics\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"claim topics cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        if gt(value1, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value1)\n        calldatacopy(add(headStart, 64), value0, length)\n        tail := add(add(headStart, length), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"trusted Issuer already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"trusted claim topics cannot be e\")\n        mstore(add(headStart, 96), \"mpty\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"cannot have more than 50 trusted\")\n        mstore(add(headStart, 96), \" issuers\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"trusted Issuer doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB93D28EB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB93D28EB EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xC28FB278 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xD9DD24C5 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xE1C7392A EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xEF2ED1A4 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4BC7E84 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x34A89987 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x52C111D1 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x9F63EA98 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x1B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH2 0xDC CALLDATASIZE PUSH1 0x4 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x104 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x67D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xED JUMP JUMPDEST PUSH2 0xCC PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x691 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST PUSH2 0x172 PUSH2 0x16D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xCB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xED SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH2 0x109 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xCC PUSH2 0xDED JUMP JUMPDEST PUSH2 0xE1 PUSH2 0x19D CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xEFE JUMP JUMPDEST PUSH2 0xCC PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1251 JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x1BD PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x24A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x26B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST DUP1 PUSH2 0x2B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D20746F706963732063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x305 JUMPI PUSH2 0x305 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x456 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x359 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x444 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x38C PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x39C JUMPI PUSH2 0x39C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x3D5 JUMPI PUSH2 0x3D5 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x41D JUMPI PUSH2 0x41D PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0x456 JUMP JUMPDEST DUP1 PUSH2 0x44E DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x325 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x464 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2BB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x490 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x508 JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x500 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x494 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP3 DUP5 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x59F JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x603 JUMPI DUP5 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5D8 JUMPI PUSH2 0x5D8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH2 0x5F1 JUMPI PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x60B JUMP JUMPDEST DUP1 PUSH2 0x5FB DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5BD JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x653 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 PUSH2 0xFFC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x699 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220616C726561647920657869737473000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST DUP1 PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x7472757374656420636C61696D20746F706963732063616E6E6F742062652065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6D707479 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x79F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x32 GT PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E2035302074727573746564 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2069737375657273 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH32 0x8FF97419363FFD7000167F130EF7168FBEA05FAF9251824CA5043F113CC6A7C7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x864 SWAP1 DUP4 DUP4 PUSH2 0x10A8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8DC JUMPI PUSH1 0x67 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 PUSH2 0x8D4 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x868 JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xFEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x544 SWAP3 SWAP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST PUSH2 0x920 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x946 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x12AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2727AA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAAA JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x65 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9CF JUMPI PUSH2 0x9CF PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xA98 JUMPI PUSH1 0x65 PUSH2 0x9F6 PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA06 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xA32 JUMPI PUSH2 0xA32 PUSH2 0x1329 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x65 DUP1 SLOAD DUP1 PUSH2 0xA71 JUMPI PUSH2 0xA71 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xAAA JUMP JUMPDEST DUP1 PUSH2 0xAA2 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9AA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xAF8 JUMPI PUSH2 0xAF8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP1 SWAP3 POP SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xB4C JUMPI PUSH2 0xB4C PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xC37 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB7F PUSH1 0x1 DUP5 PUSH2 0x1355 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xB8F JUMPI PUSH2 0xB8F PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP6 DUP4 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0xBC8 JUMPI PUSH2 0xBC8 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP5 DUP2 MSTORE PUSH1 0x67 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xC10 JUMPI PUSH2 0xC10 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH2 0xC49 JUMP JUMPDEST DUP1 PUSH2 0xC41 DUP2 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB18 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xC57 SWAP1 PUSH2 0x137E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC81 SWAP2 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x60 SWAP2 SUB PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x747275737465642049737375657220646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x671 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD6C JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x65 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDC5 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0xE0D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0xE27 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE27 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0xEB5 PUSH2 0x104E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0xF24 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF34 PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0xEFB DUP2 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1075 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E3 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x68F CALLER PUSH2 0xFFC JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x10E3 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x10E3 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x10C8 JUMP JUMPDEST POP PUSH2 0x10EF SWAP3 SWAP2 POP PUSH2 0x110D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xEFB SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x10EF JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x110E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1157 DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x11AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x11DD DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1220 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1122 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1245 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x696E76616C696420617267756D656E74202D207A65726F206164647265737300 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6F70696373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60B PUSH2 0x133F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1390 JUMPI PUSH2 0x1390 PUSH2 0x133F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x5 SHL DUP1 DUP6 PUSH1 0x40 DUP6 ADD CALLDATACOPY SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F SWAP14 STOP DUP7 CALLDATACOPY 0xFB DUP12 0xF9 BYTE REVERT PUSH4 0xB530F24B 0xCE PUSH6 0x2D56861310E0 PUSH23 0xD31E260B440645FB64736F6C6343000811003300000000 ",
							"sourceMap": "294:7041:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3636:1816;;;;;;:::i;:::-;;:::i;:::-;;6877:456;;;;;;:::i;:::-;;:::i;:::-;;;1451:14:11;;1444:22;1426:41;;1414:2;1399:18;6877:456:8;;;;;;;;5792:215;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2064:101:4:-;;;:::i;1441:85::-;1513:6;;1441:85;;-1:-1:-1;;;;;1513:6:4;;;2491:51:11;;2479:2;2464:18;1441:85:4;2345:203:11;556:1111:8;;;;;;:::i;:::-;;:::i;1753:1793::-;;;;;;:::i;:::-;;:::i;6424:373::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5536:159::-;;;:::i;403:70::-;;;:::i;6089:241::-;;;;;;:::i;:::-;;:::i;2314:198:4:-;;;;;;:::i;:::-;;:::i;3636:1816:8:-;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;3812:37:8;::::1;3791:115;;;;-1:-1:-1::0;;;3791:115:8::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;3937:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;;3916:129:::1;;;::::0;-1:-1:-1;;;3916:129:8;;4303:2:11;3916:129:8::1;::::0;::::1;4285:21:11::0;4342:2;4322:18;;;4315:30;-1:-1:-1;;;4361:18:11;;;4354:50;4421:18;;3916:129:8::1;4101:344:11::0;3916:129:8::1;4099:2;4076:25:::0;::::1;;4055:109;;;;-1:-1:-1::0;;;4055:109:8::1;;;;;;;:::i;:::-;4182:23:::0;4174:64:::1;;;::::0;-1:-1:-1;;;4174:64:8;;5058:2:11;4174:64:8::1;::::0;::::1;5040:21:11::0;5097:2;5077:18;;;5070:30;5136;5116:18;;;5109:58;5184:18;;4174:64:8::1;4856:352:11::0;4174:64:8::1;4267:9;4249:909;-1:-1:-1::0;;;;;4298:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;4294:61;::::1;4249:909;;;-1:-1:-1::0;;;;;4418:80:8;::::1;4397:18;4418:80:::0;;;:25:::1;:80;::::0;;;;:83;;4499:1;;4418:83;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;4538:40;;;:28:::1;:40:::0;;;;;;:64;4418:83;;-1:-1:-1;4538:64:8;4616:532:::1;4640:12;4636:1;:16;4616:532;;;4702:40;::::0;;;:28:::1;:40;::::0;;;;:43;;-1:-1:-1;;;;;4702:81:8;::::1;::::0;:40;4743:1;;4702:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;4702:43:8::1;:81:::0;4677:457:::1;;4916:40;::::0;;;:28:::1;:40;::::0;;;;4982:16:::1;4997:1;4982:12:::0;:16:::1;:::i;:::-;4916:104;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;4824:40;;;:28:::1;:40:::0;;;;;;;:89;;-1:-1:-1;;;;;4916:104:8;;::::1;::::0;4890:1;;4824:89;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:196:::0;;-1:-1:-1;;;;;;4824:196:8::1;-1:-1:-1::0;;;;;4824:196:8;;;::::1;::::0;;;::::1;::::0;;;5042:40;;;:28:::1;:40:::0;;;;;;:46;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;5042:46:8;;;;;-1:-1:-1;;;;;;5042:46:8::1;::::0;;;;;5110:5:::1;;4677:457;4654:3:::0;::::1;::::0;::::1;:::i;:::-;;;;4616:532;;;;4383:775;;4369:3;;;;;:::i;:::-;;;;4249:909;;;-1:-1:-1::0;;;;;;5167:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:65:::1;::::0;5220:12;;5167:65:::1;:::i;:::-;;5247:9;5242:141;5262:23:::0;;::::1;5242:141;;;5306:28;:45;5335:12;;5348:1;5335:15;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;5306:45:::0;;-1:-1:-1;5306:45:8;;::::1;::::0;;;;;;-1:-1:-1;5306:45:8;;;:66;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;5306:66:8::1;-1:-1:-1::0;;;;;5306:66:8;::::1;;::::0;;5287:3;::::1;::::0;::::1;:::i;:::-;;;;5242:141;;;;5416:14;-1:-1:-1::0;;;;;5397:48:8::1;;5432:12;;5397:48;;;;;;;:::i;:::-;;;;;;;;3636:1816:::0;;;:::o;6877:456::-;-1:-1:-1;;;;;7039:34:8;;7002:4;7039:34;;;:25;:34;;;;;;;;:41;;7090:65;;;;;;;;;;;;;;;7039:41;7002:4;;7090:65;7039:34;:41;;7090:65;;7039:34;:41;7090:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:9;7165:140;7189:6;7185:1;:10;7165:140;;;7238:11;7220;7232:1;7220:14;;;;;;;;:::i;:::-;;;;;;;:29;7216:79;;7276:4;7269:11;;;;;;;7216:79;7197:3;;;;:::i;:::-;;;;7165:140;;;;7321:5;7314:12;;;;6877:456;;;;;:::o;5792:215::-;5960:40;;;;:28;:40;;;;;;;;;5953:47;;;;;;;;;;;;;;;;;5916:21;;5953:47;;;5960:40;5953:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5953:47:8;;;;;;;;;;;;;;;;;;;;;;;5792:215;;;:::o;2064:101:4:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;556:1111:8:-;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;725:37:8;::::1;704:115;;;;-1:-1:-1::0;;;704:115:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;850:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;829:138:::1;;;::::0;-1:-1:-1;;;829:138:8;;6532:2:11;829:138:8::1;::::0;::::1;6514:21:11::0;6571:2;6551:18;;;6544:30;6610:31;6590:18;;;6583:59;6659:18;;829:138:8::1;6330:353:11::0;829:138:8::1;998:23:::0;977:106:::1;;;::::0;-1:-1:-1;;;977:106:8;;6890:2:11;977:106:8::1;::::0;::::1;6872:21:11::0;6929:2;6909:18;;;6902:30;6968:34;6948:18;;;6941:62;-1:-1:-1;;;7019:18:11;;;7012:34;7063:19;;977:106:8::1;6688:400:11::0;977:106:8::1;1137:2;1114:25:::0;::::1;;1093:109;;;;-1:-1:-1::0;;;1093:109:8::1;;;;;;;:::i;:::-;1233:15;:22:::0;1258:2:::1;-1:-1:-1::0;1212:114:8::1;;;::::0;-1:-1:-1;;;1212:114:8;;7295:2:11;1212:114:8::1;::::0;::::1;7277:21:11::0;7334:2;7314:18;;;7307:30;7373:34;7353:18;;;7346:62;-1:-1:-1;;;7424:18:11;;;7417:38;7472:19;;1212:114:8::1;7093:404:11::0;1212:114:8::1;1336:15;:36:::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;;1336:36:8::1;-1:-1:-1::0;;;;;1336:36:8;::::1;::::0;;::::1;::::0;;;-1:-1:-1;1382:50:8;;;:25:::1;1336:36;1382:50:::0;;;;:65:::1;::::0;1435:12;;1382:65:::1;:::i;:::-;;1462:9;1457:141;1477:23:::0;;::::1;1457:141;;;1521:28;:45;1550:12;;1563:1;1550:15;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;1521:45:::0;;-1:-1:-1;1521:45:8;;::::1;::::0;;;;;;-1:-1:-1;1521:45:8;;;:66;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;1521:66:8::1;-1:-1:-1::0;;;;;1521:66:8;::::1;;::::0;;1502:3;::::1;::::0;::::1;:::i;:::-;;;;1457:141;;;;1631:14;-1:-1:-1::0;;;;;1612:48:8::1;;1647:12;;1612:48;;;;;;;:::i;1753:1793::-:0;1334:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;1898:37:8;::::1;1877:115;;;;-1:-1:-1::0;;;1877:115:8::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2023:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;:62;;2002:129:::1;;;::::0;-1:-1:-1;;;2002:129:8;;4303:2:11;2002:129:8::1;::::0;::::1;4285:21:11::0;4342:2;4322:18;;;4315:30;-1:-1:-1;;;4361:18:11;;;4354:50;4421:18;;2002:129:8::1;4101:344:11::0;2002:129:8::1;2158:15;:22:::0;2141:14:::1;2190:246;2214:6;2210:1;:10;2190:246;;;2267:14;-1:-1:-1::0;;;;;2245:36:8::1;:15;2261:1;2245:18;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2245:18:8::1;:36:::0;2241:185:::1;;2322:15;2338:10;2347:1;2338:6:::0;:10:::1;:::i;:::-;2322:27;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;2301:15:::1;:18:::0;;-1:-1:-1;;;;;2322:27:8;;::::1;::::0;2317:1;;2301:18;::::1;;;;;:::i;:::-;;;;;;;;;:48;;;;;-1:-1:-1::0;;;;;2301:48:8::1;;;;;-1:-1:-1::0;;;;;2301:48:8::1;;;;;;2367:15;:21;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;2367:21:8;;;;;-1:-1:-1;;;;;;2367:21:8::1;::::0;;;;;2406:5:::1;;2241:185;2222:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2190:246;;;;2463:23;2445:977;-1:-1:-1::0;;;;;2534:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;:57;2504:87;::::1;2445:977;;;-1:-1:-1::0;;;;;2668:80:8;::::1;2647:18;2668:80:::0;;;:25:::1;:80;::::0;;;;:97;;2749:15;;2668:97;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;2802:40;;;:28:::1;:40:::0;;;;;;:64;2668:97;;-1:-1:-1;2802:64:8;2880:532:::1;2904:12;2900:1;:16;2880:532;;;2966:40;::::0;;;:28:::1;:40;::::0;;;;:43;;-1:-1:-1;;;;;2966:81:8;::::1;::::0;:40;3007:1;;2966:43;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2966:43:8::1;:81:::0;2941:457:::1;;3180:40;::::0;;;:28:::1;:40;::::0;;;;3246:16:::1;3261:1;3246:12:::0;:16:::1;:::i;:::-;3180:104;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;3088:40;;;:28:::1;:40:::0;;;;;;;:89;;-1:-1:-1;;;;;3180:104:8;;::::1;::::0;3154:1;;3088:89;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:196:::0;;-1:-1:-1;;;;;;3088:196:8::1;-1:-1:-1::0;;;;;3088:196:8;;;::::1;::::0;;;::::1;::::0;;;3306:40;;;:28:::1;:40:::0;;;;;;:46;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;3306:46:8;;;;;-1:-1:-1;;;;;;3306:46:8::1;::::0;;;;;3374:5:::1;;2941:457;2918:3:::0;::::1;::::0;::::1;:::i;:::-;;;;2880:532;;;;2633:789;;2605:17;;;;;:::i;:::-;;;;2445:977;;;-1:-1:-1::0;;;;;;3438:50:8;::::1;;::::0;;;:25:::1;:50;::::0;;;;3431:57:::1;::::0;::::1;:::i;:::-;3503:36;::::0;-1:-1:-1;;;;;3503:36:8;::::1;::::0;::::1;::::0;;;::::1;1867:1679;1753:1793:::0;:::o;6424:373::-;-1:-1:-1;;;;;6607:50:8;;;;;;:25;:50;;;;;:57;6554:16;;6607:62;6586:137;;;;-1:-1:-1;;;6586:137:8;;7704:2:11;6586:137:8;;;7686:21:11;7743:2;7723:18;;;7716:30;7782;7762:18;;;7755:58;7830:18;;6586:137:8;7502:352:11;6586:137:8;-1:-1:-1;;;;;6740:50:8;;;;;;:25;:50;;;;;;;;;6733:57;;;;;;;;;;;;;;;;;6740:50;;6733:57;;6740:50;6733:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6424:373;;;:::o;5536:159::-;5629:21;5673:15;5666:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5666:22:8;;;;;;;;;;;;;;;;;;;;;;;5536:159;:::o;403:70::-;3279:19:5;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:5;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:5;1713:19:6;:23;;;3387:66:5;;-1:-1:-1;3436:12:5;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:5;;8061:2:11;3325:201:5;;;8043:21:11;8100:2;8080:18;;;8073:30;8139:34;8119:18;;;8112:62;-1:-1:-1;;;8190:18:11;;;8183:44;8244:19;;3325:201:5;7859:410:11;3325:201:5;3536:12;:16;;-1:-1:-1;;3536:16:5;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:5;;;;;3562:65;450:16:8::1;:14;:16::i;:::-;3651:14:5::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:5;;;3721:14;;-1:-1:-1;8426:36:11;;3721:14:5;;8414:2:11;8399:18;3721:14:5;;;;;;;3647:99;3269:483;403:70:8:o;6089:241::-;-1:-1:-1;;;;;6219:34:8;;6195:4;6219:34;;;:25;:34;;;;;:41;:45;6215:87;;-1:-1:-1;6287:4:8;;6089:241;-1:-1:-1;6089:241:8:o;6215:87::-;-1:-1:-1;6318:5:8;;6089:241;-1:-1:-1;6089:241:8:o;2314:198:4:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:4;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:4;;8675:2:11;2394:73:4::1;::::0;::::1;8657:21:11::0;8714:2;8694:18;;;8687:30;8753:34;8733:18;;;8726:62;-1:-1:-1;;;8804:18:11;;;8797:36;8850:19;;2394:73:4::1;8473:402:11::0;2394:73:4::1;2477:28;2496:8;2477:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:4;929:10:7;1662:23:4;1654:68;;;;-1:-1:-1;;;1654:68:4;;9082:2:11;1654:68:4;;;9064:21:11;;;9101:18;;;9094:30;9160:34;9140:18;;;9133:62;9212:18;;1654:68:4;8880:356:11;2666:187:4;2758:6;;;-1:-1:-1;;;;;2774:17:4;;;-1:-1:-1;;;;;;2774:17:4;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1065:26:4::1;5374:13:5::0;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1176:32:4::1;929:10:7::0;1176:18:4::1;:32::i;-1:-1:-1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:145:11;-1:-1:-1;;;;;103:31:11;;93:42;;83:70;;149:1;146;139:12;164:783;278:6;286;294;347:2;335:9;326:7;322:23;318:32;315:52;;;363:1;360;353:12;315:52;402:9;389:23;421:45;460:5;421:45;:::i;:::-;485:5;-1:-1:-1;541:2:11;526:18;;513:32;564:18;594:14;;;591:34;;;621:1;618;611:12;591:34;659:6;648:9;644:22;634:32;;704:7;697:4;693:2;689:13;685:27;675:55;;726:1;723;716:12;675:55;766:2;753:16;792:2;784:6;781:14;778:34;;;808:1;805;798:12;778:34;861:7;856:2;846:6;843:1;839:14;835:2;831:23;827:32;824:45;821:65;;;882:1;879;872:12;821:65;913:2;909;905:11;895:21;;935:6;925:16;;;;;164:783;;;;;:::o;952:329::-;1020:6;1028;1081:2;1069:9;1060:7;1056:23;1052:32;1049:52;;;1097:1;1094;1087:12;1049:52;1136:9;1123:23;1155:45;1194:5;1155:45;:::i;:::-;1219:5;1271:2;1256:18;;;;1243:32;;-1:-1:-1;;;952:329:11:o;1478:180::-;1537:6;1590:2;1578:9;1569:7;1565:23;1561:32;1558:52;;;1606:1;1603;1596:12;1558:52;-1:-1:-1;1629:23:11;;1478:180;-1:-1:-1;1478:180:11:o;1663:677::-;1853:2;1905:21;;;1975:13;;1878:18;;;1997:22;;;1824:4;;1853:2;2076:15;;;;2050:2;2035:18;;;1824:4;2119:195;2133:6;2130:1;2127:13;2119:195;;;2198:13;;-1:-1:-1;;;;;2194:39:11;2182:52;;2289:15;;;;2254:12;;;;2230:1;2148:9;2119:195;;;-1:-1:-1;2331:3:11;;1663:677;-1:-1:-1;;;;;;1663:677:11:o;2553:280::-;2631:6;2684:2;2672:9;2663:7;2659:23;2655:32;2652:52;;;2700:1;2697;2690:12;2652:52;2739:9;2726:23;2758:45;2797:5;2758:45;:::i;:::-;2822:5;2553:280;-1:-1:-1;;;2553:280:11:o;2838:632::-;3009:2;3061:21;;;3131:13;;3034:18;;;3153:22;;;2980:4;;3009:2;3232:15;;;;3206:2;3191:18;;;2980:4;3275:169;3289:6;3286:1;3283:13;3275:169;;;3350:13;;3338:26;;3419:15;;;;3384:12;;;;3311:1;3304:9;3275:169;;3741:355;3943:2;3925:21;;;3982:2;3962:18;;;3955:30;4021:33;4016:2;4001:18;;3994:61;4087:2;4072:18;;3741:355::o;4450:401::-;4652:2;4634:21;;;4691:2;4671:18;;;4664:30;4730:34;4725:2;4710:18;;4703:62;-1:-1:-1;;;4796:2:11;4781:18;;4774:35;4841:3;4826:19;;4450:401::o;5213:127::-;5274:10;5269:3;5265:20;5262:1;5255:31;5305:4;5302:1;5295:15;5329:4;5326:1;5319:15;5345:127;5406:10;5401:3;5397:20;5394:1;5387:31;5437:4;5434:1;5427:15;5461:4;5458:1;5451:15;5477:128;5544:9;;;5565:11;;;5562:37;;;5579:18;;:::i;5610:127::-;5671:10;5666:3;5662:20;5659:1;5652:31;5702:4;5699:1;5692:15;5726:4;5723:1;5716:15;5742:135;5781:3;5802:17;;;5799:43;;5822:18;;:::i;:::-;-1:-1:-1;5869:1:11;5858:13;;5742:135::o;5882:443::-;6071:2;6053:21;;;6090:18;;6083:34;;;-1:-1:-1;;;;;;6129:31:11;;6126:51;;;6173:1;6170;6163:12;6126:51;6207:6;6204:1;6200:14;6264:6;6256;6251:2;6240:9;6236:18;6223:48;6292:22;;;;6316:2;6288:31;;5882:443;-1:-1:-1;;;5882:443:11:o;9241:407::-;9443:2;9425:21;;;9482:2;9462:18;;;9455:30;9521:34;9516:2;9501:18;;9494:62;-1:-1:-1;;;9587:2:11;9572:18;;9565:41;9638:3;9623:19;;9241:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1040200",
								"executionCost": "1080",
								"totalCost": "1041280"
							},
							"external": {
								"addTrustedIssuer(address,uint256[])": "infinite",
								"getTrustedIssuerClaimTopics(address)": "infinite",
								"getTrustedIssuers()": "infinite",
								"getTrustedIssuersForClaimTopic(uint256)": "infinite",
								"hasClaimTopic(address,uint256)": "infinite",
								"init()": "infinite",
								"isTrustedIssuer(address)": "2656",
								"owner()": "2390",
								"removeTrustedIssuer(address)": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"updateIssuerClaimTopics(address,uint256[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 294,
									"end": 7335,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205f9d008637fb8bf91afd63b530f24bce652d56861310e076d31e260b440645fb64736f6c63430008110033",
									".code": [
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "B93D28EB"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "B93D28EB"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "C28FB278"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "D9DD24C5"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "E1C7392A"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "EF2ED1A4"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "4BC7E84"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "34A89987"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "52C111D1"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "9F63EA98"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 294,
											"end": 7335,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3636,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3636,
											"end": 5452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6877,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6877,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1465,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1444,
											"end": 1466,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1467,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1414,
											"end": 1416,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1399,
											"end": 1417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5792,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5792,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 5792,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2491,
											"end": 2542,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2479,
											"end": 2481,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2345,
											"end": 2548,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 556,
											"end": 1667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 1667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1753,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1753,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6424,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6424,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 6424,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5695,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5536,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5536,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 5536,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 403,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 403,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 403,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 403,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 6089,
											"end": 6330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6089,
											"end": 6330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2314,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3812,
											"end": 3849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3849,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3791,
											"end": 3906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3791,
											"end": 3906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3937,
											"end": 3987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3987,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3994,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3937,
											"end": 3999,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3916,
											"end": 4045,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3916,
											"end": 4045,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4045,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3916,
											"end": 4045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2727AA1030903A393AB9BA32B21034B9B9BAB2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4101,
											"end": 4445,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3916,
											"end": 4045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 4076,
											"end": 4101,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4101,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4076,
											"end": 4101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 4055,
											"end": 4164,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 4055,
											"end": 4164,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4182,
											"end": 4205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 4238,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5040,
											"end": 5061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5097,
											"end": 5099,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5100,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5136,
											"end": 5166,
											"name": "PUSH",
											"source": 11,
											"value": "636C61696D20746F706963732063616E6E6F7420626520656D70747900000000"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5109,
											"end": 5167,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 5184,
											"end": 5202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4856,
											"end": 5208,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 4174,
											"end": 4238,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4267,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4348,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4298,
											"end": 4348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4348,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4298,
											"end": 4355,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4355,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4498,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4397,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4418,
											"end": 4498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4498,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4418,
											"end": 4501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4578,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4538,
											"end": 4602,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4501,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4538,
											"end": 4602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4636,
											"end": 4652,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4702,
											"end": 4742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4702,
											"end": 4783,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4783,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4742,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4744,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4702,
											"end": 4745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4745,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4702,
											"end": 4745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4783,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4677,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4677,
											"end": 5134,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4956,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4956,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4916,
											"end": 4956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4916,
											"end": 4956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4956,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4956,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 4998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4997,
											"end": 4998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4982,
											"end": 4994,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 4998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 4982,
											"end": 4998,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 4998,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 4982,
											"end": 4998,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 5020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4864,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 5020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4824,
											"end": 4913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 4913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4824,
											"end": 5020,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5082,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5042,
											"end": 5088,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5042,
											"end": 5088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5088,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5110,
											"end": 5115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5110,
											"end": 5115,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4677,
											"end": 5134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 4677,
											"end": 5134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4657,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 4654,
											"end": 4657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 4654,
											"end": 4657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 4654,
											"end": 4657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4657,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4654,
											"end": 4657,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4616,
											"end": 5148,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 5158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4383,
											"end": 5158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 4369,
											"end": 4372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4372,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4249,
											"end": 5158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5217,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 5167,
											"end": 5217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5217,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5167,
											"end": 5232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5167,
											"end": 5232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 5167,
											"end": 5232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5232,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5285,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5306,
											"end": 5351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5347,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5347,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5348,
											"end": 5349,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5335,
											"end": 5350,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5350,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5351,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5306,
											"end": 5372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5306,
											"end": 5372,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 5287,
											"end": 5290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5287,
											"end": 5290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5290,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5287,
											"end": 5290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5242,
											"end": 5383,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "EC753CFC52044F61676F18A11E500093A9F2B1CD5E4942BC476F2B0438159BCF"
										},
										{
											"begin": 5432,
											"end": 5444,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5444,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5397,
											"end": 5445,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5445,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 5452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7064,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7080,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7080,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7080,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7039,
											"end": 7080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7090,
											"end": 7155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7189,
											"end": 7195,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7185,
											"end": 7195,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7238,
											"end": 7249,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7231,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7220,
											"end": 7234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7234,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7220,
											"end": 7249,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7280,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7216,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 7197,
											"end": 7200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7197,
											"end": 7200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7165,
											"end": 7305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7321,
											"end": 7326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7314,
											"end": 7326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 7333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 5988,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5916,
											"end": 5937,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5916,
											"end": 5937,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 6000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5953,
											"end": 6000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5792,
											"end": 6007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2064,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2155,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2128,
											"end": 2158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2128,
											"end": 2158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2064,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 725,
											"end": 762,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 725,
											"end": 762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 704,
											"end": 819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 704,
											"end": 819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 850,
											"end": 900,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 850,
											"end": 900,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 850,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 850,
											"end": 900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 850,
											"end": 900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 850,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 850,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 850,
											"end": 900,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 850,
											"end": 900,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 850,
											"end": 907,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 850,
											"end": 912,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 967,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 829,
											"end": 967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 829,
											"end": 967,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6532,
											"end": 6534,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6573,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6551,
											"end": 6569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6641,
											"name": "PUSH",
											"source": 11,
											"value": "747275737465642049737375657220616C726561647920657869737473000000"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6590,
											"end": 6608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6583,
											"end": 6642,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 6659,
											"end": 6677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6330,
											"end": 6683,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 829,
											"end": 967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 998,
											"end": 1021,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6890,
											"end": 6892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6872,
											"end": 6893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 6931,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6902,
											"end": 6932,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 11,
											"value": "7472757374656420636C61696D20746F706963732063616E6E6F742062652065"
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6941,
											"end": 7003,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7037,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7012,
											"end": 7046,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7063,
											"end": 7082,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 7063,
											"end": 7082,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6688,
											"end": 7088,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 977,
											"end": 1083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1137,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1114,
											"end": 1139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1139,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1139,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1093,
											"end": 1202,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1093,
											"end": 1202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1233,
											"end": 1248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1233,
											"end": 1255,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1326,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1212,
											"end": 1326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1326,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7295,
											"end": 7297,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7277,
											"end": 7298,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7336,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7314,
											"end": 7332,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7307,
											"end": 7337,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7373,
											"end": 7407,
											"name": "PUSH",
											"source": 11,
											"value": "63616E6E6F742068617665206D6F7265207468616E2035302074727573746564"
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7371,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7346,
											"end": 7408,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2069737375657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7417,
											"end": 7455,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7472,
											"end": 7491,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 7472,
											"end": 7491,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 7093,
											"end": 7497,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1212,
											"end": 1326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "PUSH",
											"source": 8,
											"value": "8FF97419363FFD7000167F130EF7168FBEA05FAF9251824CA5043F113CC6A7C7"
										},
										{
											"begin": 1336,
											"end": 1372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1336,
											"end": 1372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1336,
											"end": 1372,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1336,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1432,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1382,
											"end": 1447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1447,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1447,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1382,
											"end": 1447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1382,
											"end": 1447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1382,
											"end": 1447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1462,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1477,
											"end": 1500,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1521,
											"end": 1566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1562,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1562,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1564,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1550,
											"end": 1565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1550,
											"end": 1565,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1566,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1587,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1505,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1502,
											"end": 1505,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1502,
											"end": 1505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 1502,
											"end": 1505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1505,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1505,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1502,
											"end": 1505,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1598,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1631,
											"end": 1645,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FEDC33FD34859594822C0FF6F3F4F9FC279CC6D5CAE53068F706A088E4500872"
										},
										{
											"begin": 1647,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1647,
											"end": 1659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 1612,
											"end": 1660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1935,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1935,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1877,
											"end": 1992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1877,
											"end": 1992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2023,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2073,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2080,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2085,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2085,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2131,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4285,
											"end": 4306,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4322,
											"end": 4340,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4315,
											"end": 4345,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2727AA1030903A393AB9BA32B21034B9B9BAB2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 4101,
											"end": 4445,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2002,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2158,
											"end": 2180,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2211,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2220,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2267,
											"end": 2281,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2281,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2262,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2245,
											"end": 2263,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2263,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2281,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2426,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2241,
											"end": 2426,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2338,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2347,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2338,
											"end": 2344,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2338,
											"end": 2348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 2338,
											"end": 2348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2322,
											"end": 2349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2349,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2317,
											"end": 2318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2301,
											"end": 2319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 2367,
											"end": 2388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2367,
											"end": 2388,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2406,
											"end": 2411,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2426,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 2241,
											"end": 2426,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2225,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2222,
											"end": 2225,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2222,
											"end": 2225,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2222,
											"end": 2225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2225,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2190,
											"end": 2436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2534,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2584,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2591,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2591,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2504,
											"end": 2591,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2647,
											"end": 2665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2668,
											"end": 2748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2748,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2668,
											"end": 2765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2866,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2668,
											"end": 2765,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2802,
											"end": 2866,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2916,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2900,
											"end": 2901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2900,
											"end": 2916,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2966,
											"end": 3006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 3047,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3047,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3007,
											"end": 3008,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 2966,
											"end": 3009,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3009,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2966,
											"end": 3009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3047,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 3398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2941,
											"end": 3398,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3220,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3220,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3180,
											"end": 3220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3220,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3220,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3220,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3261,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3246,
											"end": 3258,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 3246,
											"end": 3262,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3246,
											"end": 3262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 3246,
											"end": 3262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3180,
											"end": 3284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3128,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3180,
											"end": 3284,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3088,
											"end": 3177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3177,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3088,
											"end": 3284,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3346,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3306,
											"end": 3352,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3306,
											"end": 3352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3306,
											"end": 3352,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3374,
											"end": 3379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3374,
											"end": 3379,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 3398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 2941,
											"end": 3398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2921,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2918,
											"end": 2921,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2918,
											"end": 2921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2918,
											"end": 2921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2921,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2921,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2880,
											"end": 3412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 3422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 3422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2605,
											"end": 2622,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2445,
											"end": 3422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3438,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3488,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3431,
											"end": 3488,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3431,
											"end": 3488,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3431,
											"end": 3488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3431,
											"end": 3488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2214DED40113CC3FB63FC206CAFEE88270B0A903DAC7245D54EFDDE30EBB0321"
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3503,
											"end": 3539,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 3546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1753,
											"end": 3546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6632,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6657,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6664,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6669,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 7707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7743,
											"end": 7745,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7716,
											"end": 7746,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7812,
											"name": "PUSH",
											"source": 11,
											"value": "747275737465642049737375657220646F65736E277420657869737400000000"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7830,
											"end": 7848,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 7502,
											"end": 7854,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 6586,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6765,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6740,
											"end": 6790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6733,
											"end": 6790,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6424,
											"end": 6797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5695,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 5536,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5629,
											"end": 5650,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5673,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5666,
											"end": 5688,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5536,
											"end": 5695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 403,
											"end": 473,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 403,
											"end": 473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8061,
											"end": 8063,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8064,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8100,
											"end": 8102,
											"name": "PUSH",
											"source": 11,
											"value": "2E"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8080,
											"end": 8098,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8073,
											"end": 8103,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8139,
											"end": 8173,
											"name": "PUSH",
											"source": 11,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8119,
											"end": 8137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8112,
											"end": 8174,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8190,
											"end": 8208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8183,
											"end": 8227,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8244,
											"end": 8263,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8244,
											"end": 8263,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 7859,
											"end": 8269,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 450,
											"end": 466,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 450,
											"end": 464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 450,
											"end": 466,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 450,
											"end": 466,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 450,
											"end": 466,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8426,
											"end": 8462,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8426,
											"end": 8462,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8416,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8417,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 403,
											"end": 473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6195,
											"end": 6199,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6244,
											"name": "PUSH",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6253,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6260,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6219,
											"end": 6264,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6215,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6215,
											"end": 6302,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6089,
											"end": 6330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6215,
											"end": 6302,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 6215,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6089,
											"end": 6330,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6089,
											"end": 6330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2314,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2402,
											"end": 2424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8677,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2394,
											"end": 2467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8657,
											"end": 8678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8714,
											"end": 8716,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8717,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8753,
											"end": 8787,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8733,
											"end": 8751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8726,
											"end": 8788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8804,
											"end": 8822,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8804,
											"end": 8822,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8797,
											"end": 8833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8850,
											"end": 8869,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8850,
											"end": 8869,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 8473,
											"end": 8875,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2394,
											"end": 2467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 2496,
											"end": 2504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2477,
											"end": 2505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9082,
											"end": 9084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9064,
											"end": 9085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9064,
											"end": 9085,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9064,
											"end": 9085,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9101,
											"end": 9119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9094,
											"end": 9124,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9160,
											"end": 9194,
											"name": "PUSH",
											"source": 11,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9140,
											"end": 9158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9133,
											"end": 9195,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 8880,
											"end": 9236,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2755,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2846,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2853,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "109"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "274"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "274"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "275"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "276"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "276"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "238"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "277"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "276"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "280"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 159,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 14,
											"end": 159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 103,
											"end": 134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 103,
											"end": 134,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 93,
											"end": 135,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 93,
											"end": 135,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 83,
											"end": 153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 83,
											"end": 153,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 147,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 139,
											"end": 151,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 164,
											"end": 947,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 164,
											"end": 947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 278,
											"end": 284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 294,
											"end": 300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 349,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 335,
											"end": 344,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 326,
											"end": 333,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 322,
											"end": 345,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 318,
											"end": 350,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 315,
											"end": 367,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 315,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 315,
											"end": 367,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 361,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 353,
											"end": 365,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 315,
											"end": 367,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 315,
											"end": 367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 402,
											"end": 411,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 389,
											"end": 412,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 421,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 460,
											"end": 465,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 421,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 421,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 421,
											"end": 466,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 421,
											"end": 466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 485,
											"end": 490,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 541,
											"end": 543,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 526,
											"end": 544,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 513,
											"end": 545,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 564,
											"end": 582,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 594,
											"end": 608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 594,
											"end": 608,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 594,
											"end": 608,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 591,
											"end": 625,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 591,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 591,
											"end": 625,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 621,
											"end": 622,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 619,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 611,
											"end": 623,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 591,
											"end": 625,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 591,
											"end": 625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 659,
											"end": 665,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 648,
											"end": 657,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 644,
											"end": 666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 634,
											"end": 666,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 634,
											"end": 666,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 704,
											"end": 711,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 697,
											"end": 701,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 693,
											"end": 695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 689,
											"end": 702,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 685,
											"end": 712,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 675,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 675,
											"end": 730,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 724,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 716,
											"end": 728,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 675,
											"end": 730,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 675,
											"end": 730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 766,
											"end": 768,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 753,
											"end": 769,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 792,
											"end": 794,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 784,
											"end": 790,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 781,
											"end": 795,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 778,
											"end": 812,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 778,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 778,
											"end": 812,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 808,
											"end": 809,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 806,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 798,
											"end": 810,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 778,
											"end": 812,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 778,
											"end": 812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 861,
											"end": 868,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 856,
											"end": 858,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 852,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 843,
											"end": 844,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 839,
											"end": 853,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 835,
											"end": 837,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 831,
											"end": 854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 827,
											"end": 859,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 824,
											"end": 869,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 821,
											"end": 886,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 821,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 821,
											"end": 886,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 882,
											"end": 883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 872,
											"end": 884,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 821,
											"end": 886,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 821,
											"end": 886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 913,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 911,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 905,
											"end": 916,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 895,
											"end": 916,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 895,
											"end": 916,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 935,
											"end": 941,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 925,
											"end": 941,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 925,
											"end": 941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 164,
											"end": 947,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 164,
											"end": 947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 164,
											"end": 947,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 164,
											"end": 947,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 164,
											"end": 947,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 164,
											"end": 947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 952,
											"end": 1281,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 952,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1034,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1081,
											"end": 1083,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1078,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1056,
											"end": 1079,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1084,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1099,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 1049,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1146,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1194,
											"end": 1199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 1155,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1155,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1271,
											"end": 1273,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1243,
											"end": 1275,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 952,
											"end": 1281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1592,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1576,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1565,
											"end": 1588,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1593,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1652,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1478,
											"end": 1658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 2340,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 1663,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1926,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1975,
											"end": 1988,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1824,
											"end": 1828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1828,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2052,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2035,
											"end": 2053,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2053,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1824,
											"end": 1828,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2127,
											"end": 2140,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2198,
											"end": 2211,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2194,
											"end": 2233,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2234,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2234,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2289,
											"end": 2304,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2254,
											"end": 2266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2231,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2148,
											"end": 2157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 2119,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2331,
											"end": 2334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2331,
											"end": 2334,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1663,
											"end": 2340,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2553,
											"end": 2833,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2553,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2686,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2663,
											"end": 2670,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 2682,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2687,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2698,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2702,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 2652,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2749,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2797,
											"end": 2802,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 2758,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2758,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2827,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2553,
											"end": 2833,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2553,
											"end": 2833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2838,
											"end": 3470,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2838,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3011,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3061,
											"end": 3082,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3144,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3131,
											"end": 3144,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3153,
											"end": 3175,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3208,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2980,
											"end": 2984,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3289,
											"end": 3295,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3296,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3350,
											"end": 3363,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3338,
											"end": 3364,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3419,
											"end": 3434,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3304,
											"end": 3313,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 3275,
											"end": 3444,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 4096,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3741,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4021,
											"end": 4054,
											"name": "PUSH",
											"source": 11,
											"value": "696E76616C696420617267756D656E74202D207A65726F206164647265737300"
										},
										{
											"begin": 4016,
											"end": 4018,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 4055,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4851,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 4450,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4634,
											"end": 4655,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4655,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4655,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4691,
											"end": 4693,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4664,
											"end": 4694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4730,
											"end": 4764,
											"name": "PUSH",
											"source": 11,
											"value": "63616E6E6F742068617665206D6F7265207468616E20313520636C61696D2074"
										},
										{
											"begin": 4725,
											"end": 4727,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4710,
											"end": 4728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4765,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F70696373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4809,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4841,
											"end": 4844,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4826,
											"end": 4845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5340,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 5213,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5284,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5269,
											"end": 5272,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5265,
											"end": 5285,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5305,
											"end": 5309,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5295,
											"end": 5310,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5333,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5326,
											"end": 5327,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5334,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5345,
											"end": 5472,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5345,
											"end": 5472,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5406,
											"end": 5416,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5401,
											"end": 5404,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5397,
											"end": 5417,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5387,
											"end": 5418,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5437,
											"end": 5441,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5434,
											"end": 5435,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5427,
											"end": 5442,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5461,
											"end": 5465,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5458,
											"end": 5459,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5466,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5477,
											"end": 5605,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 5477,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5553,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5565,
											"end": 5576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5565,
											"end": 5576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5565,
											"end": 5576,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5562,
											"end": 5599,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5562,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5562,
											"end": 5599,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5579,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5610,
											"end": 5737,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 5610,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5671,
											"end": 5681,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5662,
											"end": 5682,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5683,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5702,
											"end": 5706,
											"name": "PUSH",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5692,
											"end": 5707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5726,
											"end": 5730,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5723,
											"end": 5724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5716,
											"end": 5731,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5877,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5742,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5781,
											"end": 5784,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5802,
											"end": 5819,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5802,
											"end": 5819,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5802,
											"end": 5819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 5799,
											"end": 5842,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5822,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5869,
											"end": 5870,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5858,
											"end": 5871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5742,
											"end": 5877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5882,
											"end": 6325,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 5882,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6071,
											"end": 6073,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6117,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6083,
											"end": 6117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6160,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6129,
											"end": 6160,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6163,
											"end": 6175,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 6126,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6207,
											"end": 6213,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6204,
											"end": 6205,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6200,
											"end": 6214,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6256,
											"end": 6262,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6251,
											"end": 6253,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6249,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6271,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6292,
											"end": 6314,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6319,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6288,
											"end": 6319,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5882,
											"end": 6325,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5882,
											"end": 6325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9241,
											"end": 9648,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 9241,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9443,
											"end": 9445,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9425,
											"end": 9446,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9425,
											"end": 9446,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9425,
											"end": 9446,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9482,
											"end": 9484,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9462,
											"end": 9480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9455,
											"end": 9485,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9521,
											"end": 9555,
											"name": "PUSH",
											"source": 11,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 9516,
											"end": 9518,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9501,
											"end": 9519,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9501,
											"end": 9519,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9494,
											"end": 9556,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9587,
											"end": 9589,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9572,
											"end": 9590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9572,
											"end": 9590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9565,
											"end": 9606,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9638,
											"end": 9641,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9623,
											"end": 9642,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9623,
											"end": 9642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9241,
											"end": 9648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol",
								"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/erc3643/registry/storage/TIRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"init()": "e1c7392a",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"owner()": "8da5cb5b",
							"removeTrustedIssuer(address)": "b93d28eb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTrustedIssuer(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-addTrustedIssuer}.\"},\"getTrustedIssuerClaimTopics(address)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}.\"},\"getTrustedIssuers()\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuers}.\"},\"getTrustedIssuersForClaimTopic(uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}.\"},\"hasClaimTopic(address,uint256)\":{\"details\":\"See {ITrustedIssuersRegistry-hasClaimTopic}.\"},\"isTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-isTrustedIssuer}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeTrustedIssuer(address)\":{\"details\":\"See {ITrustedIssuersRegistry-removeTrustedIssuer}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateIssuerClaimTopics(address,uint256[])\":{\"details\":\"See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":\"TrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol\":{\"keccak256\":\"0x97d80796bb381e201c7658f2b4e2e0fcab1a116e6d4821e43c67d25fefe36f46\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cc36de414334c64b4f253beab644de4530207c1eb3474b31e47c5d268f8a35e9\",\"dweb:/ipfs/QmaGdRNUrWotCyTMaMrcSAmMY6CUoicCyjhz4T9oxSh1ua\"]},\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]},\"erc3643/erc3643/registry/storage/TIRStorage.sol\":{\"keccak256\":\"0x030b233ec7ba802db48eccbaef736efc0047922c7f78fcf9cbee8b2f55881bce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e719a094c92d3d302951ace40ecb5e772d1b25128f16810a15bed6bbcc476173\",\"dweb:/ipfs/QmR9YRWagjaYZntTUMDUjkcjPhPvzSE8eibPb1XRAkD3hN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 465,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 995,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 334,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 454,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1691,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_trustedIssuers",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_contract(IClaimIssuer)59)dyn_storage"
							},
							{
								"astId": 1696,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_trustedIssuerClaimTopics",
								"offset": 0,
								"slot": "102",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1702,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "_claimTopicsToTrustedIssuers",
								"offset": 0,
								"slot": "103",
								"type": "t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)59)dyn_storage)"
							},
							{
								"astId": 1706,
								"contract": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol:TrustedIssuersRegistry",
								"label": "__gap",
								"offset": 0,
								"slot": "104",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IClaimIssuer)59)dyn_storage": {
								"base": "t_contract(IClaimIssuer)59",
								"encoding": "dynamic_array",
								"label": "contract IClaimIssuer[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IClaimIssuer)59": {
								"encoding": "inplace",
								"label": "contract IClaimIssuer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)59)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => contract IClaimIssuer[])",
								"numberOfBytes": "32",
								"value": "t_array(t_contract(IClaimIssuer)59)dyn_storage"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"ITrustedIssuersRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "ClaimTopicsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "TrustedIssuerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "contract IClaimIssuer",
									"name": "trustedIssuer",
									"type": "address"
								}
							],
							"name": "TrustedIssuerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "addTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "getTrustedIssuerClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedIssuers",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "getTrustedIssuersForClaimTopic",
							"outputs": [
								{
									"internalType": "contract IClaimIssuer[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "hasClaimTopic",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_issuer",
									"type": "address"
								}
							],
							"name": "isTrustedIssuer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								}
							],
							"name": "removeTrustedIssuer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IClaimIssuer",
									"name": "_trustedIssuer",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_claimTopics",
									"type": "uint256[]"
								}
							],
							"name": "updateIssuerClaimTopics",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTrustedIssuer(address,uint256[])": "9f63ea98",
							"getTrustedIssuerClaimTopics(address)": "c28fb278",
							"getTrustedIssuers()": "d9dd24c5",
							"getTrustedIssuersForClaimTopic(uint256)": "52c111d1",
							"hasClaimTopic(address,uint256)": "34a89987",
							"isTrustedIssuer(address)": "ef2ed1a4",
							"removeTrustedIssuer(address)": "b93d28eb",
							"updateIssuerClaimTopics(address,uint256[])": "04bc7e84"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"ClaimTopicsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"TrustedIssuerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IClaimIssuer\",\"name\":\"trustedIssuer\",\"type\":\"address\"}],\"name\":\"TrustedIssuerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"addTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"getTrustedIssuerClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedIssuers\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"getTrustedIssuersForClaimTopic\",\"outputs\":[{\"internalType\":\"contract IClaimIssuer[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"hasClaimTopic\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"isTrustedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"}],\"name\":\"removeTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"}],\"name\":\"updateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":\"ITrustedIssuersRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x461f5ba0f4e76ee6106a484a2d010009aa540202cb5c917a6ee9f91ae42351c2\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6d8abd21d71763eade0cd28deb6f93e3fcbce49bfca2e2e2d8e983755534e34\",\"dweb:/ipfs/QmcYoXQ5AujdqVnJDjBSygDTibum4WMubZKeUt98uiT6P9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"erc3643/erc3643/registry/storage/TIRStorage.sol": {
				"TIRStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"erc3643/erc3643/registry/storage/TIRStorage.sol\":131:611  contract TIRStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"erc3643/erc3643/registry/storage/TIRStorage.sol\":131:611  contract TIRStorage {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e42fc5b2dedc2d90482d9d1665b82825f655a01a131474c3b542d1b22a24dd9164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220e42fc5b2dedc2d90482d9d1665b82825f655a01a131474c3b542d1b22a24dd9164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x2F 0xC5 0xB2 0xDE 0xDC 0x2D SWAP1 BASEFEE 0x2D SWAP14 AND PUSH6 0xB82825F655A0 BYTE SGT EQ PUSH21 0xC3B542D1B22A24DD9164736F6C6343000811003300 ",
							"sourceMap": "131:480:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220e42fc5b2dedc2d90482d9d1665b82825f655a01a131474c3b542d1b22a24dd9164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x2F 0xC5 0xB2 0xDE 0xDC 0x2D SWAP1 BASEFEE 0x2D SWAP14 AND PUSH6 0xB82825F655A0 BYTE SGT EQ PUSH21 0xC3B542D1B22A24DD9164736F6C6343000811003300 ",
							"sourceMap": "131:480:10:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 131,
									"end": 611,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 131,
									"end": 611,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e42fc5b2dedc2d90482d9d1665b82825f655a01a131474c3b542d1b22a24dd9164736f6c63430008110033",
									".code": [
										{
											"begin": 131,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 131,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 131,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 611,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 131,
											"end": 611,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
								"@onchain-id/solidity/contracts/interface/IERC734.sol",
								"@onchain-id/solidity/contracts/interface/IERC735.sol",
								"@onchain-id/solidity/contracts/interface/IIdentity.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol",
								"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
								"erc3643/erc3643/registry/storage/TIRStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc3643/erc3643/registry/storage/TIRStorage.sol\":\"TIRStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xa7372faa967bc7eaedf66ec51907a21ca789123ad8a6fd371b32f2d2a6f27817\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dcf7cf65c7aff1f78a9071c47b05865c0fbce9d7c965430e8438ba7a451a2ba4\",\"dweb:/ipfs/QmViSrFA2KQpFeWssbJWQtdpa62A9MeEWaxqgs8dyPssga\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x419198390ae57e3a090a454452931ac8a6605acfd296809c43d4966c9cea2d19\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f8c7d8d74a6e7dff2858abd7f10aefe1cc88bb629ec6a0c164e4043e2c70eb7\",\"dweb:/ipfs/QmRg2WFW8T2YEt1zJ7PGSAFxcu1L46pNWxm6MZbuN7M4Qc\"]},\"erc3643/erc3643/registry/storage/TIRStorage.sol\":{\"keccak256\":\"0x030b233ec7ba802db48eccbaef736efc0047922c7f78fcf9cbee8b2f55881bce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e719a094c92d3d302951ace40ecb5e772d1b25128f16810a15bed6bbcc476173\",\"dweb:/ipfs/QmR9YRWagjaYZntTUMDUjkcjPhPvzSE8eibPb1XRAkD3hN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1691,
								"contract": "erc3643/erc3643/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "_trustedIssuers",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_contract(IClaimIssuer)59)dyn_storage"
							},
							{
								"astId": 1696,
								"contract": "erc3643/erc3643/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "_trustedIssuerClaimTopics",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 1702,
								"contract": "erc3643/erc3643/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "_claimTopicsToTrustedIssuers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)59)dyn_storage)"
							},
							{
								"astId": 1706,
								"contract": "erc3643/erc3643/registry/storage/TIRStorage.sol:TIRStorage",
								"label": "__gap",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_contract(IClaimIssuer)59)dyn_storage": {
								"base": "t_contract(IClaimIssuer)59",
								"encoding": "dynamic_array",
								"label": "contract IClaimIssuer[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IClaimIssuer)59": {
								"encoding": "inplace",
								"label": "contract IClaimIssuer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_uint256,t_array(t_contract(IClaimIssuer)59)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => contract IClaimIssuer[])",
								"numberOfBytes": "32",
								"value": "t_array(t_contract(IClaimIssuer)59)dyn_storage"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 60,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:0"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
							"file": "./IIdentity.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 60,
							"sourceUnit": 324,
							"src": "61:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IIdentity",
										"nameLocations": [
											"114:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "114:9:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "114:9:0"
								}
							],
							"canonicalName": "IClaimIssuer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 59,
							"linearizedBaseContracts": [
								59,
								323,
								314,
								206
							],
							"name": "IClaimIssuer",
							"nameLocation": "98:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "131:126:0",
										"text": " @dev Emitted when a claim is revoked.\n Specification: MUST be triggered when revoking a claim."
									},
									"eventSelector": "7f484e37f24c0a92f81dd74afa3027b3ea31f2e9fb6b9fa29fe9865f81ac5569",
									"id": 9,
									"name": "ClaimRevoked",
									"nameLocation": "268:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "295:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "281:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 6,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "280:25:0"
									},
									"src": "262:44:0"
								},
								{
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "312:351:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @notice will fetch the claim from the identity contract (unsafe).\n @param _claimId the id of the claim\n @param _identity the address of the identity contract\n @return isRevoked true when the claim is revoked"
									},
									"functionSelector": "73c33708",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaim",
									"nameLocation": "677:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 11,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "715:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "707:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:37:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "743:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "743:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:6:0"
									},
									"scope": 59,
									"src": "668:81:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "755:169:0",
										"text": " @dev Revoke a claim previously issued, the claim is no longer considered as valid after revocation.\n @param signature the signature of the claim"
									},
									"functionSelector": "9f7f9edd",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeClaimBySignature",
									"nameLocation": "938:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "976:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "961:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 21,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "961:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:26:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "995:0:0"
									},
									"scope": 59,
									"src": "929:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1002:181:0",
										"text": " @dev Returns revocation status of a claim.\n @param _sig the signature of the claim\n @return isRevoked true if the claim is revoked and false otherwise"
									},
									"functionSelector": "2646b264",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimRevoked",
									"nameLocation": "1197:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_sig",
												"nameLocation": "1227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1212:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:21:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:6:0"
									},
									"scope": 59,
									"src": "1188:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1268:334:0",
										"text": " @dev Checks if a claim is valid.\n @param _identity the identity contract related to the claim\n @param claimTopic the claim topic of the claim\n @param sig the signature of the claim\n @param data the data field of the claim\n @return claimValid true if the claim is valid, false otherwise"
									},
									"functionSelector": "c0969a6e",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isClaimValid",
									"nameLocation": "1616:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_identity",
												"nameLocation": "1648:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1638:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIdentity_$323",
													"typeString": "contract IIdentity"
												},
												"typeName": {
													"id": 36,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 35,
														"name": "IIdentity",
														"nameLocations": [
															"1638:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "1638:9:0"
													},
													"referencedDeclaration": 323,
													"src": "1638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIdentity_$323",
														"typeString": "contract IIdentity"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1675:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1667:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1695:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1723:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 42,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1723:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:115:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "1771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1770:6:0"
									},
									"scope": 59,
									"src": "1607:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "1783:240:0",
										"text": " @dev returns the address that signed the given data\n @param sig the signature of the data\n @param dataHash the data that was signed\n returns the address that signed dataHash and created the signature sig"
									},
									"functionSelector": "c3b129e3",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRecoveredAddress",
									"nameLocation": "2037:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "2072:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2057:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 50,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2057:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "dataHash",
												"nameLocation": "2085:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2077:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:38:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2118:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:9:0"
									},
									"scope": 59,
									"src": "2028:99:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 60,
							"src": "88:2041:0",
							"usedErrors": []
						}
					],
					"src": "36:2094:0"
				},
				"id": 0
			},
			"@onchain-id/solidity/contracts/interface/IERC734.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						]
					},
					"id": 207,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 61,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC734",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 62,
								"nodeType": "StructuredDocumentation",
								"src": "61:84:1",
								"text": " @dev interface of the ERC734 (Key Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 206,
							"linearizedBaseContracts": [
								206
							],
							"name": "IERC734",
							"nameLocation": "156:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "171:156:1",
										"text": " @dev Emitted when an execution request was approved.\n Specification: MUST be triggered when approve was successfully called."
									},
									"eventSelector": "b3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8",
									"id": 69,
									"name": "Approved",
									"nameLocation": "338:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "363:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "347:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "381:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "376:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:44:1"
									},
									"src": "332:59:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "397:214:1",
										"text": " @dev Emitted when an execute operation was approved and successfully performed.\n Specification: MUST be triggered when approve was called and the execution was successfully approved."
									},
									"eventSelector": "1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b8",
									"id": 80,
									"name": "Executed",
									"nameLocation": "622:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "647:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "631:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "676:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "680:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "709:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "703:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "630:84:1"
									},
									"src": "616:99:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "721:171:1",
										"text": " @dev Emitted when an execution request was performed via `execute`.\n Specification: MUST be triggered when execute was successfully called."
									},
									"eventSelector": "8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8",
									"id": 91,
									"name": "ExecutionRequested",
									"nameLocation": "903:18:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "938:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "922:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "967:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "951:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "987:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "971:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1000:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "994:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 88,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "994:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:84:1"
									},
									"src": "897:109:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1012:151:1",
										"text": " @dev Emitted when an execute operation was called and failed\n Specification: MUST be triggered when execute call failed"
									},
									"eventSelector": "e10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68",
									"id": 102,
									"name": "ExecutionFailed",
									"nameLocation": "1174:15:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "1206:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1190:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1235:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1219:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1255:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1239:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1268:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1262:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1262:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:84:1"
									},
									"src": "1168:106:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1280:153:1",
										"text": " @dev Emitted when a key was added to the Identity.\n Specification: MUST be triggered when addKey was successfully called."
									},
									"eventSelector": "480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9",
									"id": 111,
									"name": "KeyAdded",
									"nameLocation": "1444:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1469:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1453:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 104,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1490:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1474:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1515:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1499:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1499:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:71:1"
									},
									"src": "1438:86:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1530:160:1",
										"text": " @dev Emitted when a key was removed from the Identity.\n Specification: MUST be triggered when removeKey was successfully called."
									},
									"eventSelector": "585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397",
									"id": 120,
									"name": "KeyRemoved",
									"nameLocation": "1701:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "1728:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1712:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1712:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "purpose",
												"nameLocation": "1749:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1733:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "1774:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1758:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1711:71:1"
									},
									"src": "1695:88:1"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1789:319:1",
										"text": " @dev Adds a _key to the identity. The _purpose specifies the purpose of the key.\n Triggers Event: `KeyAdded`\n Specification: MUST only be done by keys of purpose 1, or the identity\n itself. If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "1d381240",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addKey",
									"nameLocation": "2122:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2137:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2129:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_keyType",
												"nameLocation": "2169:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2161:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:50:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2202:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2197:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 129,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2197:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:14:1"
									},
									"scope": 206,
									"src": "2113:98:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2217:201:1",
										"text": " @dev Approves an execution.\n Triggers Event: `Approved`\n Triggers on execution successful Event: `Executed`\n Triggers on execution failure Event: `ExecutionFailed`"
									},
									"functionSelector": "747442d3",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2432:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "2448:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2440:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_approve",
												"nameLocation": "2458:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2453:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:28:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2491:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2486:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2486:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2485:14:1"
									},
									"scope": 206,
									"src": "2423:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2506:290:1",
										"text": " @dev Removes _purpose for _key from the identity.\n Triggers Event: `KeyRemoved`\n Specification: MUST only be done by keys of purpose 1, or the identity itself.\n If it's the identity itself, the approval process will determine its approval."
									},
									"functionSelector": "53d413c5",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeKey",
									"nameLocation": "2810:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "2828:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2820:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "2842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2834:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2834:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:32:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2870:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2870:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2869:14:1"
									},
									"scope": 206,
									"src": "2801:83:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "2890:481:1",
										"text": " @dev Passes an execution instruction to an ERC734 identity.\n How the execution is handled is up to the identity implementation:\n An execution COULD be requested and require `approve` to be called with one or more keys of purpose 1 or 2 to\n approve this execution.\n Execute COULD be used as the only accessor for `addKey` and `removeKey`.\n Triggers Event: ExecutionRequested\n Triggers on direct execution Event: Executed"
									},
									"functionSelector": "b61d27f6",
									"id": 164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "3385:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3401:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3393:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3414:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3406:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3437:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3422:20:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:51:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "executionId",
												"nameLocation": "3478:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3470:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:21:1"
									},
									"scope": 206,
									"src": "3376:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3497:78:1",
										"text": " @dev Returns the full key data, if present in the identity."
									},
									"functionSelector": "12aaac70",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKey",
									"nameLocation": "3589:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3604:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3596:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:14:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "purposes",
												"nameLocation": "3650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3633:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3633:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ArrayTypeName",
													"src": "3633:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "keyType",
												"nameLocation": "3668:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3660:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3685:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3677:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:57:1"
									},
									"scope": 206,
									"src": "3580:110:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "3696:75:1",
										"text": " @dev Returns the list of purposes associated with a key."
									},
									"functionSelector": "fb307b34",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeyPurposes",
									"nameLocation": "3785:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "3808:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3800:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3799:14:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_purposes",
												"nameLocation": "3853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3836:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 182,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"nodeType": "ArrayTypeName",
													"src": "3836:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3835:28:1"
									},
									"scope": 206,
									"src": "3776:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3870:85:1",
										"text": " @dev Returns an array of public key bytes32 held by this identity."
									},
									"functionSelector": "9010f726",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getKeysByPurpose",
									"nameLocation": "3969:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "3994:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3986:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3986:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:18:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "keys",
												"nameLocation": "4044:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4027:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 191,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4027:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 192,
													"nodeType": "ArrayTypeName",
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:23:1"
									},
									"scope": 206,
									"src": "3960:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4056:127:1",
										"text": " @dev Returns TRUE if a key is present and has the given purpose. If the key is not present it returns FALSE."
									},
									"functionSelector": "d202158d",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "keyHasPurpose",
									"nameLocation": "4197:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "_key",
												"nameLocation": "4219:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4211:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 197,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "_purpose",
												"nameLocation": "4233:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4225:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:32:1"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "4271:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4266:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:13:1"
									},
									"scope": 206,
									"src": "4188:91:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 207,
							"src": "146:4135:1",
							"usedErrors": []
						}
					],
					"src": "36:4246:1"
				},
				"id": 1
			},
			"@onchain-id/solidity/contracts/interface/IERC735.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
					"exportedSymbols": {
						"IERC735": [
							314
						]
					},
					"id": 315,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC735",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 209,
								"nodeType": "StructuredDocumentation",
								"src": "61:86:2",
								"text": " @dev interface of the ERC735 (Claim Holder) standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 314,
							"linearizedBaseContracts": [
								314
							],
							"name": "IERC735",
							"nameLocation": "158:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "173:139:2",
										"text": " @dev Emitted when a claim was added.\n Specification: MUST be triggered when a claim was successfully added."
									},
									"eventSelector": "46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5",
									"id": 226,
									"name": "ClaimAdded",
									"nameLocation": "323:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "359:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "343:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "392:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "376:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "447:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "431:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "469:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "463:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "494:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "488:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 221,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "515:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "508:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:186:2"
									},
									"src": "317:203:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "526:146:2",
										"text": " @dev Emitted when a claim was removed.\n Specification: MUST be triggered when removeClaim was successfully called."
									},
									"eventSelector": "3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a",
									"id": 243,
									"name": "ClaimRemoved",
									"nameLocation": "683:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "721:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "705:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "738:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "777:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "769:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "809:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "793:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "831:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "825:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "856:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "850:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "850:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "877:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "870:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "870:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:186:2"
									},
									"src": "677:205:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "888:166:2",
										"text": " @dev Emitted when a claim was changed.\n Specification: MUST be triggered when addClaim was successfully called on an existing claimId."
									},
									"eventSelector": "3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b13",
									"id": 260,
									"name": "ClaimChanged",
									"nameLocation": "1065:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimId",
												"nameLocation": "1103:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1087:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 245,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"indexed": true,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "1136:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1120:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"indexed": false,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "1159:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1151:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1191:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1175:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": false,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1213:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1207:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1207:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1238:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1232:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1232:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "1259:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1252:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:186:2"
									},
									"src": "1059:205:2"
								},
								{
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "1270:438:2",
										"text": " @dev Add or update a claim.\n Triggers Event: `ClaimAdded`, `ClaimChanged`\n Specification: Add or update a claim from an issuer.\n _signature is a signed message of the following structure:\n `keccak256(abi.encode(address identityHolder_address, uint256 topic, bytes data))`.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address + uint256 topic))`."
									},
									"functionSelector": "b1a34e0d",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaim",
									"nameLocation": "1722:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "1748:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1740:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1740:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "_scheme",
												"nameLocation": "1772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "1797:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1789:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "1828:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1813:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1813:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1863:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1848:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1878:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:169:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "claimRequestId",
												"nameLocation": "1930:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1922:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 275,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:24:2"
									},
									"scope": 314,
									"src": "1713:233:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1952:193:2",
										"text": " @dev Removes a claim.\n Triggers Event: `ClaimRemoved`\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "4eee424a",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaim",
									"nameLocation": "2159:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2179:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2171:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 280,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:18:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2212:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2207:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2206:14:2"
									},
									"scope": 314,
									"src": "2150:71:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2227:154:2",
										"text": " @dev Get a claim by its ID.\n Claim IDs are generated using `keccak256(abi.encode(address issuer_address, uint256 topic))`."
									},
									"functionSelector": "c9100bcb",
									"id": 304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaim",
									"nameLocation": "2395:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_claimId",
												"nameLocation": "2412:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2404:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2403:18:2"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "topic",
												"nameLocation": "2465:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2457:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "scheme",
												"nameLocation": "2488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "issuer",
												"nameLocation": "2512:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2504:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2504:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2541:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2528:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 297,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2528:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2573:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2560:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2560:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "2601:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "2587:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:158:2"
									},
									"scope": 314,
									"src": "2386:220:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "2612:63:2",
										"text": " @dev Returns an array of claim IDs by topic."
									},
									"functionSelector": "80e9e9e1",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimIdsByTopic",
									"nameLocation": "2689:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_topic",
												"nameLocation": "2716:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2708:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2707:16:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "claimIds",
												"nameLocation": "2763:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2746:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 309,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 310,
													"nodeType": "ArrayTypeName",
													"src": "2746:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2745:27:2"
									},
									"scope": 314,
									"src": "2680:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 315,
							"src": "148:2627:2",
							"usedErrors": []
						}
					],
					"src": "36:2740:2"
				},
				"id": 2
			},
			"@onchain-id/solidity/contracts/interface/IIdentity.sol": {
				"ast": {
					"absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
					"exportedSymbols": {
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						]
					},
					"id": 324,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 316,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:3"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC734.sol",
							"file": "./IERC734.sol",
							"id": 317,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 207,
							"src": "61:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IERC735.sol",
							"file": "./IERC735.sol",
							"id": 318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 315,
							"src": "85:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 319,
										"name": "IERC734",
										"nameLocations": [
											"178:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "178:7:3"
									},
									"id": 320,
									"nodeType": "InheritanceSpecifier",
									"src": "178:7:3"
								},
								{
									"baseName": {
										"id": 321,
										"name": "IERC735",
										"nameLocations": [
											"187:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 314,
										"src": "187:7:3"
									},
									"id": 322,
									"nodeType": "InheritanceSpecifier",
									"src": "187:7:3"
								}
							],
							"canonicalName": "IIdentity",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 323,
							"linearizedBaseContracts": [
								323,
								314,
								206
							],
							"name": "IIdentity",
							"nameLocation": "165:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 324,
							"src": "155:42:3",
							"usedErrors": []
						}
					],
					"src": "36:162:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"Initializable": [
							624
						],
						"OwnableUpgradeable": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 997,
							"src": "127:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 327,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 625,
							"src": "169:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 329,
										"name": "Initializable",
										"nameLocations": [
											"748:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "748:13:4"
									},
									"id": 330,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:4"
								},
								{
									"baseName": {
										"id": 331,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 996,
										"src": "763:18:4"
									},
									"id": 332,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:4"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455,
								996,
								624
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "788:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 340,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "844:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "875:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:4"
									},
									"src": "817:84:4"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "1055:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 346,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1065:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:4"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 343,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1038:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:4"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:4"
									},
									"scope": 455,
									"src": "1003:95:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "1166:49:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 356,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "1195:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 355,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "1176:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:4"
											}
										]
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 353,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 352,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1149:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:4"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:4"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:4"
									},
									"scope": 455,
									"src": "1104:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1324:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 364,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "1334:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:4"
											},
											{
												"id": 367,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:4"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 369,
									"name": "onlyOwner",
									"nameLocation": "1312:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:4"
									},
									"src": "1303:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1496:30:4",
										"statements": [
											{
												"expression": {
													"id": 375,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "1513:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 374,
												"id": 376,
												"nodeType": "Return",
												"src": "1506:13:4"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1487:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:4"
									},
									"scope": 455,
									"src": "1441:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "1644:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 383,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "1662:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 385,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1673:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:4"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:4"
									},
									"scope": 455,
									"src": "1599:130:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "2118:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2155:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2147:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 399,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2147:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2147:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 398,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2128:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2128:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "2128:30:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1735:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nameLocations": [
													"2108:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2108:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2108:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2073:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2118:0:4"
									},
									"scope": 455,
									"src": "2064:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "2384:128:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 415,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "2402:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2414:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 416,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2414:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2414:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2426:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2394:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2394:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "2394:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "2496:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "2477:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2477:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2477:28:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "2171:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 411,
												"name": "onlyOwner",
												"nameLocations": [
													"2374:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "2374:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2323:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2349:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2341:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:18:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:0:4"
									},
									"scope": 455,
									"src": "2314:198:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "2729:124:4",
										"statements": [
											{
												"assignments": [
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2747:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "2739:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 435,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2739:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"id": 437,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2758:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2739:25:4"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 439,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2774:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2783:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2774:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "2774:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 444,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "2827:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 445,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2837:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 443,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2806:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "EmitStatement",
												"src": "2801:45:4"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "2518:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2675:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2702:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "2694:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:4"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:4"
									},
									"scope": 455,
									"src": "2666:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "2859:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 454,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3138:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "3118:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 451,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3118:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 453,
										"length": {
											"hexValue": "3439",
											"id": 452,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3126:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3118:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 456,
							"src": "708:2438:4",
							"usedErrors": []
						}
					],
					"src": "102:3045:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"Initializable": [
							624
						]
					},
					"id": 625,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 625,
							"sourceUnit": 955,
							"src": "138:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:5",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 624,
							"linearizedBaseContracts": [
								624
							],
							"name": "Initializable",
							"nameLocation": "2412:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:5",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 462,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "2546:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 461,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:5",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 465,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 624,
									"src": "2675:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 464,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:5",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 470,
									"name": "Initialized",
									"nameLocation": "2809:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2821:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 467,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:5"
									},
									"src": "2803:33:5"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3269:483:5",
										"statements": [
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "3279:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 473,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:5",
													"subExpression": {
														"id": 475,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "3302:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 479,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "3347:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 480,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "3365:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:5",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 489,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$624",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$624",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 488,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 487,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 490,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 485,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 954,
																						"src": "3388:18:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$954_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:5",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 642,
																					"src": "3388:29:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 491,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 493,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "3436:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 497,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:5"
											},
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3536:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:5"
											},
											{
												"condition": {
													"id": 506,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "3566:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 512,
												"nodeType": "IfStatement",
												"src": "3562:65:5",
												"trueBody": {
													"id": 511,
													"nodeType": "Block",
													"src": "3582:45:5",
													"statements": [
														{
															"expression": {
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 507,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "3596:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:5"
														}
													]
												}
											},
											{
												"id": 513,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:5"
											},
											{
												"condition": {
													"id": 514,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "3651:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "3647:99:5",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "3667:79:5",
													"statements": [
														{
															"expression": {
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 515,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "3681:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 518,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 519,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "3721:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 522,
															"nodeType": "EmitStatement",
															"src": "3716:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:5",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 526,
									"name": "initializer",
									"nameLocation": "3255:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:5"
									},
									"src": "3246:506:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "4863:255:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:5",
																"subExpression": {
																	"id": 532,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "4882:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "4899:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 535,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "4914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:5"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 541,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "4982:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 542,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4997:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:5"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 545,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5014:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:5"
											},
											{
												"id": 549,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:5"
											},
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5055:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "5103:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 554,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "5091:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "EmitStatement",
												"src": "5086:25:5"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:5",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 559,
									"name": "reinitializer",
									"nameLocation": "4834:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4848:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 528,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:5"
									},
									"src": "4825:293:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "5356:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "5374:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:5"
											},
											{
												"id": 567,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:5"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:5",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 569,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:5"
									},
									"src": "5328:125:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5988:231:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:5",
															"subExpression": {
																"id": 574,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6007:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 579,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "6078:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 581,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 580,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 603,
												"nodeType": "IfStatement",
												"src": "6074:139:5",
												"trueBody": {
													"id": 602,
													"nodeType": "Block",
													"src": "6111:102:5",
													"statements": [
														{
															"expression": {
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 586,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6125:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 588,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 587,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:5",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 597,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 596,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 595,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:5",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 594,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6174:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 601,
															"nodeType": "EmitStatement",
															"src": "6169:33:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:5",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:5"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:5"
									},
									"scope": 624,
									"src": "5939:280:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "6393:36:5",
										"statements": [
											{
												"expression": {
													"id": 611,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 462,
													"src": "6410:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 610,
												"id": 612,
												"nodeType": "Return",
												"src": "6403:19:5"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:5",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:5"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "6386:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 608,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:5"
									},
									"scope": 624,
									"src": "6329:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "6601:37:5",
										"statements": [
											{
												"expression": {
													"id": 620,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 465,
													"src": "6618:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 619,
												"id": 621,
												"nodeType": "Return",
												"src": "6611:20:5"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:5",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "6595:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:5"
									},
									"scope": 624,
									"src": "6545:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 625,
							"src": "2394:4246:5",
							"usedErrors": []
						}
					],
					"src": "113:6528:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 626,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 627,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 954,
							"linearizedBaseContracts": [
								954
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1489:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 635,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "1713:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 634,
												"id": 640,
												"nodeType": "Return",
												"src": "1706:30:6"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1443:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:6"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1483:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:6"
									},
									"scope": 954,
									"src": "1423:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "2729:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 653,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 651,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 656,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2772:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:6"
											},
											{
												"assignments": [
													662,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "2824:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 661,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 669,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 663,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "2842:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 665,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "2864:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "2893:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:6"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2677:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "2704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:6"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:6"
									},
									"scope": 954,
									"src": "2658:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "3801:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "3840:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 688,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "3848:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 686,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "3818:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 685,
												"id": 692,
												"nodeType": "Return",
												"src": "3811:79:6"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3734:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3750:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3787:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:6"
									},
									"scope": 954,
									"src": "3712:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "4266:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 707,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "4305:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4313:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 710,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "4322:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 706,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "4283:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 705,
												"id": 712,
												"nodeType": "Return",
												"src": "4276:59:6"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4150:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4174:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4201:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:6"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "4252:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:6"
									},
									"scope": 954,
									"src": "4119:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "4817:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "4856:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "4864:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 729,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "4870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 726,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															778
														],
														"referencedDeclaration": 778,
														"src": "4834:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 725,
												"id": 732,
												"nodeType": "Return",
												"src": "4827:94:6"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4735:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4751:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 718,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4770:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:6"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "4803:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:6"
									},
									"scope": 954,
									"src": "4704:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "5355:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 751,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$954",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 749,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 754,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5398:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 748,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:6"
											},
											{
												"assignments": [
													760,
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5457:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 759,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "5471:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 761,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"id": 767,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "5524:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 763,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "5498:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 765,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "5517:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "5573:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "5581:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 773,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "5590:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 774,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "5602:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 770,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "5546:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 747,
												"id": 776,
												"nodeType": "Return",
												"src": "5539:76:6"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5216:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5240:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5290:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:6"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "5341:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 745,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:6"
									},
									"scope": 954,
									"src": "5176:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "5899:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5935:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5943:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 788,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															795,
															824
														],
														"referencedDeclaration": 824,
														"src": "5916:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 787,
												"id": 793,
												"nodeType": "Return",
												"src": "5909:80:6"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5827:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5843:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "5885:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:6"
									},
									"scope": 954,
									"src": "5799:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "6338:168:6",
										"statements": [
											{
												"assignments": [
													808,
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "6349:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "6363:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"id": 813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "6408:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 811,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6390:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "6457:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "6465:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 819,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "6474:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 820,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "6486:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 816,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "6430:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 806,
												"id": 822,
												"nodeType": "Return",
												"src": "6423:76:6"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6217:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6241:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6268:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:6"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "6324:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:6"
									},
									"scope": 954,
									"src": "6180:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6782:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 835,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6820:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "6828:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 834,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															841,
															870
														],
														"referencedDeclaration": 870,
														"src": "6799:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 833,
												"id": 839,
												"nodeType": "Return",
												"src": "6792:84:6"
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6715:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6731:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:6"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6768:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:6"
									},
									"scope": 954,
									"src": "6685:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7224:170:6",
										"statements": [
											{
												"assignments": [
													854,
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7235:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 853,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 869,
														"src": "7249:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 855,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "7296:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 857,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7276:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 863,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7345:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "7353:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 865,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7362:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 866,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "7374:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 862,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "7318:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 852,
												"id": 868,
												"nodeType": "Return",
												"src": "7311:76:6"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7108:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7132:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 845,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7159:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7210:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:6"
									},
									"scope": 954,
									"src": "7069:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "7876:434:6",
										"statements": [
											{
												"condition": {
													"id": 884,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 875,
													"src": "7890:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 906,
													"nodeType": "Block",
													"src": "8246:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 902,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "8268:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 903,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 879,
																		"src": "8280:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 901,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:6"
														}
													]
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "7886:418:6",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "7899:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 885,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "7917:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 897,
															"nodeType": "IfStatement",
															"src": "7913:286:6",
															"trueBody": {
																"id": 896,
																"nodeType": "Block",
																"src": "7941:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 891,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 873,
																							"src": "8143:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 890,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "8132:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 892,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 893,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 889,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 895,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 898,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "8219:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 883,
															"id": 899,
															"nodeType": "Return",
															"src": "8212:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7727:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7751:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7773:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7806:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "7862:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 881,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:6"
									},
									"scope": 954,
									"src": "7682:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "8691:135:6",
										"statements": [
											{
												"condition": {
													"id": 921,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 912,
													"src": "8705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "8762:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "8784:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 927,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 925,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "8776:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:6"
														}
													]
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "8701:119:6",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "8714:42:6",
													"statements": [
														{
															"expression": {
																"id": 922,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "8735:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 920,
															"id": 923,
															"nodeType": "Return",
															"src": "8728:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8566:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8588:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8621:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:6"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "8677:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:6"
									},
									"scope": 954,
									"src": "8531:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "8915:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 940,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "8991:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "9321:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 947,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "9342:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 946,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:6"
														}
													]
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "8987:379:6",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "9014:301:6",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9172:133:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 935,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 935,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:6",
																	"valueSize": 1
																}
															],
															"id": 944,
															"nodeType": "InlineAssembly",
															"src": "9163:142:6"
														}
													]
												}
											}
										]
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8849:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "8874:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:6"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:6"
									},
									"scope": 954,
									"src": "8832:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 955,
							"src": "194:9180:6",
							"usedErrors": []
						}
					],
					"src": "101:9274:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"Initializable": [
							624
						]
					},
					"id": 997,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 957,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 997,
							"sourceUnit": 625,
							"src": "110:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 959,
										"name": "Initializable",
										"nameLocations": [
											"691:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 624,
										"src": "691:13:7"
									},
									"id": 960,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 958,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 996,
							"linearizedBaseContracts": [
								996,
								624
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "763:7:7",
										"statements": []
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 963,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 962,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "746:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:7"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:7"
									},
									"scope": 996,
									"src": "711:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "838:7:7",
										"statements": []
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 968,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "821:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:7"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:7"
									},
									"scope": 996,
									"src": "776:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "912:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 977,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 976,
												"id": 979,
												"nodeType": "Return",
												"src": "922:17:7"
											}
										]
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:7"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:7"
									},
									"scope": 996,
									"src": "850:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "1019:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 986,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 985,
												"id": 988,
												"nodeType": "Return",
												"src": "1029:15:7"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1003:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 983,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:7"
									},
									"scope": 996,
									"src": "952:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 995,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 996,
									"src": "1316:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 992,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 994,
										"length": {
											"hexValue": "3530",
											"id": 993,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 997,
							"src": "651:693:7",
							"usedErrors": []
						}
					],
					"src": "86:1259:7"
				},
				"id": 7
			},
			"erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/implementation/TrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							954
						],
						"ContextUpgradeable": [
							996
						],
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"ITrustedIssuersRegistry": [
							1684
						],
						"Initializable": [
							624
						],
						"OwnableUpgradeable": [
							455
						],
						"TIRStorage": [
							1707
						],
						"TrustedIssuersRegistry": [
							1594
						]
					},
					"id": 1595,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 998,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:8"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 60,
							"src": "62:67:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1000,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 456,
							"src": "130:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
							"file": "../interface/ITrustedIssuersRegistry.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 1685,
							"src": "206:50:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "erc3643/erc3643/registry/storage/TIRStorage.sol",
							"file": "../storage/TIRStorage.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 1708,
							"src": "257:35:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1003,
										"name": "ITrustedIssuersRegistry",
										"nameLocations": [
											"333:23:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1684,
										"src": "333:23:8"
									},
									"id": 1004,
									"nodeType": "InheritanceSpecifier",
									"src": "333:23:8"
								},
								{
									"baseName": {
										"id": 1005,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"362:18:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "362:18:8"
									},
									"id": 1006,
									"nodeType": "InheritanceSpecifier",
									"src": "362:18:8"
								},
								{
									"baseName": {
										"id": 1007,
										"name": "TIRStorage",
										"nameLocations": [
											"386:10:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1707,
										"src": "386:10:8"
									},
									"id": 1008,
									"nodeType": "InheritanceSpecifier",
									"src": "386:10:8"
								}
							],
							"canonicalName": "TrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1594,
							"linearizedBaseContracts": [
								1594,
								1707,
								455,
								996,
								624,
								1684
							],
							"name": "TrustedIssuersRegistry",
							"nameLocation": "303:22:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "440:33:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1013,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "450:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "450:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "450:16:8"
											}
										]
									},
									"functionSelector": "e1c7392a",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1011,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1010,
												"name": "initializer",
												"nameLocations": [
													"428:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 526,
												"src": "428:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "428:11:8"
										}
									],
									"name": "init",
									"nameLocation": "412:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:8"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "440:0:8"
									},
									"scope": 1594,
									"src": "403:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1627
									],
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "694:973:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1033,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "733:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "725:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1031,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "725:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "725:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "760:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "752:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1035,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "752:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "752:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "725:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "776:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1030,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "704:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "704:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "704:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1044,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "850:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1049,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1047,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "884:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "876:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1045,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "876:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "876:23:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "850:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "901:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "850:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "911:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "850:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "747275737465642049737375657220616c726561647920657869737473",
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "926:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82",
																"typeString": "literal_string \"trusted Issuer already exists\""
															},
															"value": "trusted Issuer already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4cb688b3c4a2dd0c26630ea7cacb1c02095c00734f9ed8a5d4e712c0fd8e7b82",
																"typeString": "literal_string \"trusted Issuer already exists\""
															}
														],
														"id": 1043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "829:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:138:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "829:138:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1057,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "998:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1011:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "998:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1020:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "998:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472757374656420636c61696d20746f706963732063616e6e6f7420626520656d707479",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1035:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277",
																"typeString": "literal_string \"trusted claim topics cannot be empty\""
															},
															"value": "trusted claim topics cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6a6ea1170336f754583b76f6b80f11e49a78299b0a6e7d3198454d9d1e2a277",
																"typeString": "literal_string \"trusted claim topics cannot be empty\""
															}
														],
														"id": 1056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "977:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:106:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "977:106:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1065,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "1114:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1127:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1114:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3135",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1137:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "1114:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742068617665206d6f7265207468616e20313520636c61696d20746f70696373",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1153:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															},
															"value": "cannot have more than 15 claim topics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1093:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1093:109:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "1093:109:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1073,
																	"name": "_trustedIssuers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "1233:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																		"typeString": "contract IClaimIssuer[] storage ref"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1249:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1233:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "3530",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1258:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "1233:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742068617665206d6f7265207468616e20353020747275737465642069737375657273",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1274:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73",
																"typeString": "literal_string \"cannot have more than 50 trusted issuers\""
															},
															"value": "cannot have more than 50 trusted issuers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc88850734b372efc8e15446b47ae99454d3608cd9fa2714a31e18b6aec63d73",
																"typeString": "literal_string \"cannot have more than 50 trusted issuers\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1212:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1212:114:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "1212:114:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "1357:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															}
														],
														"expression": {
															"id": 1080,
															"name": "_trustedIssuers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "1336:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																"typeString": "contract IClaimIssuer[] storage ref"
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1352:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1336:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$59_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$",
															"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1336:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "1336:36:8"
											},
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1086,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "1382:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1091,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1089,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "1416:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																],
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1408:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1087,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1408:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1408:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1382:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1092,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "1435:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "1382:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "1382:65:8"
											},
											{
												"body": {
													"id": 1115,
													"nodeType": "Block",
													"src": "1507:91:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1112,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "1572:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1106,
																			"name": "_claimTopicsToTrustedIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1702,
																			"src": "1521:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																				"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																			}
																		},
																		"id": 1110,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1107,
																				"name": "_claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1024,
																				"src": "1550:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1109,
																			"indexExpression": {
																				"id": 1108,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1096,
																				"src": "1563:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1550:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1521:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1567:4:8",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1521:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$59_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$",
																		"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1521:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1114,
															"nodeType": "ExpressionStatement",
															"src": "1521:66:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "1477:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1100,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "1481:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1494:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1481:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1477:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"initializationExpression": {
													"assignments": [
														1096
													],
													"declarations": [
														{
															"constant": false,
															"id": 1096,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1470:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1116,
															"src": "1462:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1095,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1462:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1098,
													"initialValue": {
														"hexValue": "30",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1474:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1462:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1502:3:8",
														"subExpression": {
															"id": 1103,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "1502:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1105,
													"nodeType": "ExpressionStatement",
													"src": "1502:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1457:141:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1118,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "1631:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															}
														},
														{
															"id": 1119,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "1647:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1117,
														"name": "TrustedIssuerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "1612:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$59_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (contract IClaimIssuer,uint256[] memory)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "EmitStatement",
												"src": "1607:53:8"
											}
										]
									},
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "479:72:8",
										"text": "  @dev See {ITrustedIssuersRegistry-addTrustedIssuer}."
									},
									"functionSelector": "9f63ea98",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1028,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1027,
												"name": "onlyOwner",
												"nameLocations": [
													"684:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "684:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "684:9:8"
										}
									],
									"name": "addTrustedIssuer",
									"nameLocation": "565:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1026,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "675:8:8"
									},
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "604:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "591:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1019,
														"name": "IClaimIssuer",
														"nameLocations": [
															"591:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "591:12:8"
													},
													"referencedDeclaration": 59,
													"src": "591:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "647:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "628:31:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1022,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "628:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1023,
													"nodeType": "ArrayTypeName",
													"src": "628:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:84:8"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:0:8"
									},
									"scope": 1594,
									"src": "556:1111:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1633
									],
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "1867:1679:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1136,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "1906:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1898:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1134,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1898:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1898:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1933:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1925:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1138,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1925:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1898:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1949:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1877:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "1877:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1147,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "2023:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1152,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1150,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "2057:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2049:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1148,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2049:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2049:23:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2023:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2074:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2023:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2084:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2023:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542061207472757374656420697373756572",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2099:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															},
															"value": "NOT a trusted issuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															}
														],
														"id": 1146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2002:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2002:129:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "2002:129:8"
											},
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2149:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1289,
														"src": "2141:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2141:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"expression": {
														"id": 1161,
														"name": "_trustedIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "2158:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
															"typeString": "contract IClaimIssuer[] storage ref"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2174:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2158:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:39:8"
											},
											{
												"body": {
													"id": 1197,
													"nodeType": "Block",
													"src": "2227:209:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																	"typeString": "contract IClaimIssuer"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1174,
																		"name": "_trustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "2245:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 1176,
																	"indexExpression": {
																		"id": 1175,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "2261:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2245:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1177,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "2267:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																},
																"src": "2245:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1196,
															"nodeType": "IfStatement",
															"src": "2241:185:8",
															"trueBody": {
																"id": 1195,
																"nodeType": "Block",
																"src": "2283:143:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1179,
																					"name": "_trustedIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1691,
																					"src": "2301:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1181,
																				"indexExpression": {
																					"id": 1180,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "2317:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2301:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1182,
																					"name": "_trustedIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1691,
																					"src": "2322:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1186,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1185,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1183,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1160,
																						"src": "2338:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1184,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2347:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2338:10:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2322:27:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "2301:48:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																				"typeString": "contract IClaimIssuer"
																			}
																		},
																		"id": 1188,
																		"nodeType": "ExpressionStatement",
																		"src": "2301:48:8"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1189,
																					"name": "_trustedIssuers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1691,
																					"src": "2367:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2383:3:8",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "2367:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$",
																					"typeString": "function (contract IClaimIssuer[] storage pointer)"
																				}
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2367:21:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1193,
																		"nodeType": "ExpressionStatement",
																		"src": "2367:21:8"
																	},
																	{
																		"id": 1194,
																		"nodeType": "Break",
																		"src": "2406:5:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1168,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "2210:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1169,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "2214:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2210:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1198,
												"initializationExpression": {
													"assignments": [
														1165
													],
													"declarations": [
														{
															"constant": false,
															"id": 1165,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2203:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1198,
															"src": "2195:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1164,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2195:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1167,
													"initialValue": {
														"hexValue": "30",
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2207:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2195:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2222:3:8",
														"subExpression": {
															"id": 1171,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "2222:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1173,
													"nodeType": "ExpressionStatement",
													"src": "2222:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2190:246:8"
											},
											{
												"body": {
													"id": 1275,
													"nodeType": "Block",
													"src": "2633:789:8",
													"statements": [
														{
															"assignments": [
																1216
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1216,
																	"mutability": "mutable",
																	"name": "claimTopic",
																	"nameLocation": "2655:10:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1275,
																	"src": "2647:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1215,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2647:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1225,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1217,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "2668:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1222,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1220,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "2719:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2711:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1218,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2711:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2711:23:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2668:80:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1224,
																"indexExpression": {
																	"id": 1223,
																	"name": "claimTopicIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "2749:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2668:97:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2647:118:8"
														},
														{
															"assignments": [
																1227
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1227,
																	"mutability": "mutable",
																	"name": "topicsLength",
																	"nameLocation": "2787:12:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1275,
																	"src": "2779:20:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1226,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2779:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1232,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1228,
																		"name": "_claimTopicsToTrustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "2802:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																			"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																		}
																	},
																	"id": 1230,
																	"indexExpression": {
																		"id": 1229,
																		"name": "claimTopic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "2831:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2802:40:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																		"typeString": "contract IClaimIssuer[] storage ref"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2860:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2802:64:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2779:87:8"
														},
														{
															"body": {
																"id": 1273,
																"nodeType": "Block",
																"src": "2923:489:8",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																				"typeString": "contract IClaimIssuer"
																			},
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1243,
																						"name": "_claimTopicsToTrustedIssuers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1702,
																						"src": "2966:28:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																							"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																						}
																					},
																					"id": 1245,
																					"indexExpression": {
																						"id": 1244,
																						"name": "claimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1216,
																						"src": "2995:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2966:40:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1247,
																				"indexExpression": {
																					"id": 1246,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1234,
																					"src": "3007:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2966:43:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1248,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1127,
																				"src": "3033:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "2966:81:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1272,
																		"nodeType": "IfStatement",
																		"src": "2941:457:8",
																		"trueBody": {
																			"id": 1271,
																			"nodeType": "Block",
																			"src": "3066:332:8",
																			"statements": [
																				{
																					"expression": {
																						"id": 1262,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1250,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1702,
																									"src": "3088:28:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1253,
																								"indexExpression": {
																									"id": 1251,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1216,
																									"src": "3117:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3088:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1254,
																							"indexExpression": {
																								"id": 1252,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1234,
																								"src": "3154:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "3088:89:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1255,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1702,
																									"src": "3180:28:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1257,
																								"indexExpression": {
																									"id": 1256,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1216,
																									"src": "3209:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3180:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1261,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1260,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1258,
																									"name": "topicsLength",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1227,
																									"src": "3246:12:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1259,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3261:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "3246:16:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3180:104:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"src": "3088:196:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																							"typeString": "contract IClaimIssuer"
																						}
																					},
																					"id": 1263,
																					"nodeType": "ExpressionStatement",
																					"src": "3088:196:8"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"baseExpression": {
																									"id": 1264,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1702,
																									"src": "3306:28:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1266,
																								"indexExpression": {
																									"id": 1265,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1216,
																									"src": "3335:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3306:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1267,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3347:3:8",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "3306:44:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$",
																								"typeString": "function (contract IClaimIssuer[] storage pointer)"
																							}
																						},
																						"id": 1268,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3306:46:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1269,
																					"nodeType": "ExpressionStatement",
																					"src": "3306:46:8"
																				},
																				{
																					"id": 1270,
																					"nodeType": "Break",
																					"src": "3374:5:8"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1237,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "2900:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1238,
																	"name": "topicsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "2904:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1274,
															"initializationExpression": {
																"assignments": [
																	1234
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1234,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2893:1:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 1274,
																		"src": "2885:9:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1233,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2885:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1236,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2897:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2885:13:8"
															},
															"loopExpression": {
																"expression": {
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2918:3:8",
																	"subExpression": {
																		"id": 1240,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "2918:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1242,
																"nodeType": "ExpressionStatement",
																"src": "2918:3:8"
															},
															"nodeType": "ForStatement",
															"src": "2880:532:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1203,
														"name": "claimTopicIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "2504:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1204,
																"name": "_trustedIssuerClaimTopics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "2534:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1209,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1207,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "2568:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2560:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1205,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2560:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2560:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2534:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2585:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2534:57:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2504:87:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"initializationExpression": {
													"assignments": [
														1200
													],
													"declarations": [
														{
															"constant": false,
															"id": 1200,
															"mutability": "mutable",
															"name": "claimTopicIndex",
															"nameLocation": "2471:15:8",
															"nodeType": "VariableDeclaration",
															"scope": 1276,
															"src": "2463:23:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1199,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2463:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1202,
													"initialValue": {
														"hexValue": "30",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2489:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2463:27:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2605:17:8",
														"subExpression": {
															"id": 1212,
															"name": "claimTopicIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "2605:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1214,
													"nodeType": "ExpressionStatement",
													"src": "2605:17:8"
												},
												"nodeType": "ForStatement",
												"src": "2445:977:8"
											},
											{
												"expression": {
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3431:57:8",
													"subExpression": {
														"baseExpression": {
															"id": 1277,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "3438:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1282,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1280,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "3472:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																],
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3464:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1278,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3464:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3464:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3438:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "3431:57:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1286,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "3524:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															}
														],
														"id": 1285,
														"name": "TrustedIssuerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "3503:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$59_$returns$__$",
															"typeString": "function (contract IClaimIssuer)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "EmitStatement",
												"src": "3498:41:8"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "1673:75:8",
										"text": "  @dev See {ITrustedIssuersRegistry-removeTrustedIssuer}."
									},
									"functionSelector": "b93d28eb",
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1130,
												"name": "onlyOwner",
												"nameLocations": [
													"1853:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "1853:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1853:9:8"
										}
									],
									"name": "removeTrustedIssuer",
									"nameLocation": "1762:19:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1129,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1836:8:8"
									},
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "1795:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "1782:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1126,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1125,
														"name": "IClaimIssuer",
														"nameLocations": [
															"1782:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "1782:12:8"
													},
													"referencedDeclaration": 59,
													"src": "1782:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1781:29:8"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1867:0:8"
									},
									"scope": 1594,
									"src": "1753:1793:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1642
									],
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "3781:1671:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1306,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "3820:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1304,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3812:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3812:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3847:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3839:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3839:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3839:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3812:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420617267756d656e74202d207a65726f2061646472657373",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3863:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															},
															"value": "invalid argument - zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9971da9ec5e916eb597ca09c1aeb5bba8afd4ac2d356663395e3ab6bc371a543",
																"typeString": "literal_string \"invalid argument - zero address\""
															}
														],
														"id": 1303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3791:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3791:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "3791:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1317,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "3937:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1322,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1320,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "3971:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3963:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1318,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3963:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3963:23:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3937:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3988:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3937:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3998:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3937:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4f542061207472757374656420697373756572",
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4013:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															},
															"value": "NOT a trusted issuer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0b31eeced0a8dc49b8ea327f22c12bb425c87808d0af680a6960fa1135688573",
																"typeString": "literal_string \"NOT a trusted issuer\""
															}
														],
														"id": 1316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3916:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:129:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "3916:129:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1330,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "4076:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4089:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4076:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3135",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4099:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															"src": "4076:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616e6e6f742068617665206d6f7265207468616e20313520636c61696d20746f70696373",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4115:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															},
															"value": "cannot have more than 15 claim topics"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6d0740130db5cd1a2a6ecdbc1dc343f3f377721a98303a128f8f18a54cc0160",
																"typeString": "literal_string \"cannot have more than 15 claim topics\""
															}
														],
														"id": 1329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4055:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4055:109:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "4055:109:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1338,
																	"name": "_claimTopics",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "4182:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4195:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4182:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4204:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4182:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636c61696d20746f706963732063616e6e6f7420626520656d707479",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4207:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36",
																"typeString": "literal_string \"claim topics cannot be empty\""
															},
															"value": "claim topics cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d663cdfe6c385f3148232466f81c068a6fec44b27da3c9bf19d56295a7a2dc36",
																"typeString": "literal_string \"claim topics cannot be empty\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4174:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4174:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "4174:64:8"
											},
											{
												"body": {
													"id": 1421,
													"nodeType": "Block",
													"src": "4383:775:8",
													"statements": [
														{
															"assignments": [
																1362
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1362,
																	"mutability": "mutable",
																	"name": "claimTopic",
																	"nameLocation": "4405:10:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1421,
																	"src": "4397:18:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1361,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4397:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1371,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1363,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "4418:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1368,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1366,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "4469:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4461:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1364,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4461:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4461:23:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4418:80:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1370,
																"indexExpression": {
																	"id": 1369,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "4499:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4418:83:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4397:104:8"
														},
														{
															"assignments": [
																1373
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1373,
																	"mutability": "mutable",
																	"name": "topicsLength",
																	"nameLocation": "4523:12:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1421,
																	"src": "4515:20:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1372,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4515:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1378,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1374,
																		"name": "_claimTopicsToTrustedIssuers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "4538:28:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																			"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																		}
																	},
																	"id": 1376,
																	"indexExpression": {
																		"id": 1375,
																		"name": "claimTopic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1362,
																		"src": "4567:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4538:40:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																		"typeString": "contract IClaimIssuer[] storage ref"
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4596:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4538:64:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4515:87:8"
														},
														{
															"body": {
																"id": 1419,
																"nodeType": "Block",
																"src": "4659:489:8",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																				"typeString": "contract IClaimIssuer"
																			},
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1389,
																						"name": "_claimTopicsToTrustedIssuers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1702,
																						"src": "4702:28:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																							"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																						}
																					},
																					"id": 1391,
																					"indexExpression": {
																						"id": 1390,
																						"name": "claimTopic",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1362,
																						"src": "4731:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4702:40:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																						"typeString": "contract IClaimIssuer[] storage ref"
																					}
																				},
																				"id": 1393,
																				"indexExpression": {
																					"id": 1392,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1380,
																					"src": "4743:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4702:43:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1394,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "4769:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			},
																			"src": "4702:81:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1418,
																		"nodeType": "IfStatement",
																		"src": "4677:457:8",
																		"trueBody": {
																			"id": 1417,
																			"nodeType": "Block",
																			"src": "4802:332:8",
																			"statements": [
																				{
																					"expression": {
																						"id": 1408,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1396,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1702,
																									"src": "4824:28:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1399,
																								"indexExpression": {
																									"id": 1397,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1362,
																									"src": "4853:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4824:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1400,
																							"indexExpression": {
																								"id": 1398,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1380,
																								"src": "4890:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "4824:89:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 1401,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1702,
																									"src": "4916:28:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1403,
																								"indexExpression": {
																									"id": 1402,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1362,
																									"src": "4945:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4916:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1407,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1406,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1404,
																									"name": "topicsLength",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1373,
																									"src": "4982:12:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 1405,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4997:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "4982:16:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4916:104:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																								"typeString": "contract IClaimIssuer"
																							}
																						},
																						"src": "4824:196:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																							"typeString": "contract IClaimIssuer"
																						}
																					},
																					"id": 1409,
																					"nodeType": "ExpressionStatement",
																					"src": "4824:196:8"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"baseExpression": {
																									"id": 1410,
																									"name": "_claimTopicsToTrustedIssuers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1702,
																									"src": "5042:28:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																										"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																									}
																								},
																								"id": 1412,
																								"indexExpression": {
																									"id": 1411,
																									"name": "claimTopic",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1362,
																									"src": "5071:10:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5042:40:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																									"typeString": "contract IClaimIssuer[] storage ref"
																								}
																							},
																							"id": 1413,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5083:3:8",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "5042:44:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$",
																								"typeString": "function (contract IClaimIssuer[] storage pointer)"
																							}
																						},
																						"id": 1414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5042:46:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1415,
																					"nodeType": "ExpressionStatement",
																					"src": "5042:46:8"
																				},
																				{
																					"id": 1416,
																					"nodeType": "Break",
																					"src": "5110:5:8"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1383,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "4636:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1384,
																	"name": "topicsLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "4640:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4636:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1420,
															"initializationExpression": {
																"assignments": [
																	1380
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1380,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "4629:1:8",
																		"nodeType": "VariableDeclaration",
																		"scope": 1420,
																		"src": "4621:9:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1379,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4621:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1382,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4633:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4621:13:8"
															},
															"loopExpression": {
																"expression": {
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4654:3:8",
																	"subExpression": {
																		"id": 1386,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "4654:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1388,
																"nodeType": "ExpressionStatement",
																"src": "4654:3:8"
															},
															"nodeType": "ForStatement",
															"src": "4616:532:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1349,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "4294:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1350,
																"name": "_trustedIssuerClaimTopics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "4298:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1355,
															"indexExpression": {
																"arguments": [
																	{
																		"id": 1353,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "4332:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4324:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1351,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4324:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4324:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4298:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4349:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4298:57:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4294:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1422,
												"initializationExpression": {
													"assignments": [
														1346
													],
													"declarations": [
														{
															"constant": false,
															"id": 1346,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4275:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1422,
															"src": "4267:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1345,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4267:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1348,
													"initialValue": {
														"hexValue": "30",
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4279:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4267:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4369:3:8",
														"subExpression": {
															"id": 1358,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "4369:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1360,
													"nodeType": "ExpressionStatement",
													"src": "4369:3:8"
												},
												"nodeType": "ForStatement",
												"src": "4249:909:8"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1423,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "5167:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1428,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1426,
																	"name": "_trustedIssuer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "5201:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																		"typeString": "contract IClaimIssuer"
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5193:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5193:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5193:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5167:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "_claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "5220:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
															"typeString": "uint256[] calldata"
														}
													},
													"src": "5167:65:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "5167:65:8"
											},
											{
												"body": {
													"id": 1452,
													"nodeType": "Block",
													"src": "5292:91:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1449,
																		"name": "_trustedIssuer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "5357:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																			"typeString": "contract IClaimIssuer"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1443,
																			"name": "_claimTopicsToTrustedIssuers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1702,
																			"src": "5306:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
																				"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
																			}
																		},
																		"id": 1447,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1444,
																				"name": "_claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1297,
																				"src": "5335:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1446,
																			"indexExpression": {
																				"id": 1445,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1433,
																				"src": "5348:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5335:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5306:45:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
																			"typeString": "contract IClaimIssuer[] storage ref"
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5352:4:8",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "5306:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$_t_contract$_IClaimIssuer_$59_$returns$__$bound_to$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr_$",
																		"typeString": "function (contract IClaimIssuer[] storage pointer,contract IClaimIssuer)"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5306:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1451,
															"nodeType": "ExpressionStatement",
															"src": "5306:66:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1436,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "5262:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1437,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "5266:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5279:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5266:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5262:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"initializationExpression": {
													"assignments": [
														1433
													],
													"declarations": [
														{
															"constant": false,
															"id": 1433,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5255:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1453,
															"src": "5247:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1432,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5247:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1435,
													"initialValue": {
														"hexValue": "30",
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5247:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5287:3:8",
														"subExpression": {
															"id": 1440,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "5287:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1442,
													"nodeType": "ExpressionStatement",
													"src": "5287:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5242:141:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1455,
															"name": "_trustedIssuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "5416:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															}
														},
														{
															"id": 1456,
															"name": "_claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "5432:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																"typeString": "contract IClaimIssuer"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1454,
														"name": "ClaimTopicsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "5397:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_contract$_IClaimIssuer_$59_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (contract IClaimIssuer,uint256[] memory)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5397:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "EmitStatement",
												"src": "5392:53:8"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "3552:79:8",
										"text": "  @dev See {ITrustedIssuersRegistry-updateIssuerClaimTopics}."
									},
									"functionSelector": "04bc7e84",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1301,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1300,
												"name": "onlyOwner",
												"nameLocations": [
													"3771:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "3771:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3771:9:8"
										}
									],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "3645:23:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1299,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3762:8:8"
									},
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "3691:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3678:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1293,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1292,
														"name": "IClaimIssuer",
														"nameLocations": [
															"3678:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "3678:12:8"
													},
													"referencedDeclaration": 59,
													"src": "3678:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "3734:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3715:31:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1295,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3715:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1296,
													"nodeType": "ArrayTypeName",
													"src": "3715:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:84:8"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3781:0:8"
									},
									"scope": 1594,
									"src": "3636:1816:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1649
									],
									"body": {
										"id": 1471,
										"nodeType": "Block",
										"src": "5656:39:8",
										"statements": [
											{
												"expression": {
													"id": 1469,
													"name": "_trustedIssuers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1691,
													"src": "5673:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
														"typeString": "contract IClaimIssuer[] storage ref"
													}
												},
												"functionReturnParameters": 1468,
												"id": 1470,
												"nodeType": "Return",
												"src": "5666:22:8"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "5458:73:8",
										"text": "  @dev See {ITrustedIssuersRegistry-getTrustedIssuers}."
									},
									"functionSelector": "d9dd24c5",
									"id": 1472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "5545:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1463,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5603:8:8"
									},
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5562:2:8"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1472,
												"src": "5629:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1465,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1464,
															"name": "IClaimIssuer",
															"nameLocations": [
																"5629:12:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "5629:12:8"
														},
														"referencedDeclaration": 59,
														"src": "5629:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1466,
													"nodeType": "ArrayTypeName",
													"src": "5629:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:23:8"
									},
									"scope": 1594,
									"src": "5536:159:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1658
									],
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "5943:64:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1483,
														"name": "_claimTopicsToTrustedIssuers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "5960:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
															"typeString": "mapping(uint256 => contract IClaimIssuer[] storage ref)"
														}
													},
													"id": 1485,
													"indexExpression": {
														"id": 1484,
														"name": "claimTopic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "5989:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5960:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
														"typeString": "contract IClaimIssuer[] storage ref"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1486,
												"nodeType": "Return",
												"src": "5953:47:8"
											}
										]
									},
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "5701:86:8",
										"text": "  @dev See {ITrustedIssuersRegistry-getTrustedIssuersForClaimTopic}."
									},
									"functionSelector": "52c111d1",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "5801:30:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5890:8:8"
									},
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "5840:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "5832:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5832:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5831:20:8"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "5916:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1479,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1478,
															"name": "IClaimIssuer",
															"nameLocations": [
																"5916:12:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "5916:12:8"
														},
														"referencedDeclaration": 59,
														"src": "5916:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1480,
													"nodeType": "ArrayTypeName",
													"src": "5916:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5915:23:8"
									},
									"scope": 1594,
									"src": "5792:215:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1665
									],
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "6205:125:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1497,
																"name": "_trustedIssuerClaimTopics",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1696,
																"src": "6219:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1499,
															"indexExpression": {
																"id": 1498,
																"name": "_issuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "6245:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6219:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6254:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6219:41:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6263:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6219:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1506,
												"nodeType": "IfStatement",
												"src": "6215:87:8",
												"trueBody": {
													"id": 1505,
													"nodeType": "Block",
													"src": "6266:36:8",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6287:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1496,
															"id": 1504,
															"nodeType": "Return",
															"src": "6280:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6318:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1496,
												"id": 1508,
												"nodeType": "Return",
												"src": "6311:12:8"
											}
										]
									},
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "6013:71:8",
										"text": "  @dev See {ITrustedIssuersRegistry-isTrustedIssuer}."
									},
									"functionSelector": "ef2ed1a4",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "6098:15:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1493,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6169:8:8"
									},
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "6122:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "6114:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6114:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6113:17:8"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "6195:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6195:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6194:6:8"
									},
									"scope": 1594,
									"src": "6089:241:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1674
									],
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "6576:221:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1522,
																		"name": "_trustedIssuerClaimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1696,
																		"src": "6607:25:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																			"typeString": "mapping(address => uint256[] storage ref)"
																		}
																	},
																	"id": 1527,
																	"indexExpression": {
																		"arguments": [
																			{
																				"id": 1525,
																				"name": "_trustedIssuer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1514,
																				"src": "6641:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																					"typeString": "contract IClaimIssuer"
																				}
																			],
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6633:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1523,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6633:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6633:23:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6607:50:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6658:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6607:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6668:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6607:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "747275737465642049737375657220646f65736e2774206578697374",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6683:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730",
																"typeString": "literal_string \"trusted Issuer doesn't exist\""
															},
															"value": "trusted Issuer doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15f0c9128dfa46bb95add130c371764e9c90d5f89c3e2a9b3ad56503a7919730",
																"typeString": "literal_string \"trusted Issuer doesn't exist\""
															}
														],
														"id": 1521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6586:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6586:137:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "6586:137:8"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1534,
														"name": "_trustedIssuerClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "6740:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1539,
													"indexExpression": {
														"arguments": [
															{
																"id": 1537,
																"name": "_trustedIssuer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1514,
																"src": "6774:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																	"typeString": "contract IClaimIssuer"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IClaimIssuer_$59",
																	"typeString": "contract IClaimIssuer"
																}
															],
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6766:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1535,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6766:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6766:23:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6740:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 1520,
												"id": 1540,
												"nodeType": "Return",
												"src": "6733:57:8"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "6336:83:8",
										"text": "  @dev See {ITrustedIssuersRegistry-getTrustedIssuerClaimTopics}."
									},
									"functionSelector": "c28fb278",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "6433:27:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1516,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6528:8:8"
									},
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "6474:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "6461:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1512,
														"name": "IClaimIssuer",
														"nameLocations": [
															"6461:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "6461:12:8"
													},
													"referencedDeclaration": 59,
													"src": "6461:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6460:29:8"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "6554:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1517,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6554:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1518,
													"nodeType": "ArrayTypeName",
													"src": "6554:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:18:8"
									},
									"scope": 1594,
									"src": "6424:373:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1683
									],
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "7012:321:8",
										"statements": [
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "7030:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "7022:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7022:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1559,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1555,
															"name": "_trustedIssuerClaimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1696,
															"src": "7039:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1557,
														"indexExpression": {
															"id": 1556,
															"name": "_issuer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "7065:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7039:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7074:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7039:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7022:58:8"
											},
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "claimTopics",
														"nameLocation": "7107:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "7090:28:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1562,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7090:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1563,
															"nodeType": "ArrayTypeName",
															"src": "7090:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1568,
												"initialValue": {
													"baseExpression": {
														"id": 1565,
														"name": "_trustedIssuerClaimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "7121:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
															"typeString": "mapping(address => uint256[] storage ref)"
														}
													},
													"id": 1567,
													"indexExpression": {
														"id": 1566,
														"name": "_issuer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "7147:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7121:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7090:65:8"
											},
											{
												"body": {
													"id": 1588,
													"nodeType": "Block",
													"src": "7202:103:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1579,
																		"name": "claimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "7220:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1581,
																	"indexExpression": {
																		"id": 1580,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1570,
																		"src": "7232:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7220:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1582,
																	"name": "_claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1547,
																	"src": "7238:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7220:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1587,
															"nodeType": "IfStatement",
															"src": "7216:79:8",
															"trueBody": {
																"id": 1586,
																"nodeType": "Block",
																"src": "7251:44:8",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7276:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1552,
																		"id": 1585,
																		"nodeType": "Return",
																		"src": "7269:11:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1573,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1570,
														"src": "7185:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1574,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "7189:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7185:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1589,
												"initializationExpression": {
													"assignments": [
														1570
													],
													"declarations": [
														{
															"constant": false,
															"id": 1570,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "7178:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1589,
															"src": "7170:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1569,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7170:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1572,
													"initialValue": {
														"hexValue": "30",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7182:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7170:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7197:3:8",
														"subExpression": {
															"id": 1576,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "7197:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1578,
													"nodeType": "ExpressionStatement",
													"src": "7197:3:8"
												},
												"nodeType": "ForStatement",
												"src": "7165:140:8"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7321:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1552,
												"id": 1591,
												"nodeType": "Return",
												"src": "7314:12:8"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "6803:69:8",
										"text": "  @dev See {ITrustedIssuersRegistry-hasClaimTopic}."
									},
									"functionSelector": "34a89987",
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "6886:13:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1549,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6976:8:8"
									},
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "6908:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "6900:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6900:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "6925:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "6917:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:38:8"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "7002:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7002:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7001:6:8"
									},
									"scope": 1594,
									"src": "6877:456:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1595,
							"src": "294:7041:8",
							"usedErrors": []
						}
					],
					"src": "37:7299:8"
				},
				"id": 8
			},
			"erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/interface/ITrustedIssuersRegistry.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"ITrustedIssuersRegistry": [
							1684
						]
					},
					"id": 1685,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1596,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:9"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1685,
							"sourceUnit": 60,
							"src": "62:67:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITrustedIssuersRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1684,
							"linearizedBaseContracts": [
								1684
							],
							"name": "ITrustedIssuersRegistry",
							"nameLocation": "141:23:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "fedc33fd34859594822c0ff6f3f4f9fc279cc6d5cae53068f706a088e4500872",
									"id": 1605,
									"name": "TrustedIssuerAdded",
									"nameLocation": "177:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "226:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "205:34:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1599,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1598,
														"name": "IClaimIssuer",
														"nameLocations": [
															"205:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "205:12:9"
													},
													"referencedDeclaration": 59,
													"src": "205:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "259:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "249:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1601,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "249:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1602,
													"nodeType": "ArrayTypeName",
													"src": "249:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:81:9"
									},
									"src": "171:106:9"
								},
								{
									"anonymous": false,
									"eventSelector": "2214ded40113cc3fb63fc206cafee88270b0a903dac7245d54efdde30ebb0321",
									"id": 1610,
									"name": "TrustedIssuerRemoved",
									"nameLocation": "289:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "331:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "310:34:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1607,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1606,
														"name": "IClaimIssuer",
														"nameLocations": [
															"310:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "310:12:9"
													},
													"referencedDeclaration": 59,
													"src": "310:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:36:9"
									},
									"src": "283:63:9"
								},
								{
									"anonymous": false,
									"eventSelector": "ec753cfc52044f61676f18a11e500093a9f2b1cd5e4942bc476f2b0438159bcf",
									"id": 1618,
									"name": "ClaimTopicsUpdated",
									"nameLocation": "358:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"indexed": true,
												"mutability": "mutable",
												"name": "trustedIssuer",
												"nameLocation": "407:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "386:34:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1612,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1611,
														"name": "IClaimIssuer",
														"nameLocations": [
															"386:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "386:12:9"
													},
													"referencedDeclaration": 59,
													"src": "386:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"indexed": false,
												"mutability": "mutable",
												"name": "claimTopics",
												"nameLocation": "440:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "430:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1614,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "430:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1615,
													"nodeType": "ArrayTypeName",
													"src": "430:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "376:81:9"
									},
									"src": "352:106:9"
								},
								{
									"functionSelector": "9f63ea98",
									"id": 1627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTrustedIssuer",
									"nameLocation": "473:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "512:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "499:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1619,
														"name": "IClaimIssuer",
														"nameLocations": [
															"499:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "499:12:9"
													},
													"referencedDeclaration": 59,
													"src": "499:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "555:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "536:31:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1622,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "536:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1623,
													"nodeType": "ArrayTypeName",
													"src": "536:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:84:9"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:9"
									},
									"scope": 1684,
									"src": "464:119:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b93d28eb",
									"id": 1633,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTrustedIssuer",
									"nameLocation": "598:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "631:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "618:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1629,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1628,
														"name": "IClaimIssuer",
														"nameLocations": [
															"618:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "618:12:9"
													},
													"referencedDeclaration": 59,
													"src": "618:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:29:9"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:0:9"
									},
									"scope": 1684,
									"src": "589:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04bc7e84",
									"id": 1642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateIssuerClaimTopics",
									"nameLocation": "671:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "717:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "704:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1634,
														"name": "IClaimIssuer",
														"nameLocations": [
															"704:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "704:12:9"
													},
													"referencedDeclaration": 59,
													"src": "704:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "_claimTopics",
												"nameLocation": "760:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "741:31:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1637,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "741:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1638,
													"nodeType": "ArrayTypeName",
													"src": "741:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:84:9"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "787:0:9"
									},
									"scope": 1684,
									"src": "662:126:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d9dd24c5",
									"id": 1649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuers",
									"nameLocation": "803:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:9"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "846:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1645,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1644,
															"name": "IClaimIssuer",
															"nameLocations": [
																"846:12:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "846:12:9"
														},
														"referencedDeclaration": 59,
														"src": "846:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1646,
													"nodeType": "ArrayTypeName",
													"src": "846:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:23:9"
									},
									"scope": 1684,
									"src": "794:75:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "52c111d1",
									"id": 1658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuersForClaimTopic",
									"nameLocation": "884:30:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "923:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "915:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:20:9"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "982:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_memory_ptr",
													"typeString": "contract IClaimIssuer[]"
												},
												"typeName": {
													"baseType": {
														"id": 1654,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1653,
															"name": "IClaimIssuer",
															"nameLocations": [
																"982:12:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 59,
															"src": "982:12:9"
														},
														"referencedDeclaration": 59,
														"src": "982:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IClaimIssuer_$59",
															"typeString": "contract IClaimIssuer"
														}
													},
													"id": 1655,
													"nodeType": "ArrayTypeName",
													"src": "982:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
														"typeString": "contract IClaimIssuer[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:23:9"
									},
									"scope": 1684,
									"src": "875:130:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ef2ed1a4",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedIssuer",
									"nameLocation": "1020:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "1044:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "1036:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1036:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1035:17:9"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "1076:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1076:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:6:9"
									},
									"scope": 1684,
									"src": "1011:71:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c28fb278",
									"id": 1674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedIssuerClaimTopics",
									"nameLocation": "1097:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "_trustedIssuer",
												"nameLocation": "1138:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1125:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												},
												"typeName": {
													"id": 1667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1666,
														"name": "IClaimIssuer",
														"nameLocations": [
															"1125:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 59,
														"src": "1125:12:9"
													},
													"referencedDeclaration": 59,
													"src": "1125:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IClaimIssuer_$59",
														"typeString": "contract IClaimIssuer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:29:9"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1674,
												"src": "1201:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1670,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1201:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1671,
													"nodeType": "ArrayTypeName",
													"src": "1201:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:18:9"
									},
									"scope": 1684,
									"src": "1088:131:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "34a89987",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasClaimTopic",
									"nameLocation": "1234:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "_issuer",
												"nameLocation": "1256:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "1248:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1273:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "1265:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1247:38:9"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "1333:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1333:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:6:9"
									},
									"scope": 1684,
									"src": "1225:114:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1685,
							"src": "131:1210:9",
							"usedErrors": []
						}
					],
					"src": "37:1305:9"
				},
				"id": 9
			},
			"erc3643/erc3643/registry/storage/TIRStorage.sol": {
				"ast": {
					"absolutePath": "erc3643/erc3643/registry/storage/TIRStorage.sol",
					"exportedSymbols": {
						"IClaimIssuer": [
							59
						],
						"IERC734": [
							206
						],
						"IERC735": [
							314
						],
						"IIdentity": [
							323
						],
						"TIRStorage": [
							1707
						]
					},
					"id": 1708,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1686,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:10"
						},
						{
							"absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
							"id": 1687,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1708,
							"sourceUnit": 60,
							"src": "62:67:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TIRStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707
							],
							"name": "TIRStorage",
							"nameLocation": "140:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1691,
									"mutability": "mutable",
									"name": "_trustedIssuers",
									"nameLocation": "251:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "227:39:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage",
										"typeString": "contract IClaimIssuer[]"
									},
									"typeName": {
										"baseType": {
											"id": 1689,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1688,
												"name": "IClaimIssuer",
												"nameLocations": [
													"227:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "227:12:10"
											},
											"referencedDeclaration": 59,
											"src": "227:12:10",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IClaimIssuer_$59",
												"typeString": "contract IClaimIssuer"
											}
										},
										"id": 1690,
										"nodeType": "ArrayTypeName",
										"src": "227:14:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
											"typeString": "contract IClaimIssuer[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1696,
									"mutability": "mutable",
									"name": "_trustedIssuerClaimTopics",
									"nameLocation": "395:25:10",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "356:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 1695,
										"keyType": {
											"id": 1692,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "364:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "356:29:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 1693,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "375:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1694,
											"nodeType": "ArrayTypeName",
											"src": "375:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1702,
									"mutability": "mutable",
									"name": "_claimTopicsToTrustedIssuers",
									"nameLocation": "548:28:10",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "504:72:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
										"typeString": "mapping(uint256 => contract IClaimIssuer[])"
									},
									"typeName": {
										"id": 1701,
										"keyType": {
											"id": 1697,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "512:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "504:34:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_$",
											"typeString": "mapping(uint256 => contract IClaimIssuer[])"
										},
										"valueType": {
											"baseType": {
												"id": 1699,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1698,
													"name": "IClaimIssuer",
													"nameLocations": [
														"523:12:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 59,
													"src": "523:12:10"
												},
												"referencedDeclaration": 59,
												"src": "523:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IClaimIssuer_$59",
													"typeString": "contract IClaimIssuer"
												}
											},
											"id": 1700,
											"nodeType": "ArrayTypeName",
											"src": "523:14:10",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_contract$_IClaimIssuer_$59_$dyn_storage_ptr",
												"typeString": "contract IClaimIssuer[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1706,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "603:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "583:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1703,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "583:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1705,
										"length": {
											"hexValue": "3439",
											"id": 1704,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "591:2:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "583:11:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1708,
							"src": "131:480:10",
							"usedErrors": []
						}
					],
					"src": "37:575:10"
				},
				"id": 10
			}
		}
	}
}